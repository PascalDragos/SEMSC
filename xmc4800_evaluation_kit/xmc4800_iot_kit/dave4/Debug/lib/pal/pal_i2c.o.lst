   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pal_i2c.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.invoke_upper_layer_callback,"ax",%progbits
  20              	 .align 2
  21              	 .global invoke_upper_layer_callback
  22              	 .thumb
  23              	 .thumb_func
  25              	invoke_upper_layer_callback:
  26              	.LFB480:
  27              	 .file 1 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800/pal_i2c.c"
   1:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** /**
   2:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * \copyright
   3:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * MIT License
   4:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
   5:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * Copyright (c) 2020 Infineon Technologies AG
   6:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
   7:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * Permission is hereby granted, free of charge, to any person obtaining a copy
   8:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * of this software and associated documentation files (the "Software"), to deal
   9:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * in the Software without restriction, including without limitation the rights
  10:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * copies of the Software, and to permit persons to whom the Software is
  12:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * furnished to do so, subject to the following conditions:
  13:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
  14:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * The above copyright notice and this permission notice shall be included in all
  15:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * copies or substantial portions of the Software.
  16:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
  17:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * SOFTWARE
  24:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
  25:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * \endcopyright
  26:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
  27:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * \author Infineon Technologies AG
  28:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
  29:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * \file pal_i2c.c
  30:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
  31:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * \brief   This file implements the platform abstraction layer(pal) APIs for I2C.
  32:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
  33:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * \ingroup  grPAL
  34:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** *
  35:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** * @{
  36:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** */
  37:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  38:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  39:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  40:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** #include <DAVE.h>
  41:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** #include "optiga/pal/pal_i2c.h"
  42:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  43:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** #define PAL_I2C_MASTER_MAX_BITRATE  (400U)
  44:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** /// @cond hidden
  45:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  46:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** _STATIC_H volatile uint32_t g_entry_count = 0;
  47:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** _STATIC_H const pal_i2c_t * gp_pal_i2c_current_ctx;
  48:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  49:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** //lint --e{715} suppress "This is implemented for overall completion of API"
  50:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** _STATIC_H pal_status_t pal_i2c_acquire(const void * p_i2c_context)
  51:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
  52:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (0 == g_entry_count)
  53:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
  54:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         g_entry_count++;
  55:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         if (1 == g_entry_count)
  56:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
  57:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             return PAL_STATUS_SUCCESS;
  58:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         }
  59:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
  60:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     return PAL_STATUS_FAILURE;
  61:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
  62:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  63:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** //lint --e{715} suppress "The unused p_i2c_context variable is kept for future enhancements"
  64:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** _STATIC_H void pal_i2c_release(const void * p_i2c_context)
  65:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     g_entry_count = 0;
  67:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
  68:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** /// @endcond
  69:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  70:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** void invoke_upper_layer_callback (const pal_i2c_t * p_pal_i2c_ctx, optiga_lib_status_t event)
  71:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
  28              	 .loc 1 71 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 08B5     	 push {r3,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 3,-8
  37              	 .cfi_offset 14,-4
  72:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     upper_layer_callback_t upper_layer_handler;
  73:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     //lint --e{611} suppress "void* function pointer is type casted to upper_layer_callback_t type"
  74:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     upper_layer_handler = (upper_layer_callback_t)p_pal_i2c_ctx->upper_layer_event_handler;
  75:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  76:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     upper_layer_handler(p_pal_i2c_ctx->p_upper_layer_ctx, event);
  38              	 .loc 1 76 0
  39 0002 C368     	 ldr r3,[r0,#12]
  40 0004 8068     	 ldr r0,[r0,#8]
  41              	.LVL1:
  42 0006 9847     	 blx r3
  43              	.LVL2:
  44              	.LBB36:
  45              	.LBB37:
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
  46              	 .loc 1 66 0
  47 0008 014B     	 ldr r3,.L3
  48 000a 0022     	 movs r2,#0
  49 000c 1A60     	 str r2,[r3]
  50 000e 08BD     	 pop {r3,pc}
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word .LANCHOR0
  55              	.LBE37:
  56              	.LBE36:
  57              	 .cfi_endproc
  58              	.LFE480:
  60              	 .section .text.i2c_master_end_of_transmit_callback,"ax",%progbits
  61              	 .align 2
  62              	 .global i2c_master_end_of_transmit_callback
  63              	 .thumb
  64              	 .thumb_func
  66              	i2c_master_end_of_transmit_callback:
  67              	.LFB481:
  77:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  78:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     //Release I2C Bus
  79:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     pal_i2c_release(p_pal_i2c_ctx->p_upper_layer_ctx);
  80:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
  81:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  82:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** /// @cond hidden
  83:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** void i2c_master_end_of_transmit_callback(void)
  84:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
  68              	 .loc 1 84 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72 0000 08B5     	 push {r3,lr}
  73              	.LCFI1:
  74              	 .cfi_def_cfa_offset 8
  75              	 .cfi_offset 3,-8
  76              	 .cfi_offset 14,-4
  85:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     invoke_upper_layer_callback(gp_pal_i2c_current_ctx, PAL_I2C_EVENT_SUCCESS);
  77              	 .loc 1 85 0
  78 0002 054B     	 ldr r3,.L7
  79 0004 1B68     	 ldr r3,[r3]
  80              	.LVL3:
  81              	.LBB38:
  82              	.LBB39:
  76:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  83              	 .loc 1 76 0
  84 0006 0021     	 movs r1,#0
  85 0008 DA68     	 ldr r2,[r3,#12]
  86 000a 9868     	 ldr r0,[r3,#8]
  87 000c 9047     	 blx r2
  88              	.LVL4:
  89              	.LBB40:
  90              	.LBB41:
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
  91              	 .loc 1 66 0
  92 000e 034B     	 ldr r3,.L7+4
  93 0010 0022     	 movs r2,#0
  94 0012 1A60     	 str r2,[r3]
  95 0014 08BD     	 pop {r3,pc}
  96              	.L8:
  97 0016 00BF     	 .align 2
  98              	.L7:
  99 0018 00000000 	 .word .LANCHOR1
 100 001c 00000000 	 .word .LANCHOR0
 101              	.LBE41:
 102              	.LBE40:
 103              	.LBE39:
 104              	.LBE38:
 105              	 .cfi_endproc
 106              	.LFE481:
 108              	 .section .text.i2c_master_end_of_receive_callback,"ax",%progbits
 109              	 .align 2
 110              	 .global i2c_master_end_of_receive_callback
 111              	 .thumb
 112              	 .thumb_func
 114              	i2c_master_end_of_receive_callback:
 115              	.LFB482:
  86:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
  87:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  88:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** void i2c_master_end_of_receive_callback(void)
  89:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
 116              	 .loc 1 89 0
 117              	 .cfi_startproc
 118              	 
 119              	 
 120 0000 08B5     	 push {r3,lr}
 121              	.LCFI2:
 122              	 .cfi_def_cfa_offset 8
 123              	 .cfi_offset 3,-8
 124              	 .cfi_offset 14,-4
  90:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     invoke_upper_layer_callback(gp_pal_i2c_current_ctx, PAL_I2C_EVENT_SUCCESS);
 125              	 .loc 1 90 0
 126 0002 054B     	 ldr r3,.L11
 127 0004 1B68     	 ldr r3,[r3]
 128              	.LVL5:
 129              	.LBB42:
 130              	.LBB43:
  76:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 131              	 .loc 1 76 0
 132 0006 0021     	 movs r1,#0
 133 0008 DA68     	 ldr r2,[r3,#12]
 134 000a 9868     	 ldr r0,[r3,#8]
 135 000c 9047     	 blx r2
 136              	.LVL6:
 137              	.LBB44:
 138              	.LBB45:
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 139              	 .loc 1 66 0
 140 000e 034B     	 ldr r3,.L11+4
 141 0010 0022     	 movs r2,#0
 142 0012 1A60     	 str r2,[r3]
 143 0014 08BD     	 pop {r3,pc}
 144              	.L12:
 145 0016 00BF     	 .align 2
 146              	.L11:
 147 0018 00000000 	 .word .LANCHOR1
 148 001c 00000000 	 .word .LANCHOR0
 149              	.LBE45:
 150              	.LBE44:
 151              	.LBE43:
 152              	.LBE42:
 153              	 .cfi_endproc
 154              	.LFE482:
 156              	 .section .text.i2c_master_error_detected_callback,"ax",%progbits
 157              	 .align 2
 158              	 .global i2c_master_error_detected_callback
 159              	 .thumb
 160              	 .thumb_func
 162              	i2c_master_error_detected_callback:
 163              	.LFB483:
  91:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
  92:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  93:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** void i2c_master_error_detected_callback(void)
  94:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
 164              	 .loc 1 94 0
 165              	 .cfi_startproc
 166              	 
 167              	 
 168 0000 38B5     	 push {r3,r4,r5,lr}
 169              	.LCFI3:
 170              	 .cfi_def_cfa_offset 16
 171              	 .cfi_offset 3,-16
 172              	 .cfi_offset 4,-12
 173              	 .cfi_offset 5,-8
 174              	 .cfi_offset 14,-4
  95:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     I2C_MASTER_t * p_i2c_master;
  96:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
  97:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     p_i2c_master = gp_pal_i2c_current_ctx->p_i2c_hw_config;
 175              	 .loc 1 97 0
 176 0002 124D     	 ldr r5,.L28
 177 0004 2B68     	 ldr r3,[r5]
 178 0006 1C68     	 ldr r4,[r3]
 179              	.LVL7:
 180 0008 A368     	 ldr r3,[r4,#8]
 181              	.LVL8:
 182              	.LBB58:
 183              	.LBB59:
 184              	 .file 2 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER/i2c_master.h"
   1:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
   2:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @file i2c_master.h
   3:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @date 2017-12-20
   4:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
   5:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * NOTE:
   6:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * regenerated.
   8:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
   9:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
  10:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @cond
  11:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  12:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER v4.1.28 Configures USIC channel to transmit & receive data using I2C protocol.
  13:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  14:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  15:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * All rights reserved.
  16:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  17:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following conditions are met:
  19:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  20:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  21:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * disclaimer.
  22:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  23:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  24:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following disclaimer in the documentation and/or other materials provided with the distribution.
  25:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  26:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  27:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * products derived from this software without specific prior written permission.
  28:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  29:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  37:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  40:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  41:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Change History
  42:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * --------------
  43:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  44:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-02-16:
  45:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Initial version<br>
  46:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  47:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-06-10:
  48:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  49:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  50:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-08-31:
  51:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - DMA support APIs added
  52:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-10-20:
  53:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Code snippets updated
  54:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2016-08-18:
  55:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Documentation of slave address formatting improved.
  56:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-11-17:
  57:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added tx_irqn and rx_irqn to I2C_MASTER_CONFIG_t
  58:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-12-20:
  59:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_FlushTxFifo(), I2C_MASTER_FlushRxFifo(), I2C_MASTER_DisableOutputs(), I2C
  60:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  61:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcond
  62:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  63:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
  64:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  65:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifndef I2C_MASTER_H
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_H
  67:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  68:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  69:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  70:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  71:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * HEADER FILES
  72:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  73:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #include <xmc_gpio.h>
  74:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #include <xmc_i2c.h>
  75:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "i2c_master_conf.h"
  76:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  77:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if(UC_FAMILY == XMC4)
  78:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
  79:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "GLOBAL_DMA/global_dma.h"
  80:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  81:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  82:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  83:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #include <DAVE_Common.h>
  84:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  85:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  86:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef void(*i2c_master_fptr_cbhandler)(void);
  87:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  88:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  89:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * MACROS
  90:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  91:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  92:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  93:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  94:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #error "I2C_MASTER requires XMC Peripheral Library v2.0.0 or higher"
  95:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  96:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  97:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  98:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * ENUMS
  99:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 100:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 101:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_enumerations
 102:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 103:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 104:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 105:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Initialization status.
 106:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 107:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_STATUS
 108:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 109:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_SUCCESS = 0U,           /*!< I2C_MASTER SUCCESS */
 110:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_FAILURE = 1U,           /*!< I2C_MASTER FAILURE */
 111:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_BUSY = 2U,              /*!< I2C_MASTER BUSY */
 112:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_UNSUPPORTED_MODE = 3U   /*!< I2C_MASTER UNSUPPORTED MODE */
 113:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_STATUS_t;
 114:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 115:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 116:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Direction
 117:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 118:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_DIRECTION
 119:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 120:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_TRANSMIT = 0U,   /*!< Direction indicates transmit */
 121:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_RECEIVE = 1U     /*!< Direction indicates receive */
 122:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DIRECTION_t;
 123:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 124:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 125:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 126:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 127:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_TRANSFER_MODE
 128:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 129:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 130:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 131:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 132:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_TRANSFER_MODE_t;
 133:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 134:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 135:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 136:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 137:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** * DATA STRUCTURES
 138:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** ***************************************************************************************************
 139:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 140:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 141:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_datastructures
 142:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 143:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 144:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 145:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure for DMA configuration.
 146:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 147:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
 148:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_DMA_CONFIG
 149:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 150:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 151:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   GLOBAL_DMA_t * global_dma;                   /**< Global DMA handle */
 152:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 153:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DMA_CONFIG_t;
 154:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 155:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 156:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Constant structure for holding the configuration parameters of I2C channel.
 157:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 158:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_CONFIG
 159:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 160:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    const XMC_I2C_CH_CONFIG_t *brg_config;             /*!< Basic I2C configuration from the GUI wit
 161:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 162:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel confi
 163:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data transmission.*/
 164:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 165:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 166:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel confi
 167:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data reception.*/
 168:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 169:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_config;         /*!< Function pointer to configure the MUX va
 170:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_enable_io;      /*!< Function pointer to enable SDA/SCL outpu
 171:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_disable_io;     /*!< Function pointer to disable SDA/SCL outp
 172:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 173:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler tx_cbhandler;            /*!< Function pointer to hold the callback fu
 174:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the transmission is complete
 175:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler rx_cbhandler;            /*!< Function pointer to hold the callback fu
 176:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the reception is complete*/
 177:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler nack_cbhandler;          /*!< Function pointer to hold the callback fu
 178:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when nack is received*/
 179:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler arbitration_cbhandler;   /*!< Function pointer to hold the callback fu
 180:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when arbitration lost is occured*
 181:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler error_cbhandler;         /*!< Function pointer to hold the callback fu
 182:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when error is detected.*/
 183:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t transmit_mode;          /**< Mode used for transmitting data. Data ca
 184:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 185:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t receive_mode;           /**< Mode used for receiving data. Data can b
 186:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 187:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 188:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t txFIFO_size;               /*!< TxFIFO size configuration*/
 189:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t rxFIFO_size;               /*!< RxFIFO size configuration*/
 190:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 191:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type tx_irqn;
 192:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type rx_irqn; 
 193:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_CONFIG_t;
 194:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 195:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 196:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure to hold the dynamic variables for the I2C_MASTER communication.
 197:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 198:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_RUNTIME
 199:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 200:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * tx_data;                     /*!< Pointer to the transmit data buffer*/
 201:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * rx_data;                     /*!< Pointer to the receive data buffer*/
 202:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t tx_data_count;                /*!< Number of bytes of data to be transmitted*/
 203:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t tx_data_index;       /*!< Index to the byte to be transmitted next in the tx_da
 204:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_data_count;                /*!< Number of bytes of data to be received*/
 205:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 206:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_count;            /*!< Number of bytes of data to be received-DMA mode*/
 207:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_index;            /*!< Index of bytes of data to be received-DMA mode*/
 208:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 209:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t rx_data_index;       /*!< Indicates the number of bytes currently available in 
 210:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t direction;           /*!< Indicates TRANSMIT/RECEIVE */
 211:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_stop;                    /*!< Indicates to stop the I2C */
 212:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_nack;                    /*!< Indicates to send nack */
 213:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t tx_ack_sr;                         /*!< Service request number assigned to transmit inter
 214:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t rx_sr;                         /*!< Service request number assigned to receive interrupts
 215:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool tx_busy;                 /*!< Status flag to indicate busy when a transmission is a
 216:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool rx_busy;                 /*!< Status flag to indicate busy when a reception is assi
 217:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool bus_acquired;            /*!< flag to indicate whether bus is acquired or not */
 218:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_RUNTIME_t;
 219:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 220:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 221:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 222:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 223:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 224:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER
 225:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 226:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_t *channel;                    /*!< USIC channel*/
 227:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   const I2C_MASTER_CONFIG_t * const config;  /*!< I2C configuration structure pointer*/
 228:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_RUNTIME_t * const runtime;      /*!< Pointer to the structure holding all variables,
 229:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****    	                                               that can change at runtime*/
 230:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_t;
 231:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 232:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 233:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 234:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 235:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 236:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifdef __cplusplus
 237:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** extern "C" {
 238:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 239:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 240:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 241:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 242:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_apidoc
 243:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 244:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 245:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 246:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 247:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * API PROTOTYPES
 248:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 249:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 250:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get I2C_MASTER APP version.
 251:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return \a DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 252:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 253:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 254:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function can be used to check application software compatibility with a
 255:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * specific version of the APP.
 256:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 257:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 258:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 259:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 260:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 261:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 262:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_APP_VERSION_t version;
 263:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_Init();
 264:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    version = I2C_MASTER_GetAppVersion();
 265:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(version.major != 4U)
 266:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 267:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 268:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 269:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 270:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 271:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 272:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 273:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 274:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void);
 275:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 276:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief This function initializes the I2C_MASTER APP based on user provided configuration.
 277:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 278:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
 279:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 280:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 281:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C configurations like channel selection,baud rate setting,
 282:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * FIFO configuration etc are done in this API.
 283:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Protocol specific interrupts can also be enabled using the I2C_MASTER_Init
 284:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function.
 285:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 286:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 287:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 288:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 289:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 290:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 291:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 292:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   // Initializing the modules and the multiplexer
 293:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_Init(); // I2C_MASTER_Init will be called from DAVE_Init()
 294:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 295:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {}
 296:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 297:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 298:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 299:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 300:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 301:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 302:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle);
 303:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 304:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 305:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 306:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief  Receives the data from I2C slave device.
 307:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 308:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start Flag to indicate that the start condition need to be send.
 309:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 310:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer to receive data.
 311:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count The number of bytes to be received from slave.
 312:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 313:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack The flag to indicate that the NACK condition need to be send for the last byte
 314:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 315:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 316:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Receive API can be used in Interrupt and Direct modes.\n
 317:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 318:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 319:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 320:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).\n
 321:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 322:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 323:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 324:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 325:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 326:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 327:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_READ 10
 328:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
 329:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 330:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 331:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 332:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 333:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 334:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 335:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 336:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 337:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 338:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t data = 0x55;
 339:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_data;
 340:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 341:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 342:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 343:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;  
 344:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 345:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 346:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 347:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
 348:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 349:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 350:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 351:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 352:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
 353:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 354:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 355:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Read data from IO EXPANDER
 356:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 357:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 358:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 359:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
 360:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 361:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 362:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 363:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   { }
 364:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  return 0;
 365:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 366:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 367:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 368:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 369:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 370:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 371:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                        uint8_t * data, const uint32_t count, bool send_stop, bool s
 372:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 373:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 374:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits data to I2C slave device.
 375:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 376:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 377:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start The flag to indicate that the start condition need to be send.
 378:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 379:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer containing the data to transmit.
 380:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size The number of bytes to be send to slave.
 381:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 382:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 383:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 384:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 385:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Transmit API can be used in Interrupt and Direct modes.\n
 386:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 387:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 388:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 389:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write). \n
 390:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 391:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
 392:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 393:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 394:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 395:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 396:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 397:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 398:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 399:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 400:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 401:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 402:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 403:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 404:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 405:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 406:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 407:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 408:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 409:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 410:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 411:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 412:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
 413:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 414:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 415:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 416:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 417:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
 418:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 419:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 420:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 421:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 422:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 423:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 424:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 425:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 426:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 427:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 428:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 429:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 430:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                uint8_t *data, const uint32_t size, bool send_stop);
 431:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 432:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 433:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get the I2C flag status.
 434:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 435:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 436:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 437:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *			 	      bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be used to selec
 438:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 439:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 440:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t Flag status.
 441:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 442:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 443:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 444:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 445:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 446:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 447:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 448:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 449:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 450:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 451:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 452:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 453:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 454:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 455:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 456:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 457:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 458:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 459:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 460:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 461:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 462:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 463:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 464:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 465:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 466:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 467:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 468:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 469:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 470:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype);
 471:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 472:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 473:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Clear the I2C flag status.
 474:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 475:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 476:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 477:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    The bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be 
 478:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 479:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 480:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None <BR>
 481:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 482:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 483:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 484:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 485:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 486:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 487:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 488:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 489:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 490:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 491:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 492:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 493:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 494:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 495:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 496:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 497:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 498:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 499:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 500:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 501:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 502:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 503:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 504:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 505:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 506:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 507:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 508:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 509:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype);
 510:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 511:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 512:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Aborts the ongoing data transmission.
 513:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 514:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 515:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 516:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 517:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If there is a transmission in progress, it will be stopped. Once the transmission is stopped, 
 518:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * user can start a new transmission without delay.
 519:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 520:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 521:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 522:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 523:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 524:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 525:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 526:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 527:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 528:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buf[50] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
 529:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 530:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 531:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 532:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 533:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 534:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 535:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 536:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 537:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 538:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
 539:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 540:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 541:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 542:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
 543:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 544:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 545:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 546:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 547:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 548:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 549:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 550:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 551:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 552:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle);
 553:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 554:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 555:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** * @brief Stops the active data reception request.
 556:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 557:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 558:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 559:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 560:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a reception is in progress, it will be stopped. When a reception request
 561:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is active, user will not be able to place a new receive request till the active
 562:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception is complete. This API can stop the progressing reception to make
 563:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * a new receive request.
 564:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 565:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 566:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 567:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 568:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 569:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 570:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 571:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 572:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 573:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 574:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t rx_buf[25];
 575:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t tx_buf[2];
 576:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;
 577:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 578:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 579:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 580:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address from which data to be transfered
 581:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     tx_buf[0] = 0;
 582:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 583:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 584:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 585:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 586:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendStop(&I2C_MASTER_0);
 587:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 588:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 589:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 590:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 591:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 592:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
 593:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 594:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 595:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 596:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
 597:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 598:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 599:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 600:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 601:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 602:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle);
 603:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 604:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 605:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1U) || defined(DOXYGEN)
 606:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 607:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C channel using DMA.
 608:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 609:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 610:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  block_size size of the block
 611:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr    address\n
 612:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 613:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 614:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 615:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 616:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 617:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 618:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 619:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 620:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 621:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 622:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 623:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. The function uses AP
 624:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure to store the status of transmission.
 625:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 626:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens through DMA channel.
 627:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be transmitted in one API call. This limit is because of the DMA sin
 628:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 629:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 630:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 631:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the completion of data transmission.
 632:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 633:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * calls to this API.
 634:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 635:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_StartTransmitDMA API can be used in DMA mode.
 636:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "DMA" mode in advanced settings tab. \n
 637:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 638:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 639:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 640:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 641:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 642:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 643:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 644:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 645:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 646:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 647:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 648:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 649:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 650:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 651:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 652:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 653:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 654:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 655:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 656:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 657:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 658:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 659:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 660:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 661:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 662:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 663:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 664:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 665:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 666:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 667:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 668:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // trigger the DMA
 669:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitDMA(&I2C_MASTER_0, sizeof(Send_Data), Send_Data);
 670:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 671:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 672:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 673:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 674:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 675:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 676:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 677:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 678:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 679:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 680:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 681:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 682:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 683:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 684:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitDMA(const I2C_MASTER_t *const handle, uint32_t block_si
 685:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 686:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 687:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1U) || defined(DOXYGEN)
 688:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 689:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel using DMA.
 690:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 691:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 692:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 693:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param block_size  size of the block
 694:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr  address \n
 695:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 696:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 697:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 698:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 699:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 700:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 701:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 702:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 703:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed.
 704:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 705:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When all the requested number of data bytes are received, the configured callback function will 
 706:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, the user has to poll for the value of the variable, \a
 707:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * handle->runtime->rx_busy to be false. The value is updated to \a false when all the requested nu
 708:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * are received.
 709:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be received in one API call. This limit is because of the DMA single
 710:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 711:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveDMA API can be used only in DMA mode
 712:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "DMA" mode in advanced settings tab \n
 713:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 714:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 715:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 716:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 717:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 718:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 719:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 720:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 721:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 722:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 723:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Pre condition:
 724:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Transmit mode and receive mode should be configured to "DMA" in advanced settings tab
 725:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 726:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t ReadData[256];
 727:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 728:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 729:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 730:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 731:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 732:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 733:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 734:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 735:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 736:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 737:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 738:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 739:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 740:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 741:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 742:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 743:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 744:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 745:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 746:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 747:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
 748:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 749:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 750:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 751:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 752:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 753:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  
 754:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveDMA(&I2C_MASTER_0, 200, ReadData);
 755:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 756:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 757:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 758:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 759:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 760:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 761:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 762:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 763:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 764:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 765:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 766:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  @endcode
 767:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 768:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 769:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveDMA(const I2C_MASTER_t *const handle, uint32_t block_siz
 770:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 771:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 772:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1U)
 773:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 774:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C_MASTER channel.
 775:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 776:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 777:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 778:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 779:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 780:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size    number of bytes
 781:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition\n
 782:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 783:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 784:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 785:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 786:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 787:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 788:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 789:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 790:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 791:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 792:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure a callback fu
 793:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. If transmit FIFO is 
 794:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the trigger limit is set to 1. So the transmit interrupt will be generated when all the data in 
 795:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * from FIFO. The function uses APP handle's runtime structure to store the data pointer, count, da
 796:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * status of transmission. This function only registers a data transmission request if there is no 
 797:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * in progress.
 798:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens in the transmit interrupt service routine. A trigger is generat
 799:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt to start loading the data. If transmit FIFO is configured, the data is filled into the
 800:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this point of
 801:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * some more data to be transmitted, it is loaded to the FIFO again. When FIFO is not enabled, data
 802:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * byte at a time. On transmission of each byte an interrupt is generated and the next byte is tran
 803:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt service routine. Callback function is executed when all the data bytes are transmitted
 804:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of t
 805:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure( \a handle->runtime->tx_busy ) to check for the completion of data transmission.<br>
 806:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartTransmitIRQ API can be used only in Interrupt mode.
 807:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "Interrupt" mode in advanced settings tab.\n
 808:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 809:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 810:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 811:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 812:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 813:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 814:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 815:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 816:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 817:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 818:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 819:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 820:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 821:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 822:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 823:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 824:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 825:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 826:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 827:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 828:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 829:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 830:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 831:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,64,true);
 832:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 833:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 834:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 835:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 836:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 837:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 838:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 839:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 840:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 841:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 842:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 843:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 844:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 845:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 846:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 847:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1U)
 848:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 849:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel.
 850:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 851:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 852:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 853:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 854:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 855:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 856:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count    number of bytes
 857:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition
 858:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack flag to indicate the nack condition\n
 859:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 860:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 861:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 862:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 863:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 864:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 865:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 866:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 867:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 868:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed. Based on the UI configuration, either standard re
 869:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * receive FIFO is used for data reception. An interrupt is configured for reading received data fr
 870:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function only registers a request to receive a number of data bytes from a USIC channel. If FIFO
 871:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.  When all
 872:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of data bytes are received, the configured callback function will be executed. If a callback fun
 873:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured, the user has to poll for the value of the variable, \a handle->runtime->rx_busy to b
 874:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is updated to \a false when all the requested number of data bytes are received.<br>
 875:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveIRQ API can be used only in Interrupt mode.
 876:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "Interrupt" mode in advanced settings tab.\n
 877:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 878:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 879:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 880:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 881:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 882:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 883:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 884:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 885:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 886:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_buffer[64];
 887:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 888:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 889:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 890:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 891:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 892:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 893:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 894:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 895:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 896:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 897:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 898:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 899:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 900:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,rx_buffer,64,true, true);
 901:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 902:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 903:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 904:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 905:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 906:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 907:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 908:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 909:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 910:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 911:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 912:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                uint8_t * data, const uint32_t count, bool send_stop
 913:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 914:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 915:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 916:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 917:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the transmit FIFO event flags.
 918:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 919:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 920:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 921:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
 922:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      their bit positions.\n
 923:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
 924:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 925:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 926:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer interrupt flag
 927:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * buffer error flag before providing the value.
 928:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * User has to mask the bits of interest before checking the status.
 929:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Enable transmit fifo in Advanced settings tab. <br>
 930:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 931:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 932:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 933:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 934:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 935:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 936:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 937:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 938:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 939:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 940:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 941:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 942:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 943:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 944:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
 945:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 946:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 947:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 948:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
 949:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
 950:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
 951:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
 952:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
 953:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 954:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 955:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 956:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 957:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 958:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 959:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 960:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 961:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 962:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 963:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 964:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 965:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 966:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetTXFIFOStatus(const I2C_MASTER_t* const handle)
 967:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 968:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetTXFIFOStatus: invalid handle", (handle != NULL))
 969:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
 970:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 971:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 972:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 973:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the transmit FIFO.
 974:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 975:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 976:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
 977:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
 978:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to transmit FIFO size.\n
 979:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
 980:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
 981:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 982:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
 983:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 984:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 985:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
 986:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
 987:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * below the trigger limit.
 988:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 989:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 990:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 991:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 992:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 993:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 994:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 995:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 996:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 997:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 998:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 999:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1000:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1001:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1002:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1003:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit, draining level as 10
1004:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1005:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the interrupt handler as the limit is set to 10
1006:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, Send_Data, 16, true);
1007:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1008:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1009:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1010:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1011:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1012:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1013:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1014:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1015:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1016:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1017:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1018:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1019:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1020:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1021:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetTXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1022:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1023:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1024:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetTXFIFOTriggerLimit: invalid handle", (handle != NULL))
1025:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1026:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1027:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1028:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the receive FIFO.
1029:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1030:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1031:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
1032:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1033:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to receive FIFO size.\n
1034:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1035:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1036:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1037:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1038:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1039:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1040:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1041:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1042:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * above the trigger limit.
1043:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1044:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1045:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1046:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1047:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1048:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1049:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1050:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1051:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Rx_Data[256];
1052:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1053:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1054:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1055:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1056:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1057:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1058:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1059:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit to filling level as 10
1060:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1061:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the receive interrupt handler as the limit is set to 
1062:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, Rx_Data, 16, true, true);
1063:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
1064:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1065:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1066:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1067:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1068:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1069:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1070:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1071:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1072:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1073:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1074:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1075:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1076:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1077:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetRXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1078:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1079:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1080:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetRXFIFOTriggerLimit: invalid handle", (handle != NULL))
1081:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1082:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1083:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1084:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1085:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the transmit FIFO is full.
1086:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1087:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1088:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1089:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of transmit FIFO filling level.
1090:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1091:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1092:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1093:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while filling
1094:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * data to the transmit FIFO.
1095:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Transmit should be "Direct" mode in advanced settings tab.<br>
1096:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1097:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1098:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1099:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1100:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1101:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1102:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1103:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1104:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t send_data[] = "Infineon Technologies";
1105:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1106:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1107:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1108:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();           // Initialization of DAVE APPs
1109:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1110:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1111:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1112:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1113:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1114:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1115:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1116:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1117:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1118:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &send_data[0], 10, false);
1119:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Wait when Tx FIFO is full
1120:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(!I2C_MASTER_IsTXFIFOFull(&I2C_MASTER_0))
1121:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1122:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_Transmit(&I2C_MASTER_0, false, SLAVE_ADDRESS, &send_data[0], 10, false);
1123:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1124:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(1U)
1125:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1126:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1127:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
1128:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1129:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1130:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTXFIFOFull(const I2C_MASTER_t* const handle)
1131:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1132:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTXFIFOFull: invalid handle", (handle != NULL))
1133:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
1134:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1135:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1136:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1137:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the receive FIFO is empty.
1138:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1139:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1140:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1141:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of receive FIFO filling level.
1142:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1143:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if receive FIFO still has data.<br>
1144:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1145:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while reading data from the receive FIFO
1146:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1147:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1148:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1149:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1150:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1151:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1152:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1153:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1154:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1155:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1156:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1157:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1158:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1159:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1160:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1161:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1162:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1163:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1164:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1165:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1166:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1167:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1168:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1169:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1170:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1171:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1172:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1173:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1174:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1175:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1176:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1177:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1178:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1179:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1180:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1181:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1182:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1183:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1184:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1185:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1186:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1187:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1188:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1189:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1190:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
1191:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1192:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1193:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1194:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1195:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1196:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRXFIFOEmpty(const I2C_MASTER_t* const handle)
1197:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1198:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRXFIFOEmpty: invalid handle", (handle != NULL))
1199:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
1200:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1201:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1202:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1203:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the status of event flags related to receive FIFO.
1204:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1205:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1206:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1207:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1208:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of standard receive buffer event, alternative receive buffer event and 
1209:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * error event in their bit positions in TRBSR register.\n
1210:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for event bitmasks. Multiple events' status c
1211:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * comparison using \a OR operation.
1212:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1213:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1214:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * It provides the status of standard receive buffer event, alternative receive buffer event and re
1215:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * event.
1216:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function masks the TRBSR register with the bitmask of SRBI, ARBI and RBERI flags. User has to ma
1217:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interest before checking the status.
1218:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1219:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1220:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1221:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1222:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1223:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #define SLAVE_ADDRESS 0xA0
1224:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t mem_address[2];
1225:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   int main(void)
1226:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1227:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     DAVE_STATUS_t init_status;
1228:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1229:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     init_status = DAVE_Init();
1230:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     if(init_status == DAVE_STATUS_SUCCESS)
1231:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1232:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       mem_address[0] = 0x00;//memory which need to be read from slave
1233:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Configure receive fifo trigger limit as 10
1234:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1235:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1236:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1237:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1238:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1239:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0
1240:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1241:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1242:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1243:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     else
1244:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1245:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1246:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1247:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1248:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1249:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1250:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      return 1U;
1251:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1252:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1253:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1254:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1255:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetRXFIFOStatus(const I2C_MASTER_t* const handle)
1256:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1257:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetRXFIFOStatus: invalid handle", (handle != NULL))
1258:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_GetEvent(handle->channel);
1259:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1260:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1261:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1262:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to
1263:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * transmit FIFO.
1264:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1265:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1266:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1267:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at their bit positions in TRBSR register to be cleared.\n
1268:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t. Multiple events can be combined 
1269:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \a OR operation.
1270:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1271:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1272:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1273:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1274:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR register using the TRBSCR register. But the function does 
1275:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * value with the bit positions restricted to transmit FIFO status bits. User should ensure that th
1276:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * appropriately masked.
1277:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1278:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1279:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1280:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1281:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1282:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1283:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1284:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1285:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1286:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1287:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1288:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1289:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1290:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1291:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00; //memory which need to be read from slave
1292:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
1293:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1294:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1295:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1296:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
1297:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1298:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
1299:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1300:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
1301:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1302:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1303:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1304:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1305:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1306:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1307:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1308:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1309:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1310:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1311:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1312:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1313:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1314:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearTXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1315:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1316:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearTXFIFOStatus: invalid handle", (handle != NULL))
1317:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_ClearEvent(handle->channel, flag);
1318:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1319:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1320:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1321:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to receive FIFO. It should be used 
1322:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of standard receive buffer interrupt, alternative receive buffer interrupt and receive buffer er
1323:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1324:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1325:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1326:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at the bit positions in TRBSR register to be cleared.\n
1327:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for providing events.
1328:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             Multiple events can be input by using \a OR operation.
1329:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1330:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1331:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1332:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1333:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR using the TRBSCR register.
1334:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function does not mask the input value to clear only receive buffer
1335:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * events. So user should appropriately mask the input value before calling
1336:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the function.
1337:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1338:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1339:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1340:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1341:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1342:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1343:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1344:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1345:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1346:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1347:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1348:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1349:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1350:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1351:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
1352:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit as 10
1353:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1354:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1355:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1356:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1357:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1358:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0)
1359:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1360:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1361:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1362:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1363:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1364:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1365:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1366:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1367:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1368:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1369:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1370:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1371:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1372:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1373:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1374:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearRXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1375:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1376:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearRXFIFOStatus: invalid handle", (handle != NULL))
1377:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, flag);
1378:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1379:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1380:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1381:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Provides the received data from receive buffer.
1382:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1383:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1384:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint8_t: Data read from RBUF.\n
1385:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1386:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1387:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1388:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1389:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Otherwise it reads the data from OUTR register.
1390:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1391:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1392:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1393:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1394:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1395:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1396:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1397:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1398:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[10];
1399:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0,loc_index = 0;
1400:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1401:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1402:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1403:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1404:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1405:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1406:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1407:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1408:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1409:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1410:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1411:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1412:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1413:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1414:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1415:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1416:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1417:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1418:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1419:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1420:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        // wait for ACK
1421:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1422:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1423:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1424:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1425:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1426:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         index++;
1427:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1428:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1429:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1430:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1431:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1432:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1433:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1434:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1435:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1436:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1437:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1438:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1439:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1440:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1441:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1442:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1443:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1444:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1445:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1446:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /* Wrapper to the LLD API for reading back the value of the RBUF or OUTR register */
1447:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint8_t I2C_MASTER_GetReceivedByte(I2C_MASTER_t * const handle)
1448:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1449:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetReceivedByte: invalid handle", (handle != NULL))
1450:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   return (uint8_t)XMC_I2C_CH_GetReceivedData(handle->channel);
1451:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1452:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1453:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1454:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits single byte using I2C protocol.
1455:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1456:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1457:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  byte data byte to transmit. \n
1458:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1459:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
1460:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1461:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1462:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1463:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1464:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1465:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1466:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1467:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1468:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1469:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1470:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1471:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1472:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1473:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1474:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1475:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1476:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1477:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1478:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1479:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1480:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1481:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1482:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1483:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1484:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1485:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1486:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1487:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1488:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1489:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1490:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1491:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1492:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1493:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1494:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1495:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1496:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1497:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1498:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1499:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1500:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_TransmitByte(I2C_MASTER_t * const handle, uint8_t byte)
1501:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1502:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_TransmitByte: invalid handle", (handle != NULL))
1503:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterTransmit(handle->channel, byte);
1504:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1505:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1506:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enables the selected protocol events for interrupt generation.
1507:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1508:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1509:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Protocol events to be enabled for interrupt generation. \n
1510:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1511:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1512:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1513:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1514:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1515:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1516:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1517:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1518:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * may not yield expected result.
1519:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1520:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1521:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1522:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1523:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1524:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1525:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1526:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1527:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1528:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1529:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1530:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1531:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1532:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1533:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1534:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1535:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1536:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1537:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1538:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1539:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1540:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_EnableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1541:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1542:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1543:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1544:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1545:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1546:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1547:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_EnableEvent(I2C_MASTER_t * const handle, uint32_t event)
1548:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1549:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_EnableEvent: invalid handle", (handle != NULL))
1550:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_EnableEvent(handle->channel, event);
1551:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1552:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1553:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Disables selected events from generating interrupt.
1554:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1555:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1556:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Events to be disabled from generating interrupt. \n
1557:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1558:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1559:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1560:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1561:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1562:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1563:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1564:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1565:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1566:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1567:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1568:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1569:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1570:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1571:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1572:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1573:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1574:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1575:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1576:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1577:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1578:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1579:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1580:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1581:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1582:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1583:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1584:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_DisableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1585:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1586:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1587:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1588:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1589:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1590:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1591:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1592:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_DisableEvent(I2C_MASTER_t * const handle, uint32_t event)
1593:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1594:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_DisableEvent: invalid handle", (handle != NULL))
1595:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_DisableEvent(handle->channel, event);
1596:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1597:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1598:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1599:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the ACK from slave
1600:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1601:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1602:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1603:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1604:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the ack from slave.<br>
1605:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1606:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1607:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1608:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1609:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1610:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1611:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1612:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1613:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1614:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1615:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1616:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1617:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1618:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1619:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1620:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1621:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1622:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1623:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1624:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1625:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1626:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1627:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1628:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1629:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1630:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1631:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1632:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1633:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1634:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1635:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1636:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1637:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1638:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1639:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1640:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1641:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1642:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1643:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1644:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1645:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1646:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1647:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1648:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1649:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1650:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1651:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1652:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1653:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1654:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1655:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1656:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1657:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1658:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1659:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1660:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1661:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1662:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveACK(I2C_MASTER_t * const handle)
1663:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1664:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveACK: invalid handle", (handle != NULL))
1665:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveAck(handle->channel);
1666:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1667:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1668:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the NACK from slave
1669:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1670:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1671:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1672:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1673:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the nack from slave.<br>
1674:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1675:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1676:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1677:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1678:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1679:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1680:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1681:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1682:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1683:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1684:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint32_t index = 0, loc_index = 0;
1685:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1686:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1687:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1688:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1689:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1690:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1691:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1692:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1693:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1694:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1695:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1696:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1697:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1698:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1699:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1700:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1701:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1702:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1703:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1704:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1705:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1706:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1707:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1708:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1709:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1710:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1711:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1712:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1713:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // only for the last byte
1714:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ReceiveNACK(&I2C_MASTER_0);
1715:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1716:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1717:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1718:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1719:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1720:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1721:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1722:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1723:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1724:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1725:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1726:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1727:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1728:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1729:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1730:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1731:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1732:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveNACK(I2C_MASTER_t * const handle)
1733:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1734:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveNACK: invalid handle", (handle != NULL))
1735:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveNack(handle->channel);
1736:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1737:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1738:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends stop command to slave
1739:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1740:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1741:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1742:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1743:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * At the end of transmission, sends a stop command to slave <br>
1744:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.<br>
1745:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1746:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1747:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1748:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1749:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1750:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1751:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1752:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1753:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1754:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1755:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1756:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1757:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1758:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1759:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1760:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1761:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1762:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1763:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1764:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1765:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1766:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1767:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1768:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1769:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1770:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
1771:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1772:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1773:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1774:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1775:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1776:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1777:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1778:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1779:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1780:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1781:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1782:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1783:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStop(I2C_MASTER_t * const handle)
1784:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1785:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStop: invalid handle", (handle != NULL))
1786:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED);
1787:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStop(handle->channel);
1788:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1789:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1790:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends start command to slave
1791:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1792:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1793:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1794:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1795:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1796:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1797:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a start command to slave. \n
1798:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1799:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1800:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1801:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1802:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1803:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1804:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1805:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1806:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
1807:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1808:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1809:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1810:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1811:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1812:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1813:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1814:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1815:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1816:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1817:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1818:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1819:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1820:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1821:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1822:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1823:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1824:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1825:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1826:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1827:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1828:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1829:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1830:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       XMC_DEBUG("main: Application initialization failed");
1831:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(1U)
1832:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       {
1833:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       }
1834:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1835:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1836:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1837:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1838:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1839:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStart(I2C_MASTER_t * const handle, const uint32_t address,
1840:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                  const XMC_I2C_CH_CMD_t cmd)
1841:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1842:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStart: invalid handle", (handle != NULL))
1843:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED);
1844:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStart(handle->channel, (uint16_t)address, cmd);
1845:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1846:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1847:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends repeated start command to slave
1848:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1849:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1850:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1851:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1852:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1853:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1854:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a repeatedstart command to slave if bus acquired is true.\n
1855:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1856:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1857:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1858:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1859:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1860:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1861:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1862:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1863:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1864:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1865:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1866:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1867:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1868:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rx_buf[256];
1869:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1870:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1871:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1872:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1873:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterStart(I2C_MASTER_0.channel, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1874:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1875:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1876:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1877:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1878:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1879:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address to which data to be transfered
1880:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1881:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1882:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1883:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1884:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1885:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1886:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1887:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1888:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1889:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1890:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1891:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1892:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 	   memset(rx_buf,0,16);
1893:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, false, SLAVE_ADDRESS, rx_buf, 16, true, true);
1894:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1895:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1896:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1897:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1898:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1899:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1900:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1901:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1902:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
1903:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1904:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1905:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1906:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendRepeatedStart(I2C_MASTER_t * const handle, const uint32_t addre
1907:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                          const XMC_I2C_CH_CMD_t cmd)
1908:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1909:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendRepeatedStart: invalid handle", (handle != NULL))
1910:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEI
1911:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterRepeatedStart(handle->channel, (uint16_t)address, cmd);
1912:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1913:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1914:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1915:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends the txbusy flag
1916:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1917:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool : status of txbusy flag
1918:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  
1919:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1920:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1921:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
1922:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1923:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
1924:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
1925:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
1926:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
1927:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
1928:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
1929:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1930:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
1931:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1932:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1933:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1934:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1935:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1936:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1937:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1938:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1939:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
1940:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
1941:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1942:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1943:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1944:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
1945:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1946:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1947:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
1948:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
1949:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1950:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
1951:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1952:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1953:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
1954:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1955:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1956:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTxBusy(I2C_MASTER_t * const handle)
1957:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1958:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTxBusy: invalid handle", (handle != NULL))	
1959:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   return handle->runtime->tx_busy;
 185              	 .loc 2 1959 0
 186 000a 93F82620 	 ldrb r2,[r3,#38]
 187              	.LBE59:
 188              	.LBE58:
  98:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (0 != I2C_MASTER_IsTxBusy(p_i2c_master))
 189              	 .loc 1 98 0
 190 000e A2B9     	 cbnz r2,.L27
 191              	.L14:
 192              	.LVL9:
 193              	.LBB60:
 194              	.LBB61:
1960:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1961:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1962:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1963:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends the rxbusy flag
1964:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1965:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool : status of rxbusy flag
1966:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1967:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1968:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
1969:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1970:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_READ 10
1971:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
1972:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1973:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
1974:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
1975:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
1976:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
1977:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
1978:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
1979:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1980:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1981:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t data = 0x55;
1982:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_data;
1983:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1984:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1985:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1986:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1987:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1988:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1989:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1990:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
1991:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
1992:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1993:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1994:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1995:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
1996:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1997:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1998:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Read data from IO EXPANDER
1999:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
2000:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
2001:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2002:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
2003:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
2004:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
2005:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(1)
2006:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     { }
2007:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** 
2008:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
2009:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
2010:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2011:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
2012:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2013:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
2014:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRxBusy(I2C_MASTER_t * const handle)
2015:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** {
2016:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRxBusy: invalid handle", (handle != NULL))	
2017:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h ****   return handle->runtime->rx_busy;
 195              	 .loc 2 2017 0
 196 0010 93F82730 	 ldrb r3,[r3,#39]
 197              	.LBE61:
 198              	.LBE60:
  99:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 100:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         //lint --e{534} suppress "Error handling is not required so return value is not checked"
 101:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         I2C_MASTER_AbortTransmit(p_i2c_master);
 102:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         while (I2C_MASTER_IsTxBusy(p_i2c_master)){}
 103:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 104:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 105:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (0 != I2C_MASTER_IsRxBusy(p_i2c_master))
 199              	 .loc 1 105 0
 200 0014 43B9     	 cbnz r3,.L16
 201              	.L18:
 106:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 107:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         //lint --e{534} suppress "Error handling is not required so return value is not checked"
 108:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         I2C_MASTER_AbortReceive(p_i2c_master);
 109:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         while (I2C_MASTER_IsRxBusy(p_i2c_master)){}
 110:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 111:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 112:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     invoke_upper_layer_callback(gp_pal_i2c_current_ctx, PAL_I2C_EVENT_ERROR);
 202              	 .loc 1 112 0
 203 0016 2B68     	 ldr r3,[r5]
 204              	.LVL10:
 205              	.LBB62:
 206              	.LBB63:
  76:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 207              	 .loc 1 76 0
 208 0018 0121     	 movs r1,#1
 209 001a DA68     	 ldr r2,[r3,#12]
 210 001c 9868     	 ldr r0,[r3,#8]
 211 001e 9047     	 blx r2
 212              	.LVL11:
 213              	.LBB64:
 214              	.LBB65:
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 215              	 .loc 1 66 0
 216 0020 0B4B     	 ldr r3,.L28+4
 217 0022 0022     	 movs r2,#0
 218 0024 1A60     	 str r2,[r3]
 219 0026 38BD     	 pop {r3,r4,r5,pc}
 220              	.LVL12:
 221              	.L16:
 222              	.LBE65:
 223              	.LBE64:
 224              	.LBE63:
 225              	.LBE62:
 108:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         while (I2C_MASTER_IsRxBusy(p_i2c_master)){}
 226              	 .loc 1 108 0
 227 0028 2046     	 mov r0,r4
 228 002a FFF7FEFF 	 bl I2C_MASTER_AbortReceive
 229              	.LVL13:
 230 002e A268     	 ldr r2,[r4,#8]
 231              	.L17:
 232              	.LVL14:
 233              	.LBB66:
 234              	.LBB67:
 235              	 .loc 2 2017 0 discriminator 1
 236 0030 92F82730 	 ldrb r3,[r2,#39]
 237              	.LBE67:
 238              	.LBE66:
 109:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 239              	 .loc 1 109 0 discriminator 1
 240 0034 002B     	 cmp r3,#0
 241 0036 FBD1     	 bne .L17
 242 0038 EDE7     	 b .L18
 243              	.LVL15:
 244              	.L27:
 101:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         while (I2C_MASTER_IsTxBusy(p_i2c_master)){}
 245              	 .loc 1 101 0
 246 003a 2046     	 mov r0,r4
 247 003c FFF7FEFF 	 bl I2C_MASTER_AbortTransmit
 248              	.LVL16:
 249 0040 A368     	 ldr r3,[r4,#8]
 250              	.L15:
 251              	.LVL17:
 252              	.LBB68:
 253              	.LBB69:
1959:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 254              	 .loc 2 1959 0 discriminator 1
 255 0042 93F82620 	 ldrb r2,[r3,#38]
 256              	.LBE69:
 257              	.LBE68:
 102:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 258              	 .loc 1 102 0 discriminator 1
 259 0046 002A     	 cmp r2,#0
 260 0048 FBD1     	 bne .L15
 261 004a E1E7     	 b .L14
 262              	.L29:
 263              	 .align 2
 264              	.L28:
 265 004c 00000000 	 .word .LANCHOR1
 266 0050 00000000 	 .word .LANCHOR0
 267              	 .cfi_endproc
 268              	.LFE483:
 270              	 .section .text.i2c_master_nack_received_callback,"ax",%progbits
 271              	 .align 2
 272              	 .global i2c_master_nack_received_callback
 273              	 .thumb
 274              	 .thumb_func
 276              	i2c_master_nack_received_callback:
 277              	.LFB484:
 113:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 114:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 115:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** void i2c_master_nack_received_callback(void)
 116:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
 278              	 .loc 1 116 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282 0000 38B5     	 push {r3,r4,r5,lr}
 283              	.LCFI4:
 284              	 .cfi_def_cfa_offset 16
 285              	 .cfi_offset 3,-16
 286              	 .cfi_offset 4,-12
 287              	 .cfi_offset 5,-8
 288              	 .cfi_offset 14,-4
 289              	.LBB84:
 290              	.LBB85:
  97:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (0 != I2C_MASTER_IsTxBusy(p_i2c_master))
 291              	 .loc 1 97 0
 292 0002 124D     	 ldr r5,.L44
 293 0004 2B68     	 ldr r3,[r5]
 294 0006 1C68     	 ldr r4,[r3]
 295              	.LVL18:
 296 0008 A368     	 ldr r3,[r4,#8]
 297              	.LVL19:
 298              	.LBB86:
 299              	.LBB87:
1959:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 300              	 .loc 2 1959 0
 301 000a 93F82620 	 ldrb r2,[r3,#38]
 302              	.LBE87:
 303              	.LBE86:
  98:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 304              	 .loc 1 98 0
 305 000e A2B9     	 cbnz r2,.L43
 306              	.L31:
 307              	.LVL20:
 308              	.LBB88:
 309              	.LBB89:
 310              	 .loc 2 2017 0
 311 0010 93F82730 	 ldrb r3,[r3,#39]
 312              	.LBE89:
 313              	.LBE88:
 105:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 314              	 .loc 1 105 0
 315 0014 43B9     	 cbnz r3,.L33
 316              	.L35:
 112:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 317              	 .loc 1 112 0
 318 0016 2B68     	 ldr r3,[r5]
 319              	.LVL21:
 320              	.LBB90:
 321              	.LBB91:
  76:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 322              	 .loc 1 76 0
 323 0018 0121     	 movs r1,#1
 324 001a DA68     	 ldr r2,[r3,#12]
 325 001c 9868     	 ldr r0,[r3,#8]
 326 001e 9047     	 blx r2
 327              	.LVL22:
 328              	.LBB92:
 329              	.LBB93:
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 330              	 .loc 1 66 0
 331 0020 0B4B     	 ldr r3,.L44+4
 332 0022 0022     	 movs r2,#0
 333 0024 1A60     	 str r2,[r3]
 334 0026 38BD     	 pop {r3,r4,r5,pc}
 335              	.LVL23:
 336              	.L33:
 337              	.LBE93:
 338              	.LBE92:
 339              	.LBE91:
 340              	.LBE90:
 108:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         while (I2C_MASTER_IsRxBusy(p_i2c_master)){}
 341              	 .loc 1 108 0
 342 0028 2046     	 mov r0,r4
 343 002a FFF7FEFF 	 bl I2C_MASTER_AbortReceive
 344              	.LVL24:
 345 002e A268     	 ldr r2,[r4,#8]
 346              	.L34:
 347              	.LVL25:
 348              	.LBB94:
 349              	.LBB95:
 350              	 .loc 2 2017 0
 351 0030 92F82730 	 ldrb r3,[r2,#39]
 352              	.LBE95:
 353              	.LBE94:
 109:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 354              	 .loc 1 109 0
 355 0034 002B     	 cmp r3,#0
 356 0036 FBD1     	 bne .L34
 357 0038 EDE7     	 b .L35
 358              	.LVL26:
 359              	.L43:
 101:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         while (I2C_MASTER_IsTxBusy(p_i2c_master)){}
 360              	 .loc 1 101 0
 361 003a 2046     	 mov r0,r4
 362 003c FFF7FEFF 	 bl I2C_MASTER_AbortTransmit
 363              	.LVL27:
 364 0040 A368     	 ldr r3,[r4,#8]
 365              	.L32:
 366              	.LVL28:
 367              	.LBB96:
 368              	.LBB97:
1959:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 369              	 .loc 2 1959 0
 370 0042 93F82620 	 ldrb r2,[r3,#38]
 371              	.LBE97:
 372              	.LBE96:
 102:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 373              	 .loc 1 102 0
 374 0046 002A     	 cmp r2,#0
 375 0048 FBD1     	 bne .L32
 376 004a E1E7     	 b .L31
 377              	.L45:
 378              	 .align 2
 379              	.L44:
 380 004c 00000000 	 .word .LANCHOR1
 381 0050 00000000 	 .word .LANCHOR0
 382              	.LBE85:
 383              	.LBE84:
 384              	 .cfi_endproc
 385              	.LFE484:
 387              	 .section .text.i2c_master_arbitration_lost_callback,"ax",%progbits
 388              	 .align 2
 389              	 .global i2c_master_arbitration_lost_callback
 390              	 .thumb
 391              	 .thumb_func
 393              	i2c_master_arbitration_lost_callback:
 394              	.LFB485:
 117:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     i2c_master_error_detected_callback();
 118:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 119:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 120:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** void i2c_master_arbitration_lost_callback(void)
 121:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
 395              	 .loc 1 121 0
 396              	 .cfi_startproc
 397              	 
 398              	 
 399 0000 38B5     	 push {r3,r4,r5,lr}
 400              	.LCFI5:
 401              	 .cfi_def_cfa_offset 16
 402              	 .cfi_offset 3,-16
 403              	 .cfi_offset 4,-12
 404              	 .cfi_offset 5,-8
 405              	 .cfi_offset 14,-4
 406              	.LBB112:
 407              	.LBB113:
  97:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (0 != I2C_MASTER_IsTxBusy(p_i2c_master))
 408              	 .loc 1 97 0
 409 0002 124D     	 ldr r5,.L60
 410 0004 2B68     	 ldr r3,[r5]
 411 0006 1C68     	 ldr r4,[r3]
 412              	.LVL29:
 413 0008 A368     	 ldr r3,[r4,#8]
 414              	.LVL30:
 415              	.LBB114:
 416              	.LBB115:
1959:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 417              	 .loc 2 1959 0
 418 000a 93F82620 	 ldrb r2,[r3,#38]
 419              	.LBE115:
 420              	.LBE114:
  98:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 421              	 .loc 1 98 0
 422 000e A2B9     	 cbnz r2,.L59
 423              	.L47:
 424              	.LVL31:
 425              	.LBB116:
 426              	.LBB117:
 427              	 .loc 2 2017 0
 428 0010 93F82730 	 ldrb r3,[r3,#39]
 429              	.LBE117:
 430              	.LBE116:
 105:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 431              	 .loc 1 105 0
 432 0014 43B9     	 cbnz r3,.L49
 433              	.L51:
 112:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 434              	 .loc 1 112 0
 435 0016 2B68     	 ldr r3,[r5]
 436              	.LVL32:
 437              	.LBB118:
 438              	.LBB119:
  76:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 439              	 .loc 1 76 0
 440 0018 0121     	 movs r1,#1
 441 001a DA68     	 ldr r2,[r3,#12]
 442 001c 9868     	 ldr r0,[r3,#8]
 443 001e 9047     	 blx r2
 444              	.LVL33:
 445              	.LBB120:
 446              	.LBB121:
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 447              	 .loc 1 66 0
 448 0020 0B4B     	 ldr r3,.L60+4
 449 0022 0022     	 movs r2,#0
 450 0024 1A60     	 str r2,[r3]
 451 0026 38BD     	 pop {r3,r4,r5,pc}
 452              	.LVL34:
 453              	.L49:
 454              	.LBE121:
 455              	.LBE120:
 456              	.LBE119:
 457              	.LBE118:
 108:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         while (I2C_MASTER_IsRxBusy(p_i2c_master)){}
 458              	 .loc 1 108 0
 459 0028 2046     	 mov r0,r4
 460 002a FFF7FEFF 	 bl I2C_MASTER_AbortReceive
 461              	.LVL35:
 462 002e A268     	 ldr r2,[r4,#8]
 463              	.L50:
 464              	.LVL36:
 465              	.LBB122:
 466              	.LBB123:
 467              	 .loc 2 2017 0
 468 0030 92F82730 	 ldrb r3,[r2,#39]
 469              	.LBE123:
 470              	.LBE122:
 109:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 471              	 .loc 1 109 0
 472 0034 002B     	 cmp r3,#0
 473 0036 FBD1     	 bne .L50
 474 0038 EDE7     	 b .L51
 475              	.LVL37:
 476              	.L59:
 101:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         while (I2C_MASTER_IsTxBusy(p_i2c_master)){}
 477              	 .loc 1 101 0
 478 003a 2046     	 mov r0,r4
 479 003c FFF7FEFF 	 bl I2C_MASTER_AbortTransmit
 480              	.LVL38:
 481 0040 A368     	 ldr r3,[r4,#8]
 482              	.L48:
 483              	.LVL39:
 484              	.LBB124:
 485              	.LBB125:
1959:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 486              	 .loc 2 1959 0
 487 0042 93F82620 	 ldrb r2,[r3,#38]
 488              	.LBE125:
 489              	.LBE124:
 102:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 490              	 .loc 1 102 0
 491 0046 002A     	 cmp r2,#0
 492 0048 FBD1     	 bne .L48
 493 004a E1E7     	 b .L47
 494              	.L61:
 495              	 .align 2
 496              	.L60:
 497 004c 00000000 	 .word .LANCHOR1
 498 0050 00000000 	 .word .LANCHOR0
 499              	.LBE113:
 500              	.LBE112:
 501              	 .cfi_endproc
 502              	.LFE485:
 504              	 .section .text.pal_i2c_init,"ax",%progbits
 505              	 .align 2
 506              	 .global pal_i2c_init
 507              	 .thumb
 508              	 .thumb_func
 510              	pal_i2c_init:
 511              	.LFB486:
 122:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     i2c_master_error_detected_callback();
 123:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 124:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** /// @endcond
 125:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 126:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** pal_status_t pal_i2c_init(const pal_i2c_t * p_i2c_context)
 127:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
 512              	 .loc 1 127 0
 513              	 .cfi_startproc
 514              	 
 515              	 
 516              	 
 517              	.LVL40:
 128:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     return PAL_STATUS_SUCCESS;
 129:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 518              	 .loc 1 129 0
 519 0000 0020     	 movs r0,#0
 520              	.LVL41:
 521 0002 7047     	 bx lr
 522              	 .cfi_endproc
 523              	.LFE486:
 525              	 .section .text.pal_i2c_deinit,"ax",%progbits
 526              	 .align 2
 527              	 .global pal_i2c_deinit
 528              	 .thumb
 529              	 .thumb_func
 531              	pal_i2c_deinit:
 532              	.LFB487:
 130:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 131:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** pal_status_t pal_i2c_deinit(const pal_i2c_t * p_i2c_context)
 132:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
 533              	 .loc 1 132 0
 534              	 .cfi_startproc
 535              	 
 536              	 
 537              	 
 538              	.LVL42:
 133:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     return PAL_STATUS_SUCCESS;
 134:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 539              	 .loc 1 134 0
 540 0000 0020     	 movs r0,#0
 541              	.LVL43:
 542 0002 7047     	 bx lr
 543              	 .cfi_endproc
 544              	.LFE487:
 546              	 .section .text.pal_i2c_write,"ax",%progbits
 547              	 .align 2
 548              	 .global pal_i2c_write
 549              	 .thumb
 550              	 .thumb_func
 552              	pal_i2c_write:
 553              	.LFB488:
 135:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 136:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** pal_status_t pal_i2c_write(const pal_i2c_t * p_i2c_context, uint8_t * p_data, uint16_t length)
 137:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
 554              	 .loc 1 137 0
 555              	 .cfi_startproc
 556              	 
 557              	 
 558              	.LVL44:
 559 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 560              	.LCFI6:
 561              	 .cfi_def_cfa_offset 20
 562              	 .cfi_offset 4,-20
 563              	 .cfi_offset 5,-16
 564              	 .cfi_offset 6,-12
 565              	 .cfi_offset 7,-8
 566              	 .cfi_offset 14,-4
 567              	.LBB132:
 568              	.LBB133:
  52:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 569              	 .loc 1 52 0
 570 0002 154D     	 ldr r5,.L73
 571 0004 2F68     	 ldr r7,[r5]
 572              	.LBE133:
 573              	.LBE132:
 574              	 .loc 1 137 0
 575 0006 83B0     	 sub sp,sp,#12
 576              	.LCFI7:
 577              	 .cfi_def_cfa_offset 32
 578              	 .loc 1 137 0
 579 0008 0446     	 mov r4,r0
 580              	.LBB138:
 581              	.LBB136:
  52:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 582              	 .loc 1 52 0
 583 000a 37B1     	 cbz r7,.L72
 584              	.LVL45:
 585              	.L65:
 586              	.LBE136:
 587              	.LBE138:
 138:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     pal_status_t status = PAL_STATUS_FAILURE;
 139:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 140:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     //Acquire the I2C bus before read/write
 141:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (PAL_STATUS_SUCCESS == pal_i2c_acquire(p_i2c_context))
 142:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 143:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         gp_pal_i2c_current_ctx = p_i2c_context;
 144:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 145:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         //Invoke the low level i2c master driver API to write to the bus
 146:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         if (I2C_MASTER_STATUS_SUCCESS != I2C_MASTER_Transmit(p_i2c_context->p_i2c_hw_config,
 147:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                              (bool)TRUE,
 148:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                              (p_i2c_context->slave_address << 1),
 149:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                              p_data,
 150:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                              length,
 151:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                              (bool)TRUE))
 152:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 153:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             //If I2C Master fails to invoke the write operation, invoke upper layer event handler w
 154:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 155:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             //lint --e{611} suppress "void* function pointer is type casted to upper_layer_callback
 156:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             ((upper_layer_callback_t)(p_i2c_context->upper_layer_event_handler))
 157:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                        (p_i2c_context->p_upper_layer_ctx , PAL_I2C_
 158:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             
 159:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             //Release I2C Bus
 160:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             pal_i2c_release((void * )p_i2c_context);
 161:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         }
 162:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         else
 163:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 164:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             status = PAL_STATUS_SUCCESS;
 165:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         }
 166:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 167:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     else
 168:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 169:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         status = PAL_STATUS_I2C_BUSY;
 170:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         //lint --e{611} suppress "void* function pointer is type casted to upper_layer_callback_t t
 171:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         ((upper_layer_callback_t)(p_i2c_context->upper_layer_event_handler))
 588              	 .loc 1 171 0
 589 000c A068     	 ldr r0,[r4,#8]
 590 000e E368     	 ldr r3,[r4,#12]
 591 0010 0221     	 movs r1,#2
 592              	.LVL46:
 593 0012 9847     	 blx r3
 594              	.LVL47:
 169:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         //lint --e{611} suppress "void* function pointer is type casted to upper_layer_callback_t t
 595              	 .loc 1 169 0
 596 0014 0220     	 movs r0,#2
 597              	.LVL48:
 598              	.L69:
 172:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                         (p_i2c_context->p_upper_layer_ctx , PAL_I2C
 173:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 174:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     return status;
 175:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 599              	 .loc 1 175 0
 600 0016 03B0     	 add sp,sp,#12
 601              	.LCFI8:
 602              	 .cfi_remember_state
 603              	 .cfi_def_cfa_offset 20
 604              	 
 605 0018 F0BD     	 pop {r4,r5,r6,r7,pc}
 606              	.LVL49:
 607              	.L72:
 608              	.LCFI9:
 609              	 .cfi_restore_state
 610              	.LBB139:
 611              	.LBB137:
 612              	.LBB134:
 613              	.LBB135:
  54:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         if (1 == g_entry_count)
 614              	 .loc 1 54 0
 615 001a 2868     	 ldr r0,[r5]
 616              	.LVL50:
 617 001c 0130     	 adds r0,r0,#1
 618 001e 2860     	 str r0,[r5]
  55:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 619              	 .loc 1 55 0
 620 0020 2E68     	 ldr r6,[r5]
 621 0022 012E     	 cmp r6,#1
 622 0024 F2D1     	 bne .L65
 623              	.LBE135:
 624              	.LBE134:
 625              	.LBE137:
 626              	.LBE139:
 148:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                              p_data,
 627              	 .loc 1 148 0
 628 0026 94F804C0 	 ldrb ip,[r4,#4]
 143:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 629              	 .loc 1 143 0
 630 002a DFF830E0 	 ldr lr,.L73+4
 146:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                              (bool)TRUE,
 631              	 .loc 1 146 0
 632 002e 2068     	 ldr r0,[r4]
 633 0030 0B46     	 mov r3,r1
 634 0032 8DE84400 	 stmia sp,{r2,r6}
 635 0036 3146     	 mov r1,r6
 636              	.LVL51:
 637 0038 4FEA4C02 	 lsl r2,ip,#1
 638              	.LVL52:
 143:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 639              	 .loc 1 143 0
 640 003c CEF80040 	 str r4,[lr]
 146:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                              (bool)TRUE,
 641              	 .loc 1 146 0
 642 0040 FFF7FEFF 	 bl I2C_MASTER_Transmit
 643              	.LVL53:
 644 0044 0028     	 cmp r0,#0
 645 0046 E6D0     	 beq .L69
 156:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                        (p_i2c_context->p_upper_layer_ctx , PAL_I2C_
 646              	 .loc 1 156 0
 647 0048 A068     	 ldr r0,[r4,#8]
 648 004a E368     	 ldr r3,[r4,#12]
 649 004c 3146     	 mov r1,r6
 650 004e 9847     	 blx r3
 651              	.LVL54:
 652              	.LBB140:
 653              	.LBB141:
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 654              	 .loc 1 66 0
 655 0050 2F60     	 str r7,[r5]
 656              	.LBE141:
 657              	.LBE140:
 138:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 658              	 .loc 1 138 0
 659 0052 3046     	 mov r0,r6
 660 0054 DFE7     	 b .L69
 661              	.L74:
 662 0056 00BF     	 .align 2
 663              	.L73:
 664 0058 00000000 	 .word .LANCHOR0
 665 005c 00000000 	 .word .LANCHOR1
 666              	 .cfi_endproc
 667              	.LFE488:
 669              	 .section .text.pal_i2c_read,"ax",%progbits
 670              	 .align 2
 671              	 .global pal_i2c_read
 672              	 .thumb
 673              	 .thumb_func
 675              	pal_i2c_read:
 676              	.LFB489:
 176:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 177:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** pal_status_t pal_i2c_read(const pal_i2c_t * p_i2c_context, uint8_t * p_data, uint16_t length)
 178:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
 677              	 .loc 1 178 0
 678              	 .cfi_startproc
 679              	 
 680              	 
 681              	.LVL55:
 682 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 683              	.LCFI10:
 684              	 .cfi_def_cfa_offset 20
 685              	 .cfi_offset 4,-20
 686              	 .cfi_offset 5,-16
 687              	 .cfi_offset 6,-12
 688              	 .cfi_offset 7,-8
 689              	 .cfi_offset 14,-4
 690              	.LBB148:
 691              	.LBB149:
  52:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 692              	 .loc 1 52 0
 693 0002 154E     	 ldr r6,.L84
 694 0004 3768     	 ldr r7,[r6]
 695              	.LBE149:
 696              	.LBE148:
 697              	 .loc 1 178 0
 698 0006 85B0     	 sub sp,sp,#20
 699              	.LCFI11:
 700              	 .cfi_def_cfa_offset 40
 701              	 .loc 1 178 0
 702 0008 0446     	 mov r4,r0
 703              	.LBB154:
 704              	.LBB152:
  52:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 705              	 .loc 1 52 0
 706 000a 37B1     	 cbz r7,.L83
 707              	.LVL56:
 708              	.L76:
 709              	.LBE152:
 710              	.LBE154:
 179:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     pal_status_t status = PAL_STATUS_FAILURE;
 180:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 181:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     //Acquire the I2C bus before read/write
 182:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (PAL_STATUS_SUCCESS == pal_i2c_acquire(p_i2c_context))
 183:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 184:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         gp_pal_i2c_current_ctx = p_i2c_context;
 185:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 186:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         //Invoke the low level i2c master driver API to read from the bus
 187:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         if (I2C_MASTER_STATUS_SUCCESS != I2C_MASTER_Receive(p_i2c_context->p_i2c_hw_config,
 188:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             (bool)TRUE,
 189:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             (p_i2c_context->slave_address << 1),
 190:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             p_data,
 191:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             length,
 192:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             (bool)TRUE,
 193:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             (bool)TRUE))
 194:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 195:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             //If I2C Master fails to invoke the read operation, invoke upper layer event handler wi
 196:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 197:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             //lint --e{611} suppress "void* function pointer is type casted to upper_layer_callback
 198:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             ((upper_layer_callback_t)(p_i2c_context->upper_layer_event_handler))
 199:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                        (p_i2c_context->p_upper_layer_ctx , PAL_I2C_
 200:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 201:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             //Release I2C Bus
 202:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             pal_i2c_release((void * )p_i2c_context);
 203:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         }
 204:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         else
 205:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 206:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             status = PAL_STATUS_SUCCESS;
 207:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         }
 208:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 209:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     else
 210:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 211:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         status = PAL_STATUS_I2C_BUSY;
 212:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         //lint --e{611} suppress "void* function pointer is type casted to upper_layer_callback_t t
 213:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         ((upper_layer_callback_t)(p_i2c_context->upper_layer_event_handler))
 711              	 .loc 1 213 0
 712 000c A068     	 ldr r0,[r4,#8]
 713 000e E368     	 ldr r3,[r4,#12]
 714 0010 0221     	 movs r1,#2
 715              	.LVL57:
 716 0012 9847     	 blx r3
 717              	.LVL58:
 211:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         //lint --e{611} suppress "void* function pointer is type casted to upper_layer_callback_t t
 718              	 .loc 1 211 0
 719 0014 0220     	 movs r0,#2
 720              	.LVL59:
 721              	.L80:
 214:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                         (p_i2c_context->p_upper_layer_ctx , PAL_I2C
 215:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 216:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     return status;
 217:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 722              	 .loc 1 217 0
 723 0016 05B0     	 add sp,sp,#20
 724              	.LCFI12:
 725              	 .cfi_remember_state
 726              	 .cfi_def_cfa_offset 20
 727              	 
 728 0018 F0BD     	 pop {r4,r5,r6,r7,pc}
 729              	.LVL60:
 730              	.L83:
 731              	.LCFI13:
 732              	 .cfi_restore_state
 733              	.LBB155:
 734              	.LBB153:
 735              	.LBB150:
 736              	.LBB151:
  54:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         if (1 == g_entry_count)
 737              	 .loc 1 54 0
 738 001a 3068     	 ldr r0,[r6]
 739              	.LVL61:
 740 001c 0130     	 adds r0,r0,#1
 741 001e 3060     	 str r0,[r6]
  55:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 742              	 .loc 1 55 0
 743 0020 3568     	 ldr r5,[r6]
 744 0022 012D     	 cmp r5,#1
 745 0024 F2D1     	 bne .L76
 746              	.LBE151:
 747              	.LBE150:
 748              	.LBE153:
 749              	.LBE155:
 189:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             p_data,
 750              	 .loc 1 189 0
 751 0026 94F804C0 	 ldrb ip,[r4,#4]
 184:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 752              	 .loc 1 184 0
 753 002a DFF830E0 	 ldr lr,.L84+4
 187:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             (bool)TRUE,
 754              	 .loc 1 187 0
 755 002e 2068     	 ldr r0,[r4]
 756 0030 0295     	 str r5,[sp,#8]
 757 0032 8DE82400 	 stmia sp,{r2,r5}
 758 0036 0B46     	 mov r3,r1
 759 0038 4FEA4C02 	 lsl r2,ip,#1
 760              	.LVL62:
 761 003c 2946     	 mov r1,r5
 762              	.LVL63:
 184:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 763              	 .loc 1 184 0
 764 003e CEF80040 	 str r4,[lr]
 187:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             (bool)TRUE,
 765              	 .loc 1 187 0
 766 0042 FFF7FEFF 	 bl I2C_MASTER_Receive
 767              	.LVL64:
 768 0046 0028     	 cmp r0,#0
 769 0048 E5D0     	 beq .L80
 198:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                        (p_i2c_context->p_upper_layer_ctx , PAL_I2C_
 770              	 .loc 1 198 0
 771 004a A068     	 ldr r0,[r4,#8]
 772 004c E368     	 ldr r3,[r4,#12]
 773 004e 2946     	 mov r1,r5
 774 0050 9847     	 blx r3
 775              	.LVL65:
 776              	.LBB156:
 777              	.LBB157:
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 778              	 .loc 1 66 0
 779 0052 3760     	 str r7,[r6]
 780              	.LBE157:
 781              	.LBE156:
 179:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 782              	 .loc 1 179 0
 783 0054 2846     	 mov r0,r5
 784 0056 DEE7     	 b .L80
 785              	.L85:
 786              	 .align 2
 787              	.L84:
 788 0058 00000000 	 .word .LANCHOR0
 789 005c 00000000 	 .word .LANCHOR1
 790              	 .cfi_endproc
 791              	.LFE489:
 793              	 .section .text.pal_i2c_set_bitrate,"ax",%progbits
 794              	 .align 2
 795              	 .global pal_i2c_set_bitrate
 796              	 .thumb
 797              	 .thumb_func
 799              	pal_i2c_set_bitrate:
 800              	.LFB490:
 218:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 219:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** pal_status_t pal_i2c_set_bitrate(const pal_i2c_t * p_i2c_context, uint16_t bitrate)
 220:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** {
 801              	 .loc 1 220 0
 802              	 .cfi_startproc
 803              	 
 804              	 
 805              	.LVL66:
 806 0000 70B5     	 push {r4,r5,r6,lr}
 807              	.LCFI14:
 808              	 .cfi_def_cfa_offset 16
 809              	 .cfi_offset 4,-16
 810              	 .cfi_offset 5,-12
 811              	 .cfi_offset 6,-8
 812              	 .cfi_offset 14,-4
 813              	.LBB164:
 814              	.LBB165:
  52:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 815              	 .loc 1 52 0
 816 0002 154C     	 ldr r4,.L100
 817 0004 2368     	 ldr r3,[r4]
 818              	.LBE165:
 819              	.LBE164:
 820              	 .loc 1 220 0
 821 0006 0546     	 mov r5,r0
 822              	.LBB170:
 823              	.LBB168:
  52:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 824              	 .loc 1 52 0
 825 0008 3BB1     	 cbz r3,.L99
 826              	.L87:
 827              	.LVL67:
 828              	.LBE168:
 829              	.LBE170:
 221:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     pal_status_t return_status = PAL_STATUS_FAILURE;
 222:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     optiga_lib_status_t event = PAL_I2C_EVENT_ERROR;
 223:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** 
 224:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     //Acquire the I2C bus before setting the bitrate
 225:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (PAL_STATUS_SUCCESS == pal_i2c_acquire(p_i2c_context))
 226:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 227:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         // If the user provided bitrate is greater than the I2C master hardware maximum supported v
 228:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         // set the I2C master to its maximum supported value.
 229:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         if (bitrate > PAL_I2C_MASTER_MAX_BITRATE)
 230:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 231:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             bitrate = PAL_I2C_MASTER_MAX_BITRATE;
 232:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         }
 233:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         if (XMC_I2C_CH_STATUS_OK != XMC_I2C_CH_SetBaudrate(((I2C_MASTER_t * )p_i2c_context->p_i2c_h
 234:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             bitrate * 1000))
 235:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 236:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             return_status = PAL_STATUS_FAILURE;
 237:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         }
 238:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         else
 239:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 240:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             return_status = PAL_STATUS_SUCCESS;
 241:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****             event = PAL_I2C_EVENT_SUCCESS;
 242:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         }
 243:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 244:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     else
 245:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 246:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         return_status = PAL_STATUS_I2C_BUSY;
 247:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         event = PAL_I2C_EVENT_BUSY;
 248:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 249:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (0 != p_i2c_context->upper_layer_event_handler)
 830              	 .loc 1 249 0
 831 000a EB68     	 ldr r3,[r5,#12]
 832 000c 13B1     	 cbz r3,.L92
 250:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 251:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         //lint --e{611} suppress "void* function pointer is type casted to upper_layer_callback_t t
 252:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         ((callback_handler_t)(p_i2c_context->upper_layer_event_handler))(p_i2c_context->p_upper_lay
 833              	 .loc 1 252 0
 834 000e A868     	 ldr r0,[r5,#8]
 835              	.LVL68:
 836 0010 0221     	 movs r1,#2
 837              	.LVL69:
 838 0012 9847     	 blx r3
 839              	.LVL70:
 840              	.L92:
 220:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     pal_status_t return_status = PAL_STATUS_FAILURE;
 841              	 .loc 1 220 0
 842 0014 0226     	 movs r6,#2
 253:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 254:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     //Release I2C Bus if its acquired 
 255:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     if (PAL_STATUS_I2C_BUSY != return_status)
 256:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 257:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         pal_i2c_release((void * )p_i2c_context);
 258:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 259:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     return return_status;
 260:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 843              	 .loc 1 260 0
 844 0016 3046     	 mov r0,r6
 845 0018 70BD     	 pop {r4,r5,r6,pc}
 846              	.LVL71:
 847              	.L99:
 848              	.LBB171:
 849              	.LBB169:
 850              	.LBB166:
 851              	.LBB167:
  54:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         if (1 == g_entry_count)
 852              	 .loc 1 54 0
 853 001a 2368     	 ldr r3,[r4]
 854 001c 0133     	 adds r3,r3,#1
 855 001e 2360     	 str r3,[r4]
  55:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 856              	 .loc 1 55 0
 857 0020 2368     	 ldr r3,[r4]
 858 0022 012B     	 cmp r3,#1
 859 0024 F1D1     	 bne .L87
 860              	.LVL72:
 861              	.LBE167:
 862              	.LBE166:
 863              	.LBE169:
 864              	.LBE171:
 234:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 865              	 .loc 1 234 0
 866 0026 B1F5C87F 	 cmp r1,#400
 233:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             bitrate * 1000))
 867              	 .loc 1 233 0
 868 002a 0368     	 ldr r3,[r0]
 234:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         {
 869              	 .loc 1 234 0
 870 002c 28BF     	 it cs
 871 002e 4FF4C871 	 movcs r1,#400
 872              	.LVL73:
 873 0032 4FF47A72 	 mov r2,#1000
 233:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****                                                             bitrate * 1000))
 874              	 .loc 1 233 0
 875 0036 1868     	 ldr r0,[r3]
 876              	.LVL74:
 877 0038 02FB01F1 	 mul r1,r2,r1
 878 003c FFF7FEFF 	 bl XMC_I2C_CH_SetBaudrate
 879              	.LVL75:
 249:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 880              	 .loc 1 249 0
 881 0040 EB68     	 ldr r3,[r5,#12]
 236:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****         }
 882              	 .loc 1 236 0
 883 0042 061C     	 adds r6,r0,#0
 884 0044 18BF     	 it ne
 885 0046 0126     	 movne r6,#1
 886              	.LVL76:
 249:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     {
 887              	 .loc 1 249 0
 888 0048 13B1     	 cbz r3,.L89
 252:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c ****     }
 889              	 .loc 1 252 0
 890 004a A868     	 ldr r0,[r5,#8]
 891 004c 3146     	 mov r1,r6
 892 004e 9847     	 blx r3
 893              	.LVL77:
 894              	.L89:
 895              	.LBB172:
 896              	.LBB173:
  66:D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/pal/xmc4800\pal_i2c.c **** }
 897              	 .loc 1 66 0
 898 0050 0023     	 movs r3,#0
 899 0052 2360     	 str r3,[r4]
 900              	.LBE173:
 901              	.LBE172:
 902              	 .loc 1 260 0
 903 0054 3046     	 mov r0,r6
 904 0056 70BD     	 pop {r4,r5,r6,pc}
 905              	.LVL78:
 906              	.L101:
 907              	 .align 2
 908              	.L100:
 909 0058 00000000 	 .word .LANCHOR0
 910              	 .cfi_endproc
 911              	.LFE490:
 913              	 .section .bss.gp_pal_i2c_current_ctx,"aw",%nobits
 914              	 .align 2
 915              	 .set .LANCHOR1,.+0
 918              	gp_pal_i2c_current_ctx:
 919 0000 00000000 	 .space 4
 920              	 .section .bss.g_entry_count,"aw",%nobits
 921              	 .align 2
 922              	 .set .LANCHOR0,.+0
 925              	g_entry_count:
 926 0000 00000000 	 .space 4
 927              	 .text
 928              	.Letext0:
 929              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 930              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 931              	 .file 5 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 932              	 .file 6 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usic.h"
 933              	 .file 7 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_i2c.h"
 934              	 .file 8 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 935              	 .file 9 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usbd.h"
 936              	 .file 10 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/USBD/usbd.h"
 937              	 .file 11 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/common/optiga_lib_types.h"
 938              	 .file 12 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/pal/pal.h"
 939              	 .file 13 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/pal/pal_i2c.h"
 940              	 .file 14 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Include/core_cm4.h"
 941              	 .file 15 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
 942              	 .file 16 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/USBD/usbd_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pal_i2c.c
    {standard input}:20     .text.invoke_upper_layer_callback:00000000 $t
    {standard input}:25     .text.invoke_upper_layer_callback:00000000 invoke_upper_layer_callback
    {standard input}:54     .text.invoke_upper_layer_callback:00000010 $d
    {standard input}:61     .text.i2c_master_end_of_transmit_callback:00000000 $t
    {standard input}:66     .text.i2c_master_end_of_transmit_callback:00000000 i2c_master_end_of_transmit_callback
    {standard input}:99     .text.i2c_master_end_of_transmit_callback:00000018 $d
    {standard input}:109    .text.i2c_master_end_of_receive_callback:00000000 $t
    {standard input}:114    .text.i2c_master_end_of_receive_callback:00000000 i2c_master_end_of_receive_callback
    {standard input}:147    .text.i2c_master_end_of_receive_callback:00000018 $d
    {standard input}:157    .text.i2c_master_error_detected_callback:00000000 $t
    {standard input}:162    .text.i2c_master_error_detected_callback:00000000 i2c_master_error_detected_callback
    {standard input}:265    .text.i2c_master_error_detected_callback:0000004c $d
    {standard input}:271    .text.i2c_master_nack_received_callback:00000000 $t
    {standard input}:276    .text.i2c_master_nack_received_callback:00000000 i2c_master_nack_received_callback
    {standard input}:380    .text.i2c_master_nack_received_callback:0000004c $d
    {standard input}:388    .text.i2c_master_arbitration_lost_callback:00000000 $t
    {standard input}:393    .text.i2c_master_arbitration_lost_callback:00000000 i2c_master_arbitration_lost_callback
    {standard input}:497    .text.i2c_master_arbitration_lost_callback:0000004c $d
    {standard input}:505    .text.pal_i2c_init:00000000 $t
    {standard input}:510    .text.pal_i2c_init:00000000 pal_i2c_init
    {standard input}:526    .text.pal_i2c_deinit:00000000 $t
    {standard input}:531    .text.pal_i2c_deinit:00000000 pal_i2c_deinit
    {standard input}:547    .text.pal_i2c_write:00000000 $t
    {standard input}:552    .text.pal_i2c_write:00000000 pal_i2c_write
    {standard input}:664    .text.pal_i2c_write:00000058 $d
    {standard input}:670    .text.pal_i2c_read:00000000 $t
    {standard input}:675    .text.pal_i2c_read:00000000 pal_i2c_read
    {standard input}:788    .text.pal_i2c_read:00000058 $d
    {standard input}:794    .text.pal_i2c_set_bitrate:00000000 $t
    {standard input}:799    .text.pal_i2c_set_bitrate:00000000 pal_i2c_set_bitrate
    {standard input}:909    .text.pal_i2c_set_bitrate:00000058 $d
    {standard input}:914    .bss.gp_pal_i2c_current_ctx:00000000 $d
    {standard input}:918    .bss.gp_pal_i2c_current_ctx:00000000 gp_pal_i2c_current_ctx
    {standard input}:921    .bss.g_entry_count:00000000 $d
    {standard input}:925    .bss.g_entry_count:00000000 g_entry_count
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
I2C_MASTER_AbortReceive
I2C_MASTER_AbortTransmit
I2C_MASTER_Transmit
I2C_MASTER_Receive
XMC_I2C_CH_SetBaudrate
