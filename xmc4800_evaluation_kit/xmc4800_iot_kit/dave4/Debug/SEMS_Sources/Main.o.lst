   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "Main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.my_optiga_shell_begin,"ax",%progbits
  20              	 .align 2
  21              	 .global my_optiga_shell_begin
  22              	 .thumb
  23              	 .thumb_func
  25              	my_optiga_shell_begin:
  26              	.LFB454:
  27              	 .file 1 "../SEMS_Sources/Main.c"
   1:../SEMS_Sources/Main.c **** #include <DAVE.h>
   2:../SEMS_Sources/Main.c **** #include "optiga/optiga_crypt.h"
   3:../SEMS_Sources/Main.c **** #include "optiga/optiga_util.h"
   4:../SEMS_Sources/Main.c **** #include "optiga/common/optiga_lib_logger.h"
   5:../SEMS_Sources/Main.c **** #include "optiga/pal/pal_os_event.h"
   6:../SEMS_Sources/Main.c **** #include "optiga/pal/pal.h"
   7:../SEMS_Sources/Main.c **** #include "optiga/pal/pal_os_timer.h"
   8:../SEMS_Sources/Main.c **** #include "optiga_example.h"
   9:../SEMS_Sources/Main.c **** #include "optiga/pal/pal_logger.h"
  10:../SEMS_Sources/Main.c **** 
  11:../SEMS_Sources/Main.c **** 
  12:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Timer.h"
  13:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Random.h"
  14:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/RSA.h"
  15:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/SymEncrypt.h"
  16:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Unlock.h"
  17:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Com.h"
  18:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Hash.h"
  19:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Patcher.h"
  20:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Config.h"
  21:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Init.h"
  22:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Test.h"
  23:../SEMS_Sources/Main.c **** #include "../SEMS_Headers/Decoder.h"
  24:../SEMS_Sources/Main.c **** 
  25:../SEMS_Sources/Main.c **** extern pal_logger_t logger_console;
  26:../SEMS_Sources/Main.c **** 
  27:../SEMS_Sources/Main.c **** 
  28:../SEMS_Sources/Main.c **** 
  29:../SEMS_Sources/Main.c **** volatile uint8_t failed_req = 0;
  30:../SEMS_Sources/Main.c **** volatile uint8_t cooldowned = false;
  31:../SEMS_Sources/Main.c **** 
  32:../SEMS_Sources/Main.c **** 
  33:../SEMS_Sources/Main.c **** void my_optiga_shell_begin(void)
  34:../SEMS_Sources/Main.c **** {
  28              	 .loc 1 34 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 36
  36              	 .cfi_offset 4,-36
  37              	 .cfi_offset 5,-32
  38              	 .cfi_offset 6,-28
  39              	 .cfi_offset 7,-24
  40              	 .cfi_offset 8,-20
  41              	 .cfi_offset 9,-16
  42              	 .cfi_offset 10,-12
  43              	 .cfi_offset 11,-8
  44              	 .cfi_offset 14,-4
  45 0004 91B0     	 sub sp,sp,#68
  46              	.LCFI1:
  47              	 .cfi_def_cfa_offset 104
  48 0006 DFF88C91 	 ldr r9,.L19+16
  49 000a DFF88C81 	 ldr r8,.L19+20
  35:../SEMS_Sources/Main.c **** 
  36:../SEMS_Sources/Main.c **** 	uint8_t sec_unlocked = false;
  37:../SEMS_Sources/Main.c **** 	uint8_t sec_comm = false;
  38:../SEMS_Sources/Main.c **** 
  39:../SEMS_Sources/Main.c **** 	// Toate comenzile au 32 de bytes
  40:../SEMS_Sources/Main.c **** 	uint8_t command[32];
  41:../SEMS_Sources/Main.c **** 
  42:../SEMS_Sources/Main.c **** #if LIFECYCLE==TESTING
  43:../SEMS_Sources/Main.c **** 	uint8_t is_testing = true;
  44:../SEMS_Sources/Main.c **** 	while(is_testing)
  45:../SEMS_Sources/Main.c **** 	{
  46:../SEMS_Sources/Main.c **** 		testing();
  47:../SEMS_Sources/Main.c **** 	}
  48:../SEMS_Sources/Main.c **** #endif
  49:../SEMS_Sources/Main.c **** 
  50:../SEMS_Sources/Main.c **** 	init_SEMS();
  50              	 .loc 1 50 0
  51 000e FFF7FEFF 	 bl init_SEMS
  52              	.LVL1:
  37:../SEMS_Sources/Main.c **** 
  53              	 .loc 1 37 0
  54 0012 0026     	 movs r6,#0
  51:../SEMS_Sources/Main.c **** 
  52:../SEMS_Sources/Main.c **** 	while(true)
  53:../SEMS_Sources/Main.c **** 	{
  54:../SEMS_Sources/Main.c **** 
  55:../SEMS_Sources/Main.c **** 		// Wrapper for serial read
  56:../SEMS_Sources/Main.c **** 		if(0u == read_request(command, sec_unlocked, sec_comm))
  57:../SEMS_Sources/Main.c **** 		{
  58:../SEMS_Sources/Main.c **** 			req_type req_rcv;
  59:../SEMS_Sources/Main.c **** 			if(true == cooldowned)
  60:../SEMS_Sources/Main.c **** 			{
  61:../SEMS_Sources/Main.c **** 				uint8_t buff[32] = "Denied by cooldown.";
  62:../SEMS_Sources/Main.c **** 				optiga_lib_print_bytes(buff, 32);
  63:../SEMS_Sources/Main.c **** 				continue;
  64:../SEMS_Sources/Main.c **** 			}
  65:../SEMS_Sources/Main.c **** 
  66:../SEMS_Sources/Main.c **** 			req_rcv = decode_req(command);
  67:../SEMS_Sources/Main.c **** 			switch(req_rcv){
  68:../SEMS_Sources/Main.c **** 				case SEC_UNLOCK:
  69:../SEMS_Sources/Main.c **** 				{
  70:../SEMS_Sources/Main.c **** 					sec_unlocked = secure_unlock();
  71:../SEMS_Sources/Main.c **** 					sec_comm = 0;  // reset sec_comm flag
  72:../SEMS_Sources/Main.c **** 					break;
  73:../SEMS_Sources/Main.c **** 				}
  74:../SEMS_Sources/Main.c **** 				case SEC_COM: // momentan nu pot da 2 cereri de sec com
  75:../SEMS_Sources/Main.c **** 				{
  76:../SEMS_Sources/Main.c **** 					sec_comm = secure_communication();
  77:../SEMS_Sources/Main.c **** 					break;
  78:../SEMS_Sources/Main.c **** 				}
  79:../SEMS_Sources/Main.c **** 				case SEC_LOCK:
  80:../SEMS_Sources/Main.c **** 				{
  81:../SEMS_Sources/Main.c **** 					uint8_t buff[32] = "Locked";
  82:../SEMS_Sources/Main.c **** 					sec_unlocked = 0;
  83:../SEMS_Sources/Main.c **** 					write_request(buff, sec_comm);
  84:../SEMS_Sources/Main.c **** 					break;
  85:../SEMS_Sources/Main.c **** 				}
  86:../SEMS_Sources/Main.c **** 				case EXAMPLE:
  87:../SEMS_Sources/Main.c **** 				{
  88:../SEMS_Sources/Main.c **** 					uint8_t buff[32] = "AABBCCDEFG";
  89:../SEMS_Sources/Main.c **** 					write_request(buff, sec_comm);
  90:../SEMS_Sources/Main.c **** 					break;
  91:../SEMS_Sources/Main.c **** 				}
  92:../SEMS_Sources/Main.c **** 				case UNKNOWN:
  93:../SEMS_Sources/Main.c **** 				default: // Unknown request
  94:../SEMS_Sources/Main.c **** 				{
  95:../SEMS_Sources/Main.c **** 					uint8_t buff[32] = "Unknown request";
  96:../SEMS_Sources/Main.c **** 					write_request(buff, sec_comm);
  97:../SEMS_Sources/Main.c **** 					break;
  98:../SEMS_Sources/Main.c **** 				}
  99:../SEMS_Sources/Main.c **** 			}  // end-switch
 100:../SEMS_Sources/Main.c **** 
 101:../SEMS_Sources/Main.c **** 		}
 102:../SEMS_Sources/Main.c **** 		else
 103:../SEMS_Sources/Main.c **** 		{
 104:../SEMS_Sources/Main.c **** 			// Req before unlock || invalid Token, Nonce, Hash
 105:../SEMS_Sources/Main.c **** 
 106:../SEMS_Sources/Main.c **** 			failed_req++;
 107:../SEMS_Sources/Main.c **** 			if(true == cooldowned)
  55              	 .loc 1 107 0
  56 0014 CB46     	 mov fp,r9
 106:../SEMS_Sources/Main.c **** 			if(true == cooldowned)
  57              	 .loc 1 106 0
  58 0016 C246     	 mov r10,r8
  36:../SEMS_Sources/Main.c **** 	uint8_t sec_comm = false;
  59              	 .loc 1 36 0
  60 0018 3746     	 mov r7,r6
  61 001a 08AC     	 add r4,sp,#32
  62              	.LVL2:
  63              	.L2:
  56:../SEMS_Sources/Main.c **** 		{
  64              	 .loc 1 56 0
  65 001c 6846     	 mov r0,sp
  66 001e 3946     	 mov r1,r7
  67 0020 3246     	 mov r2,r6
  68 0022 FFF7FEFF 	 bl read_request
  69              	.LVL3:
  70 0026 0546     	 mov r5,r0
  71 0028 40BB     	 cbnz r0,.L3
  72              	.L17:
  73              	.LBB2:
  59:../SEMS_Sources/Main.c **** 			{
  74              	 .loc 1 59 0
  75 002a 99F80030 	 ldrb r3,[r9]
  76 002e 012B     	 cmp r3,#1
  77 0030 74D0     	 beq .L16
  66:../SEMS_Sources/Main.c **** 			switch(req_rcv){
  78              	 .loc 1 66 0
  79 0032 6846     	 mov r0,sp
  80 0034 FFF7FEFF 	 bl decode_req
  81              	.LVL4:
  67:../SEMS_Sources/Main.c **** 				case SEC_UNLOCK:
  82              	 .loc 1 67 0
  83 0038 0328     	 cmp r0,#3
  84 003a 00F28280 	 bhi .L6
  85 003e DFE800F0 	 tbb [pc,r0]
  86              	.L8:
  87 0042 5B       	 .byte (.L7-.L8)/2
  88 0043 57       	 .byte (.L9-.L8)/2
  89 0044 41       	 .byte (.L10-.L8)/2
  90 0045 02       	 .byte (.L11-.L8)/2
  91              	 .p2align 1
  92              	.L11:
  93              	.LBB3:
  88:../SEMS_Sources/Main.c **** 					write_request(buff, sec_comm);
  94              	 .loc 1 88 0
  95 0046 4F4B     	 ldr r3,.L19
  96 0048 93E80700 	 ldmia r3,{r0,r1,r2}
  97              	.LVL5:
  98 004c 2346     	 mov r3,r4
  99 004e 03C3     	 stmia r3!,{r0,r1}
 100 0050 23F8022B 	 strh r2,[r3],#2
 101 0054 150C     	 lsrs r5,r2,#16
 102 0056 0021     	 movs r1,#0
 103 0058 1522     	 movs r2,#21
 104 005a 0DF12B00 	 add r0,sp,#43
 105 005e 1D70     	 strb r5,[r3]
 106 0060 FFF7FEFF 	 bl memset
 107              	.LVL6:
  89:../SEMS_Sources/Main.c **** 					break;
 108              	 .loc 1 89 0
 109 0064 3146     	 mov r1,r6
 110 0066 2046     	 mov r0,r4
 111 0068 FFF7FEFF 	 bl write_request
 112              	.LVL7:
 113              	.LBE3:
 114              	.LBE2:
  56:../SEMS_Sources/Main.c **** 		{
 115              	 .loc 1 56 0
 116 006c 6846     	 mov r0,sp
 117 006e 3946     	 mov r1,r7
 118 0070 3246     	 mov r2,r6
 119 0072 FFF7FEFF 	 bl read_request
 120              	.LVL8:
 121 0076 0546     	 mov r5,r0
 122 0078 0028     	 cmp r0,#0
 123 007a D6D0     	 beq .L17
 124              	.L3:
 106:../SEMS_Sources/Main.c **** 			if(true == cooldowned)
 125              	 .loc 1 106 0
 126 007c 98F80030 	 ldrb r3,[r8]
 127 0080 0133     	 adds r3,r3,#1
 128 0082 DBB2     	 uxtb r3,r3
 129 0084 88F80030 	 strb r3,[r8]
 130              	 .loc 1 107 0
 131 0088 99F80030 	 ldrb r3,[r9]
 132 008c 012B     	 cmp r3,#1
 133 008e 66D0     	 beq .L18
 108:../SEMS_Sources/Main.c **** 			{
 109:../SEMS_Sources/Main.c **** 				uint8_t buff[32] = "Denied by cooldown.";
 110:../SEMS_Sources/Main.c **** 				optiga_lib_print_bytes(buff, 32);
 111:../SEMS_Sources/Main.c **** 			}
 112:../SEMS_Sources/Main.c **** 			else
 113:../SEMS_Sources/Main.c **** 			{
 114:../SEMS_Sources/Main.c **** 				if(failed_req >= MAX_FAILED_REQ)
 134              	 .loc 1 114 0
 135 0090 9AF80030 	 ldrb r3,[r10]
 136 0094 03F0FF05 	 and r5,r3,#255
 137 0098 9BB3     	 cbz r3,.L13
 138              	.LBB7:
 115:../SEMS_Sources/Main.c **** 				{
 116:../SEMS_Sources/Main.c **** 					uint8_t buff[32] = "Cooldown activated.";
 139              	 .loc 1 116 0 discriminator 7
 140 009a DFF800E1 	 ldr lr,.L19+24
 141 009e BEE80F00 	 ldmia lr!,{r0,r1,r2,r3}
 142 00a2 2546     	 mov r5,r4
 143 00a4 0FC5     	 stmia r5!,{r0,r1,r2,r3}
 144 00a6 DEF80030 	 ldr r3,[lr]
 145 00aa 2B60     	 str r3,[r5]
 117:../SEMS_Sources/Main.c **** 					optiga_lib_print_bytes(buff, 32);
 146              	 .loc 1 117 0 discriminator 7
 147 00ac 2046     	 mov r0,r4
 116:../SEMS_Sources/Main.c **** 					optiga_lib_print_bytes(buff, 32);
 148              	 .loc 1 116 0 discriminator 7
 149 00ae 0023     	 movs r3,#0
 150              	 .loc 1 117 0 discriminator 7
 151 00b0 2021     	 movs r1,#32
 116:../SEMS_Sources/Main.c **** 					optiga_lib_print_bytes(buff, 32);
 152              	 .loc 1 116 0 discriminator 7
 153 00b2 0D93     	 str r3,[sp,#52]
 154 00b4 0E93     	 str r3,[sp,#56]
 155 00b6 0F93     	 str r3,[sp,#60]
 156              	 .loc 1 117 0 discriminator 7
 157 00b8 FFF7FEFF 	 bl optiga_lib_print_bytes
 158              	.LVL9:
 118:../SEMS_Sources/Main.c **** 					cooldowned = true;
 159              	 .loc 1 118 0 discriminator 7
 160 00bc 0123     	 movs r3,#1
 161 00be 8BF80030 	 strb r3,[fp]
 162              	.LBE7:
 163 00c2 ABE7     	 b .L2
 164              	.LVL10:
 165              	.L10:
 166              	.LBB8:
 167              	.LBB4:
  81:../SEMS_Sources/Main.c **** 					sec_unlocked = 0;
 168              	 .loc 1 81 0
 169 00c4 304B     	 ldr r3,.L19+4
 170 00c6 93E80300 	 ldmia r3,{r0,r1}
 171              	.LVL11:
 172 00ca 1922     	 movs r2,#25
 173 00cc 0B0C     	 lsrs r3,r1,#16
 174 00ce 2060     	 str r0,[r4]
 175 00d0 ADF82410 	 strh r1,[sp,#36]
 176 00d4 0DF12700 	 add r0,sp,#39
 177 00d8 0021     	 movs r1,#0
  83:../SEMS_Sources/Main.c **** 					break;
 178              	 .loc 1 83 0
 179 00da 08AC     	 add r4,sp,#32
  81:../SEMS_Sources/Main.c **** 					sec_unlocked = 0;
 180              	 .loc 1 81 0
 181 00dc 8DF82630 	 strb r3,[sp,#38]
 182 00e0 FFF7FEFF 	 bl memset
 183              	.LVL12:
  83:../SEMS_Sources/Main.c **** 					break;
 184              	 .loc 1 83 0
 185 00e4 2046     	 mov r0,r4
 186 00e6 3146     	 mov r1,r6
 187 00e8 FFF7FEFF 	 bl write_request
 188              	.LVL13:
  82:../SEMS_Sources/Main.c **** 					write_request(buff, sec_comm);
 189              	 .loc 1 82 0
 190 00ec 0027     	 movs r7,#0
 191 00ee 95E7     	 b .L2
 192              	.LVL14:
 193              	.L9:
 194              	.LBE4:
  76:../SEMS_Sources/Main.c **** 					break;
 195              	 .loc 1 76 0
 196 00f0 FFF7FEFF 	 bl secure_communication
 197              	.LVL15:
 198 00f4 0646     	 mov r6,r0
 199              	.LVL16:
  77:../SEMS_Sources/Main.c **** 				}
 200              	 .loc 1 77 0
 201 00f6 91E7     	 b .L2
 202              	.LVL17:
 203              	.L7:
  70:../SEMS_Sources/Main.c **** 					sec_comm = 0;  // reset sec_comm flag
 204              	 .loc 1 70 0
 205 00f8 FFF7FEFF 	 bl secure_unlock
 206              	.LVL18:
  71:../SEMS_Sources/Main.c **** 					break;
 207              	 .loc 1 71 0
 208 00fc 0026     	 movs r6,#0
 209              	.LVL19:
  70:../SEMS_Sources/Main.c **** 					sec_comm = 0;  // reset sec_comm flag
 210              	 .loc 1 70 0
 211 00fe 0746     	 mov r7,r0
 212              	.LVL20:
  72:../SEMS_Sources/Main.c **** 				}
 213              	 .loc 1 72 0
 214 0100 8CE7     	 b .L2
 215              	.LVL21:
 216              	.L13:
 217              	.LBE8:
 218              	.LBB9:
 119:../SEMS_Sources/Main.c **** 				}
 120:../SEMS_Sources/Main.c **** 				else
 121:../SEMS_Sources/Main.c **** 				{
 122:../SEMS_Sources/Main.c **** 					// Just a wrong request
 123:../SEMS_Sources/Main.c **** 					uint8_t buff[32] = "Request denied.";
 219              	 .loc 1 123 0 discriminator 8
 220 0102 224B     	 ldr r3,.L19+8
 221 0104 0C95     	 str r5,[sp,#48]
 222 0106 0FCB     	 ldmia r3,{r0,r1,r2,r3}
 223 0108 84E80F00 	 stmia r4,{r0,r1,r2,r3}
 124:../SEMS_Sources/Main.c **** 					optiga_lib_print_bytes(buff, 32);
 224              	 .loc 1 124 0 discriminator 8
 225 010c 2046     	 mov r0,r4
 226 010e 2021     	 movs r1,#32
 123:../SEMS_Sources/Main.c **** 					optiga_lib_print_bytes(buff, 32);
 227              	 .loc 1 123 0 discriminator 8
 228 0110 0D95     	 str r5,[sp,#52]
 229 0112 0E95     	 str r5,[sp,#56]
 230 0114 0F95     	 str r5,[sp,#60]
 231              	 .loc 1 124 0 discriminator 8
 232 0116 FFF7FEFF 	 bl optiga_lib_print_bytes
 233              	.LVL22:
 234 011a 7FE7     	 b .L2
 235              	.L16:
 236              	.LBE9:
 237              	.LBB10:
 238              	.LBB5:
  61:../SEMS_Sources/Main.c **** 				optiga_lib_print_bytes(buff, 32);
 239              	 .loc 1 61 0
 240 011c DFF880C0 	 ldr ip,.L19+28
 241 0120 0D90     	 str r0,[sp,#52]
 242 0122 BCE80F00 	 ldmia ip!,{r0,r1,r2,r3}
 243 0126 A646     	 mov lr,r4
 244 0128 AEE80F00 	 stmia lr!,{r0,r1,r2,r3}
 245 012c DCF80030 	 ldr r3,[ip]
 246 0130 0E95     	 str r5,[sp,#56]
  62:../SEMS_Sources/Main.c **** 				continue;
 247              	 .loc 1 62 0
 248 0132 2046     	 mov r0,r4
 249 0134 2021     	 movs r1,#32
  61:../SEMS_Sources/Main.c **** 				optiga_lib_print_bytes(buff, 32);
 250              	 .loc 1 61 0
 251 0136 0F95     	 str r5,[sp,#60]
 252 0138 CEF80030 	 str r3,[lr]
  62:../SEMS_Sources/Main.c **** 				continue;
 253              	 .loc 1 62 0
 254 013c FFF7FEFF 	 bl optiga_lib_print_bytes
 255              	.LVL23:
 256 0140 6CE7     	 b .L2
 257              	.LVL24:
 258              	.L6:
 259              	.LBE5:
 260              	.LBB6:
  95:../SEMS_Sources/Main.c **** 					write_request(buff, sec_comm);
 261              	 .loc 1 95 0
 262 0142 134B     	 ldr r3,.L19+12
 263 0144 0FCB     	 ldmia r3,{r0,r1,r2,r3}
 264              	.LVL25:
 265 0146 84E80F00 	 stmia r4,{r0,r1,r2,r3}
 266 014a 0023     	 movs r3,#0
  96:../SEMS_Sources/Main.c **** 					break;
 267              	 .loc 1 96 0
 268 014c 2046     	 mov r0,r4
 269 014e 3146     	 mov r1,r6
  95:../SEMS_Sources/Main.c **** 					write_request(buff, sec_comm);
 270              	 .loc 1 95 0
 271 0150 0C93     	 str r3,[sp,#48]
 272 0152 0D93     	 str r3,[sp,#52]
 273 0154 0E93     	 str r3,[sp,#56]
 274 0156 0F93     	 str r3,[sp,#60]
  96:../SEMS_Sources/Main.c **** 					break;
 275              	 .loc 1 96 0
 276 0158 FFF7FEFF 	 bl write_request
 277              	.LVL26:
 278 015c 5EE7     	 b .L2
 279              	.L18:
 280              	.LBE6:
 281              	.LBE10:
 282              	.LBB11:
 109:../SEMS_Sources/Main.c **** 				optiga_lib_print_bytes(buff, 32);
 283              	 .loc 1 109 0 discriminator 6
 284 015e DFF840E0 	 ldr lr,.L19+28
 285 0162 BEE80F00 	 ldmia lr!,{r0,r1,r2,r3}
 286 0166 2546     	 mov r5,r4
 287 0168 0FC5     	 stmia r5!,{r0,r1,r2,r3}
 288 016a DEF80030 	 ldr r3,[lr]
 289 016e 2B60     	 str r3,[r5]
 110:../SEMS_Sources/Main.c **** 			}
 290              	 .loc 1 110 0 discriminator 6
 291 0170 2046     	 mov r0,r4
 109:../SEMS_Sources/Main.c **** 				optiga_lib_print_bytes(buff, 32);
 292              	 .loc 1 109 0 discriminator 6
 293 0172 0023     	 movs r3,#0
 110:../SEMS_Sources/Main.c **** 			}
 294              	 .loc 1 110 0 discriminator 6
 295 0174 2021     	 movs r1,#32
 109:../SEMS_Sources/Main.c **** 				optiga_lib_print_bytes(buff, 32);
 296              	 .loc 1 109 0 discriminator 6
 297 0176 0D93     	 str r3,[sp,#52]
 298 0178 0E93     	 str r3,[sp,#56]
 299 017a 0F93     	 str r3,[sp,#60]
 110:../SEMS_Sources/Main.c **** 			}
 300              	 .loc 1 110 0 discriminator 6
 301 017c FFF7FEFF 	 bl optiga_lib_print_bytes
 302              	.LVL27:
 303              	.LBE11:
 304 0180 4CE7     	 b .L2
 305              	.L20:
 306 0182 00BF     	 .align 2
 307              	.L19:
 308 0184 40000000 	 .word .LANCHOR1+64
 309 0188 20000000 	 .word .LANCHOR1+32
 310 018c A0000000 	 .word .LANCHOR1+160
 311 0190 60000000 	 .word .LANCHOR1+96
 312 0194 00000000 	 .word .LANCHOR0
 313 0198 00000000 	 .word .LANCHOR2
 314 019c 80000000 	 .word .LANCHOR1+128
 315 01a0 00000000 	 .word .LANCHOR1
 316              	 .cfi_endproc
 317              	.LFE454:
 319              	 .global cooldowned
 320              	 .global failed_req
 321              	 .section .rodata
 322              	 .align 2
 323              	 .set .LANCHOR1,.+0
 324              	.LC0:
 325 0000 44656E69 	 .ascii "Denied by cooldown.\000"
 325      65642062 
 325      7920636F 
 325      6F6C646F 
 325      776E2E00 
 326 0014 00000000 	 .space 12
 326      00000000 
 326      00000000 
 327              	.LC1:
 328 0020 4C6F636B 	 .ascii "Locked\000"
 328      656400
 329 0027 00000000 	 .space 25
 329      00000000 
 329      00000000 
 329      00000000 
 329      00000000 
 330              	.LC2:
 331 0040 41414242 	 .ascii "AABBCCDEFG\000"
 331      43434445 
 331      464700
 332 004b 00000000 	 .space 21
 332      00000000 
 332      00000000 
 332      00000000 
 332      00000000 
 333              	.LC3:
 334 0060 556E6B6E 	 .ascii "Unknown request\000"
 334      6F776E20 
 334      72657175 
 334      65737400 
 335 0070 00000000 	 .space 16
 335      00000000 
 335      00000000 
 335      00000000 
 336              	.LC4:
 337 0080 436F6F6C 	 .ascii "Cooldown activated.\000"
 337      646F776E 
 337      20616374 
 337      69766174 
 337      65642E00 
 338 0094 00000000 	 .space 12
 338      00000000 
 338      00000000 
 339              	.LC5:
 340 00a0 52657175 	 .ascii "Request denied.\000"
 340      65737420 
 340      64656E69 
 340      65642E00 
 341 00b0 00000000 	 .space 16
 341      00000000 
 341      00000000 
 341      00000000 
 342              	 .section .bss.failed_req,"aw",%nobits
 343              	 .set .LANCHOR2,.+0
 346              	failed_req:
 347 0000 00       	 .space 1
 348              	 .section .bss.cooldowned,"aw",%nobits
 349              	 .set .LANCHOR0,.+0
 352              	cooldowned:
 353 0000 00       	 .space 1
 354              	 .text
 355              	.Letext0:
 356              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 357              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 358              	 .file 4 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 359              	 .file 5 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usic.h"
 360              	 .file 6 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 361              	 .file 7 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usbd.h"
 362              	 .file 8 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/USBD/usbd.h"
 363              	 .file 9 "../SEMS_Sources/../SEMS_Headers/Decoder.h"
 364              	 .file 10 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Include/core_cm4.h"
 365              	 .file 11 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
 366              	 .file 12 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/USBD/usbd_extern.h"
 367              	 .file 13 "../SEMS_Sources/../SEMS_Headers/Patcher.h"
 368              	 .file 14 "../SEMS_Sources/../SEMS_Headers/Com.h"
 369              	 .file 15 "../SEMS_Sources/../SEMS_Headers/Unlock.h"
 370              	 .file 16 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/common/optiga_lib_logger.h"
 371              	 .file 17 "../SEMS_Sources/../SEMS_Headers/Init.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Main.c
    {standard input}:20     .text.my_optiga_shell_begin:00000000 $t
    {standard input}:25     .text.my_optiga_shell_begin:00000000 my_optiga_shell_begin
    {standard input}:87     .text.my_optiga_shell_begin:00000042 $d
    {standard input}:91     .text.my_optiga_shell_begin:00000046 $t
    {standard input}:308    .text.my_optiga_shell_begin:00000184 $d
    {standard input}:352    .bss.cooldowned:00000000 cooldowned
    {standard input}:346    .bss.failed_req:00000000 failed_req
    {standard input}:322    .rodata:00000000 $d
    {standard input}:347    .bss.failed_req:00000000 $d
    {standard input}:353    .bss.cooldowned:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
init_SEMS
read_request
decode_req
memset
write_request
optiga_lib_print_bytes
secure_communication
secure_unlock
