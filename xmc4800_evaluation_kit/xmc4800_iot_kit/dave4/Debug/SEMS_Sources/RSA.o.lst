   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "RSA.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.optiga_crypt_callback,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	optiga_crypt_callback:
  25              	.LFB454:
  26              	 .file 1 "../SEMS_Sources/RSA.c"
   1:../SEMS_Sources/RSA.c **** #include "optiga/optiga_crypt.h"
   2:../SEMS_Sources/RSA.c **** #include "optiga_example.h"
   3:../SEMS_Sources/RSA.c **** #include "../SEMS_Headers/RSA.h"
   4:../SEMS_Sources/RSA.c **** #include "../SEMS_Headers/Hash.h"
   5:../SEMS_Sources/RSA.c **** #include <DAVE.h>
   6:../SEMS_Sources/RSA.c **** 
   7:../SEMS_Sources/RSA.c **** #ifdef OPTIGA_CRYPT_RSA_ENCRYPT_ENABLED
   8:../SEMS_Sources/RSA.c **** 
   9:../SEMS_Sources/RSA.c **** #ifndef OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
  10:../SEMS_Sources/RSA.c **** extern void example_optiga_init(void);
  11:../SEMS_Sources/RSA.c **** extern void example_optiga_deinit(void);
  12:../SEMS_Sources/RSA.c **** #endif
  13:../SEMS_Sources/RSA.c **** 
  14:../SEMS_Sources/RSA.c **** 
  15:../SEMS_Sources/RSA.c **** 
  16:../SEMS_Sources/RSA.c **** void example_util_encode_rsa_public_key_in_bit_string_format(const uint8_t * n_buffer,
  17:../SEMS_Sources/RSA.c ****                                                         uint16_t n_length,
  18:../SEMS_Sources/RSA.c ****                                                         const uint8_t * e_buffer,
  19:../SEMS_Sources/RSA.c ****                                                         uint16_t e_length,
  20:../SEMS_Sources/RSA.c ****                                                         uint8_t * pub_key_buffer,
  21:../SEMS_Sources/RSA.c ****                                                         uint16_t * pub_key_length);
  22:../SEMS_Sources/RSA.c **** 
  23:../SEMS_Sources/RSA.c **** /**
  24:../SEMS_Sources/RSA.c ****  * Callback when optiga_crypt_xxxx operation is completed asynchronously
  25:../SEMS_Sources/RSA.c ****  */
  26:../SEMS_Sources/RSA.c **** static volatile optiga_lib_status_t optiga_lib_status;
  27:../SEMS_Sources/RSA.c **** //lint --e{818} suppress "argument "context" is not used in the sample provided"
  28:../SEMS_Sources/RSA.c **** static void optiga_crypt_callback(void * context, optiga_lib_status_t return_status)
  29:../SEMS_Sources/RSA.c **** {
  27              	 .loc 1 29 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
  30:../SEMS_Sources/RSA.c ****     optiga_lib_status = return_status;
  33              	 .loc 1 30 0
  34 0000 014B     	 ldr r3,.L2
  35 0002 1980     	 strh r1,[r3]
  36 0004 7047     	 bx lr
  37              	.L3:
  38 0006 00BF     	 .align 2
  39              	.L2:
  40 0008 00000000 	 .word .LANCHOR0
  41              	 .cfi_endproc
  42              	.LFE454:
  44              	 .section .text.optiga_crypt_rsa_encrypt_message_wrapper,"ax",%progbits
  45              	 .align 2
  46              	 .global optiga_crypt_rsa_encrypt_message_wrapper
  47              	 .thumb
  48              	 .thumb_func
  50              	optiga_crypt_rsa_encrypt_message_wrapper:
  51              	.LFB455:
  31:../SEMS_Sources/RSA.c ****     if (NULL != context)
  32:../SEMS_Sources/RSA.c ****     {
  33:../SEMS_Sources/RSA.c ****         // callback to upper layer here
  34:../SEMS_Sources/RSA.c ****     }
  35:../SEMS_Sources/RSA.c **** }
  36:../SEMS_Sources/RSA.c **** 
  37:../SEMS_Sources/RSA.c **** // RSA 1024 public key
  38:../SEMS_Sources/RSA.c **** static const uint8_t rsa_public_key_modulus [] =
  39:../SEMS_Sources/RSA.c **** {
  40:../SEMS_Sources/RSA.c ****     //Public key modulus
  41:../SEMS_Sources/RSA.c **** 	0xD6, 0x79, 0x78, 0x52, 0xFD, 0x1C, 0x66, 0x01, 0x20, 0x6A, 0x4A, 0x7F, 0x24, 0x54, 0xF1, 0xC2,
  42:../SEMS_Sources/RSA.c **** 	0x86, 0xEB, 0x1A, 0xC5, 0xFF, 0xC2, 0xEB, 0x29, 0xE6, 0x2A, 0x8F, 0x3E, 0xFF, 0xF1, 0x92, 0x62,
  43:../SEMS_Sources/RSA.c **** 	0xFD, 0x20, 0xEB, 0x8C, 0xCC, 0xA3, 0x13, 0x4E, 0x15, 0x28, 0x1D, 0xE3, 0x0A, 0x1A, 0x7B, 0x85,
  44:../SEMS_Sources/RSA.c **** 	0x16, 0xC4, 0xEA, 0x69, 0x6F, 0x75, 0x60, 0x43, 0x62, 0x85, 0x2B, 0x3C, 0xB1, 0x4A, 0xBF, 0xDF,
  45:../SEMS_Sources/RSA.c **** 	0xB5, 0x33, 0x00, 0x6F, 0x4D, 0xF7, 0x87, 0x34, 0xB9, 0x4A, 0xF3, 0x07, 0xD6, 0x84, 0x3E, 0x4A,
  46:../SEMS_Sources/RSA.c **** 	0x9B, 0x16, 0xDD, 0x39, 0xFA, 0x32, 0x7F, 0xAA, 0x13, 0x6A, 0xDB, 0x0D, 0x69, 0x42, 0x16, 0xF4,
  47:../SEMS_Sources/RSA.c **** 	0x63, 0xEF, 0xD4, 0xA4, 0xB2, 0x0E, 0x1E, 0xD6, 0x29, 0x11, 0xFF, 0xAF, 0xAC, 0x72, 0xF6, 0x3E,
  48:../SEMS_Sources/RSA.c **** 	0x4C, 0xDB, 0x0D, 0xBC, 0x62, 0x09, 0xE7, 0xF6, 0xD7, 0x44, 0x10, 0x1B, 0x56, 0xB9, 0x42, 0x21,
  49:../SEMS_Sources/RSA.c **** };
  50:../SEMS_Sources/RSA.c **** 
  51:../SEMS_Sources/RSA.c **** // RSA 1024 public key
  52:../SEMS_Sources/RSA.c **** static const uint8_t rsa_public_key_exponent [] =
  53:../SEMS_Sources/RSA.c **** {
  54:../SEMS_Sources/RSA.c ****     //Public Exponent
  55:../SEMS_Sources/RSA.c ****     0x00, 0x01, 0x00, 0x01
  56:../SEMS_Sources/RSA.c **** };
  57:../SEMS_Sources/RSA.c **** 
  58:../SEMS_Sources/RSA.c **** static uint8_t rsa_public_key[150] = {0x00};
  59:../SEMS_Sources/RSA.c **** static uint16_t rsa_public_key_length = 0;
  60:../SEMS_Sources/RSA.c **** 
  61:../SEMS_Sources/RSA.c **** /**
  62:../SEMS_Sources/RSA.c ****  * The below example demonstrates RSA encryption
  63:../SEMS_Sources/RSA.c ****  * #optiga_crypt_rsa_encrypt_message where message is provided by user
  64:../SEMS_Sources/RSA.c ****  *
  65:../SEMS_Sources/RSA.c ****  */
  66:../SEMS_Sources/RSA.c **** void optiga_crypt_rsa_encrypt_message_wrapper(uint8_t message[], uint8_t message_length, uint8_t en
  67:../SEMS_Sources/RSA.c **** {
  52              	 .loc 1 67 0
  53              	 .cfi_startproc
  54              	 
  55              	 
  56              	.LVL1:
  57 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
  58              	.LCFI0:
  59              	 .cfi_def_cfa_offset 36
  60              	 .cfi_offset 4,-36
  61              	 .cfi_offset 5,-32
  62              	 .cfi_offset 6,-28
  63              	 .cfi_offset 7,-24
  64              	 .cfi_offset 8,-20
  65              	 .cfi_offset 9,-16
  66              	 .cfi_offset 10,-12
  67              	 .cfi_offset 11,-8
  68              	 .cfi_offset 14,-4
  69 0004 8BB0     	 sub sp,sp,#44
  70              	.LCFI1:
  71              	 .cfi_def_cfa_offset 80
  72              	 .loc 1 67 0
  73 0006 8146     	 mov r9,r0
  74 0008 8846     	 mov r8,r1
  75 000a 9346     	 mov fp,r2
  76 000c 9A46     	 mov r10,r3
  68:../SEMS_Sources/RSA.c ****     optiga_lib_status_t return_status = !OPTIGA_LIB_SUCCESS;
  69:../SEMS_Sources/RSA.c ****     optiga_rsa_encryption_scheme_t encryption_scheme;
  70:../SEMS_Sources/RSA.c ****     public_key_from_host_t public_key_from_host;
  71:../SEMS_Sources/RSA.c **** 
  72:../SEMS_Sources/RSA.c ****     optiga_crypt_t * me = NULL;
  73:../SEMS_Sources/RSA.c **** 
  74:../SEMS_Sources/RSA.c ****     do
  75:../SEMS_Sources/RSA.c ****     {
  76:../SEMS_Sources/RSA.c **** 
  77:../SEMS_Sources/RSA.c **** #ifndef OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
  78:../SEMS_Sources/RSA.c ****         /**
  79:../SEMS_Sources/RSA.c ****          * Open the application on OPTIGA which is a precondition to perform any other operations
  80:../SEMS_Sources/RSA.c ****          * using optiga_util_open_application
  81:../SEMS_Sources/RSA.c ****          */
  82:../SEMS_Sources/RSA.c ****         example_optiga_init();
  77              	 .loc 1 82 0
  78 000e FFF7FEFF 	 bl example_optiga_init
  79              	.LVL2:
  83:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
  84:../SEMS_Sources/RSA.c **** 
  85:../SEMS_Sources/RSA.c ****         /**
  86:../SEMS_Sources/RSA.c ****          * 1. Create OPTIGA Crypt Instance
  87:../SEMS_Sources/RSA.c ****          *
  88:../SEMS_Sources/RSA.c ****          */
  89:../SEMS_Sources/RSA.c ****         me = optiga_crypt_create(0, optiga_crypt_callback, NULL);
  80              	 .loc 1 89 0
  81 0012 0020     	 movs r0,#0
  82 0014 0246     	 mov r2,r0
  83 0016 2549     	 ldr r1,.L16
  84 0018 FFF7FEFF 	 bl optiga_crypt_create
  85              	.LVL3:
  90:../SEMS_Sources/RSA.c ****         if (NULL == me)
  86              	 .loc 1 90 0
  87 001c 0546     	 mov r5,r0
  88 001e 0028     	 cmp r0,#0
  89 0020 3ED0     	 beq .L5
  91:../SEMS_Sources/RSA.c ****         {
  92:../SEMS_Sources/RSA.c ****             break;
  93:../SEMS_Sources/RSA.c ****         }
  94:../SEMS_Sources/RSA.c **** 
  95:../SEMS_Sources/RSA.c ****         /**
  96:../SEMS_Sources/RSA.c ****          * 2. RSA encryption
  97:../SEMS_Sources/RSA.c ****          */
  98:../SEMS_Sources/RSA.c ****         // Form rsa public key in bit string format
  99:../SEMS_Sources/RSA.c ****         example_util_encode_rsa_public_key_in_bit_string_format(rsa_public_key_modulus,
  90              	 .loc 1 99 0
  91 0022 DFF89CC0 	 ldr ip,.L16+20
  92 0026 224F     	 ldr r7,.L16+4
  93 0028 2248     	 ldr r0,.L16+8
  94              	.LVL4:
  95 002a 234A     	 ldr r2,.L16+12
  96 002c CDF81CC0 	 str ip,[sp,#28]
  97 0030 8DE88010 	 stmia sp,{r7,ip}
  98 0034 8021     	 movs r1,#128
  99 0036 0423     	 movs r3,#4
 100 0038 FFF7FEFF 	 bl example_util_encode_rsa_public_key_in_bit_string_format
 101              	.LVL5:
 100:../SEMS_Sources/RSA.c ****                                                            sizeof(rsa_public_key_modulus),
 101:../SEMS_Sources/RSA.c ****                                                            rsa_public_key_exponent,
 102:../SEMS_Sources/RSA.c ****                                                            sizeof(rsa_public_key_exponent),
 103:../SEMS_Sources/RSA.c ****                                                            rsa_public_key,
 104:../SEMS_Sources/RSA.c ****                                                            &rsa_public_key_length);
 105:../SEMS_Sources/RSA.c **** 
 106:../SEMS_Sources/RSA.c ****         encryption_scheme = OPTIGA_RSAES_PKCS1_V15;
 107:../SEMS_Sources/RSA.c ****         public_key_from_host.public_key = rsa_public_key;
 108:../SEMS_Sources/RSA.c ****         public_key_from_host.length = rsa_public_key_length;
 102              	 .loc 1 108 0
 103 003c DDF81CC0 	 ldr ip,[sp,#28]
 109:../SEMS_Sources/RSA.c ****         public_key_from_host.key_type = (uint8_t)OPTIGA_RSA_KEY_1024_BIT_EXPONENTIAL;
 110:../SEMS_Sources/RSA.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 104              	 .loc 1 110 0
 105 0040 1E4C     	 ldr r4,.L16+16
 108:../SEMS_Sources/RSA.c ****         public_key_from_host.key_type = (uint8_t)OPTIGA_RSA_KEY_1024_BIT_EXPONENTIAL;
 106              	 .loc 1 108 0
 107 0042 BCF800E0 	 ldrh lr,[ip]
 111:../SEMS_Sources/RSA.c **** 
 112:../SEMS_Sources/RSA.c **** 
 113:../SEMS_Sources/RSA.c ****         return_status = optiga_crypt_rsa_encrypt_message(me,
 108              	 .loc 1 113 0
 109 0046 CDF810B0 	 str fp,[sp,#16]
 110 004a 0021     	 movs r1,#0
 110:../SEMS_Sources/RSA.c **** 
 111              	 .loc 1 110 0
 112 004c 0126     	 movs r6,#1
 113              	 .loc 1 113 0
 114 004e 08A8     	 add r0,sp,#32
 115 0050 0091     	 str r1,[sp]
 116 0052 0191     	 str r1,[sp,#4]
 117 0054 0390     	 str r0,[sp,#12]
 109:../SEMS_Sources/RSA.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 118              	 .loc 1 109 0
 119 0056 4FF0410C 	 mov ip,#65
 120              	 .loc 1 113 0
 121 005a CDF814A0 	 str r10,[sp,#20]
 122 005e 4A46     	 mov r2,r9
 123 0060 4346     	 mov r3,r8
 124 0062 0296     	 str r6,[sp,#8]
 125 0064 2846     	 mov r0,r5
 126 0066 1121     	 movs r1,#17
 108:../SEMS_Sources/RSA.c ****         public_key_from_host.key_type = (uint8_t)OPTIGA_RSA_KEY_1024_BIT_EXPONENTIAL;
 127              	 .loc 1 108 0
 128 0068 ADF824E0 	 strh lr,[sp,#36]
 107:../SEMS_Sources/RSA.c ****         public_key_from_host.length = rsa_public_key_length;
 129              	 .loc 1 107 0
 130 006c 0897     	 str r7,[sp,#32]
 110:../SEMS_Sources/RSA.c **** 
 131              	 .loc 1 110 0
 132 006e 2680     	 strh r6,[r4]
 109:../SEMS_Sources/RSA.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 133              	 .loc 1 109 0
 134 0070 8DF826C0 	 strb ip,[sp,#38]
 135              	 .loc 1 113 0
 136 0074 FFF7FEFF 	 bl optiga_crypt_rsa_encrypt_message
 137              	.LVL6:
 114:../SEMS_Sources/RSA.c ****                                                             encryption_scheme,
 115:../SEMS_Sources/RSA.c ****                                                             message,
 116:../SEMS_Sources/RSA.c **** 															message_length,
 117:../SEMS_Sources/RSA.c ****                                                             NULL,
 118:../SEMS_Sources/RSA.c ****                                                             0,
 119:../SEMS_Sources/RSA.c ****                                                             OPTIGA_CRYPT_HOST_DATA,
 120:../SEMS_Sources/RSA.c ****                                                             &public_key_from_host,
 121:../SEMS_Sources/RSA.c ****                                                             encrypted_message,
 122:../SEMS_Sources/RSA.c ****                                                             encrypted_message_length);
 123:../SEMS_Sources/RSA.c **** 
 124:../SEMS_Sources/RSA.c ****         WAIT_AND_CHECK_STATUS(return_status, optiga_lib_status);
 138              	 .loc 1 124 0
 139 0078 38B1     	 cbz r0,.L7
 140              	.LVL7:
 141              	.L6:
 125:../SEMS_Sources/RSA.c **** 
 126:../SEMS_Sources/RSA.c **** 
 127:../SEMS_Sources/RSA.c ****         return_status = OPTIGA_LIB_SUCCESS;
 128:../SEMS_Sources/RSA.c **** 
 129:../SEMS_Sources/RSA.c ****     } while (FALSE);
 130:../SEMS_Sources/RSA.c ****     OPTIGA_EXAMPLE_LOG_STATUS(return_status);
 131:../SEMS_Sources/RSA.c **** 
 132:../SEMS_Sources/RSA.c **** #ifndef OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 133:../SEMS_Sources/RSA.c ****     /**
 134:../SEMS_Sources/RSA.c ****      * Close the application on OPTIGA after all the operations are executed
 135:../SEMS_Sources/RSA.c ****      * using optiga_util_close_application
 136:../SEMS_Sources/RSA.c ****      */
 137:../SEMS_Sources/RSA.c ****     example_optiga_deinit();
 142              	 .loc 1 137 0
 143 007a FFF7FEFF 	 bl example_optiga_deinit
 144              	.LVL8:
 138:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 139:../SEMS_Sources/RSA.c **** 
 140:../SEMS_Sources/RSA.c ****     if (me)
 141:../SEMS_Sources/RSA.c ****     {
 142:../SEMS_Sources/RSA.c ****         //Destroy the instance after the completion of usecase if not required.
 143:../SEMS_Sources/RSA.c ****         return_status = optiga_crypt_destroy(me);
 145              	 .loc 1 143 0
 146 007e 2846     	 mov r0,r5
 147 0080 FFF7FEFF 	 bl optiga_crypt_destroy
 148              	.LVL9:
 144:../SEMS_Sources/RSA.c ****     }
 145:../SEMS_Sources/RSA.c **** 
 146:../SEMS_Sources/RSA.c **** }
 149              	 .loc 1 146 0
 150 0084 0BB0     	 add sp,sp,#44
 151              	.LCFI2:
 152              	 .cfi_remember_state
 153              	 .cfi_def_cfa_offset 36
 154              	 
 155 0086 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 156              	.LVL10:
 157              	.L7:
 158              	.LCFI3:
 159              	 .cfi_restore_state
 124:../SEMS_Sources/RSA.c **** 
 160              	 .loc 1 124 0 discriminator 1
 161 008a 2388     	 ldrh r3,[r4]
 162 008c 0B4A     	 ldr r2,.L16+16
 163 008e 9BB2     	 uxth r3,r3
 164 0090 012B     	 cmp r3,#1
 165 0092 FAD0     	 beq .L7
 124:../SEMS_Sources/RSA.c **** 
 166              	 .loc 1 124 0 is_stmt 0 discriminator 2
 167 0094 1388     	 ldrh r3,[r2]
 168 0096 9BB2     	 uxth r3,r3
 169 0098 002B     	 cmp r3,#0
 170 009a EED0     	 beq .L6
 124:../SEMS_Sources/RSA.c **** 
 171              	 .loc 1 124 0 discriminator 3
 172 009c 1388     	 ldrh r3,[r2]
 173              	.LVL11:
 174 009e ECE7     	 b .L6
 175              	.LVL12:
 176              	.L5:
 137:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 177              	 .loc 1 137 0 is_stmt 1
 178 00a0 FFF7FEFF 	 bl example_optiga_deinit
 179              	.LVL13:
 180              	 .loc 1 146 0
 181 00a4 0BB0     	 add sp,sp,#44
 182              	.LCFI4:
 183              	 .cfi_def_cfa_offset 36
 184              	 
 185 00a6 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 186              	.LVL14:
 187              	.L17:
 188 00aa 00BF     	 .align 2
 189              	.L16:
 190 00ac 00000000 	 .word optiga_crypt_callback
 191 00b0 00000000 	 .word .LANCHOR3
 192 00b4 00000000 	 .word .LANCHOR1
 193 00b8 00000000 	 .word .LANCHOR2
 194 00bc 00000000 	 .word .LANCHOR0
 195 00c0 00000000 	 .word .LANCHOR4
 196              	 .cfi_endproc
 197              	.LFE455:
 199              	 .section .text.optiga_crypt_rsa_verify_message_wrapper,"ax",%progbits
 200              	 .align 2
 201              	 .global optiga_crypt_rsa_verify_message_wrapper
 202              	 .thumb
 203              	 .thumb_func
 205              	optiga_crypt_rsa_verify_message_wrapper:
 206              	.LFB456:
 147:../SEMS_Sources/RSA.c **** #endif  //OPTIGA_CRYPT_RSA_ENCRYPT_ENABLED
 148:../SEMS_Sources/RSA.c **** 
 149:../SEMS_Sources/RSA.c **** // Hash
 150:../SEMS_Sources/RSA.c **** // Encrypt Hash with PV
 151:../SEMS_Sources/RSA.c **** 
 152:../SEMS_Sources/RSA.c **** 
 153:../SEMS_Sources/RSA.c **** uint8_t optiga_crypt_rsa_verify_message_wrapper(uint8_t message[], uint8_t message_length, uint8_t 
 154:../SEMS_Sources/RSA.c **** {
 207              	 .loc 1 154 0
 208              	 .cfi_startproc
 209              	 
 210              	 
 211              	.LVL15:
 212 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 213              	.LCFI5:
 214              	 .cfi_def_cfa_offset 36
 215              	 .cfi_offset 4,-36
 216              	 .cfi_offset 5,-32
 217              	 .cfi_offset 6,-28
 218              	 .cfi_offset 7,-24
 219              	 .cfi_offset 8,-20
 220              	 .cfi_offset 9,-16
 221              	 .cfi_offset 10,-12
 222              	 .cfi_offset 11,-8
 223              	 .cfi_offset 14,-4
 224 0004 9BB0     	 sub sp,sp,#108
 225              	.LCFI6:
 226              	 .cfi_def_cfa_offset 144
 227              	 .loc 1 154 0
 228 0006 9246     	 mov r10,r2
 155:../SEMS_Sources/RSA.c **** 	uint8_t hashed_digest[32];
 156:../SEMS_Sources/RSA.c **** 	uint8_t decrypted_digest[32];
 157:../SEMS_Sources/RSA.c **** 	uint16_t decrypted_digest_length;
 158:../SEMS_Sources/RSA.c **** 	// Get digest
 159:../SEMS_Sources/RSA.c **** 	optiga_crypt_hash_data_wrapper(message, message_length, hashed_digest);
 229              	 .loc 1 159 0
 230 0008 0AAA     	 add r2,sp,#40
 231              	.LVL16:
 154:../SEMS_Sources/RSA.c **** 	uint8_t hashed_digest[32];
 232              	 .loc 1 154 0
 233 000a 9946     	 mov r9,r3
 234              	 .loc 1 159 0
 235 000c FFF7FEFF 	 bl optiga_crypt_hash_data_wrapper
 236              	.LVL17:
 237              	.LBB4:
 238              	.LBB5:
  82:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 239              	 .loc 1 82 0
 240 0010 FFF7FEFF 	 bl example_optiga_init
 241              	.LVL18:
  89:../SEMS_Sources/RSA.c ****         if (NULL == me)
 242              	 .loc 1 89 0
 243 0014 0020     	 movs r0,#0
 244 0016 0246     	 mov r2,r0
 245 0018 2849     	 ldr r1,.L30
 246 001a FFF7FEFF 	 bl optiga_crypt_create
 247              	.LVL19:
  90:../SEMS_Sources/RSA.c ****         {
 248              	 .loc 1 90 0
 249 001e 0546     	 mov r5,r0
 250 0020 0028     	 cmp r0,#0
 251 0022 48D0     	 beq .L19
  99:../SEMS_Sources/RSA.c ****                                                            sizeof(rsa_public_key_modulus),
 252              	 .loc 1 99 0
 253 0024 264F     	 ldr r7,.L30+4
 254 0026 DFF8A880 	 ldr r8,.L30+20
 255 002a 2648     	 ldr r0,.L30+8
 256              	.LVL20:
 257 002c 264A     	 ldr r2,.L30+12
 110:../SEMS_Sources/RSA.c **** 
 258              	 .loc 1 110 0
 259 002e 274C     	 ldr r4,.L30+16
  99:../SEMS_Sources/RSA.c ****                                                            sizeof(rsa_public_key_modulus),
 260              	 .loc 1 99 0
 261 0030 8021     	 movs r1,#128
 262 0032 0423     	 movs r3,#4
 263 0034 8DE88001 	 stmia sp,{r7,r8}
 264 0038 FFF7FEFF 	 bl example_util_encode_rsa_public_key_in_bit_string_format
 265              	.LVL21:
 110:../SEMS_Sources/RSA.c **** 
 266              	 .loc 1 110 0
 267 003c 0126     	 movs r6,#1
 113:../SEMS_Sources/RSA.c ****                                                             encryption_scheme,
 268              	 .loc 1 113 0
 269 003e 0021     	 movs r1,#0
 270 0040 0DF1480E 	 add lr,sp,#72
 271              	.LVL22:
 272 0044 0DF11E00 	 add r0,sp,#30
 273              	.LVL23:
 274 0048 0DF1200B 	 add fp,sp,#32
 108:../SEMS_Sources/RSA.c ****         public_key_from_host.key_type = (uint8_t)OPTIGA_RSA_KEY_1024_BIT_EXPONENTIAL;
 275              	 .loc 1 108 0
 276 004c B8F800C0 	 ldrh ip,[r8]
 113:../SEMS_Sources/RSA.c ****                                                             encryption_scheme,
 277              	 .loc 1 113 0
 278 0050 0091     	 str r1,[sp]
 279 0052 0191     	 str r1,[sp,#4]
 280 0054 CDF810E0 	 str lr,[sp,#16]
 281 0058 0590     	 str r0,[sp,#20]
 109:../SEMS_Sources/RSA.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 282              	 .loc 1 109 0
 283 005a 4FF0410E 	 mov lr,#65
 284              	.LVL24:
 113:../SEMS_Sources/RSA.c ****                                                             encryption_scheme,
 285              	 .loc 1 113 0
 286 005e 0296     	 str r6,[sp,#8]
 287 0060 5246     	 mov r2,r10
 288 0062 5FFA89F3 	 uxtb r3,r9
 289 0066 CDF80CB0 	 str fp,[sp,#12]
 290 006a 2846     	 mov r0,r5
 291              	.LVL25:
 292 006c 1121     	 movs r1,#17
 108:../SEMS_Sources/RSA.c ****         public_key_from_host.key_type = (uint8_t)OPTIGA_RSA_KEY_1024_BIT_EXPONENTIAL;
 293              	 .loc 1 108 0
 294 006e ADF824C0 	 strh ip,[sp,#36]
 107:../SEMS_Sources/RSA.c ****         public_key_from_host.length = rsa_public_key_length;
 295              	 .loc 1 107 0
 296 0072 0897     	 str r7,[sp,#32]
 110:../SEMS_Sources/RSA.c **** 
 297              	 .loc 1 110 0
 298 0074 2680     	 strh r6,[r4]
 109:../SEMS_Sources/RSA.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 299              	 .loc 1 109 0
 300 0076 8DF826E0 	 strb lr,[sp,#38]
 113:../SEMS_Sources/RSA.c ****                                                             encryption_scheme,
 301              	 .loc 1 113 0
 302 007a FFF7FEFF 	 bl optiga_crypt_rsa_encrypt_message
 303              	.LVL26:
 124:../SEMS_Sources/RSA.c **** 
 304              	 .loc 1 124 0
 305 007e 78B1     	 cbz r0,.L21
 306              	.LVL27:
 307              	.L20:
 137:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 308              	 .loc 1 137 0
 309 0080 FFF7FEFF 	 bl example_optiga_deinit
 310              	.LVL28:
 143:../SEMS_Sources/RSA.c ****     }
 311              	 .loc 1 143 0
 312 0084 2846     	 mov r0,r5
 313 0086 FFF7FEFF 	 bl optiga_crypt_destroy
 314              	.LVL29:
 315              	.L22:
 316              	.LBE5:
 317              	.LBE4:
 160:../SEMS_Sources/RSA.c **** 	// Decrypt digest with public key => received digest
 161:../SEMS_Sources/RSA.c **** 	optiga_crypt_rsa_encrypt_message_wrapper(signature, signature_length, decrypted_digest, &decrypted
 162:../SEMS_Sources/RSA.c **** 	// compare digest
 163:../SEMS_Sources/RSA.c **** 	if (hashed_digest[0] == decrypted_digest[0])
 318              	 .loc 1 163 0
 319 008a 9DF82830 	 ldrb r3,[sp,#40]
 320 008e 9DF84800 	 ldrb r0,[sp,#72]
 164:../SEMS_Sources/RSA.c **** 	{
 165:../SEMS_Sources/RSA.c **** 		return true;
 321              	 .loc 1 165 0
 322 0092 181A     	 subs r0,r3,r0
 323 0094 B0FA80F0 	 clz r0,r0
 324 0098 4009     	 lsrs r0,r0,#5
 166:../SEMS_Sources/RSA.c **** 	}
 167:../SEMS_Sources/RSA.c **** 	return false;
 168:../SEMS_Sources/RSA.c **** }
 325              	 .loc 1 168 0
 326 009a 1BB0     	 add sp,sp,#108
 327              	.LCFI7:
 328              	 .cfi_remember_state
 329              	 .cfi_def_cfa_offset 36
 330              	 
 331 009c BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 332              	.LVL30:
 333              	.L21:
 334              	.LCFI8:
 335              	 .cfi_restore_state
 336              	.LBB7:
 337              	.LBB6:
 124:../SEMS_Sources/RSA.c **** 
 338              	 .loc 1 124 0
 339 00a0 2388     	 ldrh r3,[r4]
 340 00a2 0A4A     	 ldr r2,.L30+16
 341 00a4 9BB2     	 uxth r3,r3
 342 00a6 012B     	 cmp r3,#1
 343 00a8 FAD0     	 beq .L21
 344 00aa 1388     	 ldrh r3,[r2]
 345 00ac 9BB2     	 uxth r3,r3
 346 00ae 002B     	 cmp r3,#0
 347 00b0 E6D0     	 beq .L20
 348 00b2 1388     	 ldrh r3,[r2]
 349              	.LVL31:
 350 00b4 E4E7     	 b .L20
 351              	.LVL32:
 352              	.L19:
 137:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 353              	 .loc 1 137 0
 354 00b6 FFF7FEFF 	 bl example_optiga_deinit
 355              	.LVL33:
 356 00ba E6E7     	 b .L22
 357              	.L31:
 358              	 .align 2
 359              	.L30:
 360 00bc 00000000 	 .word optiga_crypt_callback
 361 00c0 00000000 	 .word .LANCHOR3
 362 00c4 00000000 	 .word .LANCHOR1
 363 00c8 00000000 	 .word .LANCHOR2
 364 00cc 00000000 	 .word .LANCHOR0
 365 00d0 00000000 	 .word .LANCHOR4
 366              	.LBE6:
 367              	.LBE7:
 368              	 .cfi_endproc
 369              	.LFE456:
 371              	 .section .text.optiga_crypt_rsa_verify_wrapper,"ax",%progbits
 372              	 .align 2
 373              	 .global optiga_crypt_rsa_verify_wrapper
 374              	 .thumb
 375              	 .thumb_func
 377              	optiga_crypt_rsa_verify_wrapper:
 378              	.LFB457:
 169:../SEMS_Sources/RSA.c **** 
 170:../SEMS_Sources/RSA.c **** 
 171:../SEMS_Sources/RSA.c **** uint8_t optiga_crypt_rsa_verify_wrapper(uint8_t message[], uint8_t message_length, uint8_t signatur
 172:../SEMS_Sources/RSA.c **** {
 379              	 .loc 1 172 0
 380              	 .cfi_startproc
 381              	 
 382              	 
 383              	.LVL34:
 384 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 385              	.LCFI9:
 386              	 .cfi_def_cfa_offset 24
 387              	 .cfi_offset 4,-24
 388              	 .cfi_offset 5,-20
 389              	 .cfi_offset 6,-16
 390              	 .cfi_offset 7,-12
 391              	 .cfi_offset 8,-8
 392              	 .cfi_offset 14,-4
 173:../SEMS_Sources/RSA.c **** 	uint8_t succes = false;
 174:../SEMS_Sources/RSA.c **** 	uint8_t hashed_digest[32];
 175:../SEMS_Sources/RSA.c **** 
 176:../SEMS_Sources/RSA.c **** 	optiga_crypt_hash_data_wrapper(message, message_length, hashed_digest);
 177:../SEMS_Sources/RSA.c **** //	hashed_digest[5] = 5; Pentru a verifica ca si cazul negativ
 178:../SEMS_Sources/RSA.c **** 
 179:../SEMS_Sources/RSA.c ****     optiga_lib_status_t return_status = !OPTIGA_LIB_SUCCESS;
 180:../SEMS_Sources/RSA.c ****     optiga_crypt_t * me = NULL;
 181:../SEMS_Sources/RSA.c ****     uint32_t time_taken = 0;
 182:../SEMS_Sources/RSA.c **** 
 183:../SEMS_Sources/RSA.c ****     // Form rsa public key in bit string format
 184:../SEMS_Sources/RSA.c ****     example_util_encode_rsa_public_key_in_bit_string_format(rsa_public_key_modulus,
 393              	 .loc 1 184 0
 394 0004 314E     	 ldr r6,.L47
 395 0006 324D     	 ldr r5,.L47+4
 172:../SEMS_Sources/RSA.c **** 	uint8_t succes = false;
 396              	 .loc 1 172 0
 397 0008 92B0     	 sub sp,sp,#72
 398              	.LCFI10:
 399              	 .cfi_def_cfa_offset 96
 172:../SEMS_Sources/RSA.c **** 	uint8_t succes = false;
 400              	 .loc 1 172 0
 401 000a 1746     	 mov r7,r2
 176:../SEMS_Sources/RSA.c **** //	hashed_digest[5] = 5; Pentru a verifica ca si cazul negativ
 402              	 .loc 1 176 0
 403 000c 0AAA     	 add r2,sp,#40
 404              	.LVL35:
 181:../SEMS_Sources/RSA.c **** 
 405              	 .loc 1 181 0
 406 000e 0024     	 movs r4,#0
 172:../SEMS_Sources/RSA.c **** 	uint8_t succes = false;
 407              	 .loc 1 172 0
 408 0010 9846     	 mov r8,r3
 176:../SEMS_Sources/RSA.c **** //	hashed_digest[5] = 5; Pentru a verifica ca si cazul negativ
 409              	 .loc 1 176 0
 410 0012 FFF7FEFF 	 bl optiga_crypt_hash_data_wrapper
 411              	.LVL36:
 412              	 .loc 1 184 0
 413 0016 2F48     	 ldr r0,.L47+8
 414 0018 2F4A     	 ldr r2,.L47+12
 181:../SEMS_Sources/RSA.c **** 
 415              	 .loc 1 181 0
 416 001a 0794     	 str r4,[sp,#28]
 417              	 .loc 1 184 0
 418 001c 8021     	 movs r1,#128
 419 001e 8DE86000 	 stmia sp,{r5,r6}
 420 0022 0423     	 movs r3,#4
 421 0024 FFF7FEFF 	 bl example_util_encode_rsa_public_key_in_bit_string_format
 422              	.LVL37:
 185:../SEMS_Sources/RSA.c ****                                                        sizeof(rsa_public_key_modulus),
 186:../SEMS_Sources/RSA.c ****                                                        rsa_public_key_exponent,
 187:../SEMS_Sources/RSA.c ****                                                        sizeof(rsa_public_key_exponent),
 188:../SEMS_Sources/RSA.c ****                                                        rsa_public_key,
 189:../SEMS_Sources/RSA.c ****                                                        &rsa_public_key_length);
 190:../SEMS_Sources/RSA.c **** 
 191:../SEMS_Sources/RSA.c ****     public_key_from_host_t public_key_details =
 423              	 .loc 1 191 0
 424 0028 3388     	 ldrh r3,[r6]
 425 002a ADF82430 	 strh r3,[sp,#36]
 426 002e 4123     	 movs r3,#65
 427 0030 8DF82630 	 strb r3,[sp,#38]
 428 0034 0895     	 str r5,[sp,#32]
 192:../SEMS_Sources/RSA.c ****     {
 193:../SEMS_Sources/RSA.c ****          rsa_public_key,
 194:../SEMS_Sources/RSA.c ****          rsa_public_key_length,
 195:../SEMS_Sources/RSA.c ****          (uint8_t)OPTIGA_RSA_KEY_1024_BIT_EXPONENTIAL
 196:../SEMS_Sources/RSA.c ****     };
 197:../SEMS_Sources/RSA.c **** 
 198:../SEMS_Sources/RSA.c ****     do
 199:../SEMS_Sources/RSA.c ****     {
 200:../SEMS_Sources/RSA.c **** 
 201:../SEMS_Sources/RSA.c **** #ifndef OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 202:../SEMS_Sources/RSA.c ****         /**
 203:../SEMS_Sources/RSA.c ****          * Open the application on OPTIGA which is a precondition to perform any other operations
 204:../SEMS_Sources/RSA.c ****          * using optiga_util_open_application
 205:../SEMS_Sources/RSA.c ****          */
 206:../SEMS_Sources/RSA.c ****         example_optiga_init();
 429              	 .loc 1 206 0
 430 0036 FFF7FEFF 	 bl example_optiga_init
 431              	.LVL38:
 207:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 208:../SEMS_Sources/RSA.c **** 
 209:../SEMS_Sources/RSA.c ****         /**
 210:../SEMS_Sources/RSA.c ****          * 1. Create OPTIGA Crypt Instance
 211:../SEMS_Sources/RSA.c ****          */
 212:../SEMS_Sources/RSA.c ****         me = optiga_crypt_create(0, optiga_crypt_callback, NULL);
 432              	 .loc 1 212 0
 433 003a 2046     	 mov r0,r4
 434 003c 2246     	 mov r2,r4
 435 003e 2749     	 ldr r1,.L47+16
 436 0040 FFF7FEFF 	 bl optiga_crypt_create
 437              	.LVL39:
 213:../SEMS_Sources/RSA.c ****         if (NULL == me)
 438              	 .loc 1 213 0
 439 0044 0646     	 mov r6,r0
 440 0046 58B3     	 cbz r0,.L33
 214:../SEMS_Sources/RSA.c ****         {
 215:../SEMS_Sources/RSA.c ****             break;
 216:../SEMS_Sources/RSA.c ****         }
 217:../SEMS_Sources/RSA.c **** 
 218:../SEMS_Sources/RSA.c ****         /**
 219:../SEMS_Sources/RSA.c ****          * 2. Verify RSA signature using public key from host
 220:../SEMS_Sources/RSA.c ****          */
 221:../SEMS_Sources/RSA.c ****         optiga_lib_status = OPTIGA_LIB_BUSY;
 441              	 .loc 1 221 0
 442 0048 254D     	 ldr r5,.L47+20
 222:../SEMS_Sources/RSA.c **** 
 223:../SEMS_Sources/RSA.c **** 
 224:../SEMS_Sources/RSA.c ****         return_status = optiga_crypt_rsa_verify (me,
 443              	 .loc 1 224 0
 444 004a 0097     	 str r7,[sp]
 445 004c 08AB     	 add r3,sp,#32
 221:../SEMS_Sources/RSA.c **** 
 446              	 .loc 1 221 0
 447 004e 0127     	 movs r7,#1
 448              	.LVL40:
 449              	 .loc 1 224 0
 450 0050 0393     	 str r3,[sp,#12]
 451 0052 CDF80480 	 str r8,[sp,#4]
 452 0056 0494     	 str r4,[sp,#16]
 453 0058 0297     	 str r7,[sp,#8]
 454 005a 0AAA     	 add r2,sp,#40
 455 005c 3946     	 mov r1,r7
 456 005e 2023     	 movs r3,#32
 221:../SEMS_Sources/RSA.c **** 
 457              	 .loc 1 221 0
 458 0060 2F80     	 strh r7,[r5]
 459              	 .loc 1 224 0
 460 0062 FFF7FEFF 	 bl optiga_crypt_rsa_verify
 461              	.LVL41:
 225:../SEMS_Sources/RSA.c ****                                                  OPTIGA_RSASSA_PKCS1_V15_SHA256,
 226:../SEMS_Sources/RSA.c **** 												 hashed_digest,
 227:../SEMS_Sources/RSA.c ****                                                  sizeof(hashed_digest),
 228:../SEMS_Sources/RSA.c **** 												 signature,
 229:../SEMS_Sources/RSA.c **** 												 signature_length,
 230:../SEMS_Sources/RSA.c ****                                                  OPTIGA_CRYPT_HOST_DATA,
 231:../SEMS_Sources/RSA.c ****                                                  &public_key_details,
 232:../SEMS_Sources/RSA.c ****                                                  0x0000);
 233:../SEMS_Sources/RSA.c **** 
 234:../SEMS_Sources/RSA.c ****         WAIT_AND_CHECK_STATUS(return_status, optiga_lib_status);
 462              	 .loc 1 234 0
 463 0066 40B1     	 cbz r0,.L35
 464              	.LVL42:
 235:../SEMS_Sources/RSA.c **** 
 236:../SEMS_Sources/RSA.c ****         // 0 -> succes
 237:../SEMS_Sources/RSA.c ****         // 082c -> failed
 238:../SEMS_Sources/RSA.c ****         succes = !return_status;
 239:../SEMS_Sources/RSA.c **** 
 240:../SEMS_Sources/RSA.c **** 
 241:../SEMS_Sources/RSA.c ****         READ_PERFORMANCE_MEASUREMENT(time_taken);
 242:../SEMS_Sources/RSA.c **** 
 243:../SEMS_Sources/RSA.c ****         return_status = OPTIGA_LIB_SUCCESS;
 244:../SEMS_Sources/RSA.c ****     } while (FALSE);
 245:../SEMS_Sources/RSA.c ****     OPTIGA_EXAMPLE_LOG_STATUS(return_status);
 246:../SEMS_Sources/RSA.c **** 
 247:../SEMS_Sources/RSA.c **** #ifndef OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 248:../SEMS_Sources/RSA.c ****     /**
 249:../SEMS_Sources/RSA.c ****      * Close the application on OPTIGA after all the operations are executed
 250:../SEMS_Sources/RSA.c ****      * using optiga_util_close_application
 251:../SEMS_Sources/RSA.c ****      */
 252:../SEMS_Sources/RSA.c ****     example_optiga_deinit();
 465              	 .loc 1 252 0
 466 0068 FFF7FEFF 	 bl example_optiga_deinit
 467              	.LVL43:
 468              	.L39:
 253:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 254:../SEMS_Sources/RSA.c ****     OPTIGA_EXAMPLE_LOG_PERFORMANCE_VALUE(time_taken, return_status);
 255:../SEMS_Sources/RSA.c **** 
 256:../SEMS_Sources/RSA.c ****     if (me)
 257:../SEMS_Sources/RSA.c ****     {
 258:../SEMS_Sources/RSA.c ****         //Destroy the instance after the completion of usecase if not required.
 259:../SEMS_Sources/RSA.c ****         return_status = optiga_crypt_destroy(me);
 469              	 .loc 1 259 0
 470 006c 3046     	 mov r0,r6
 471 006e FFF7FEFF 	 bl optiga_crypt_destroy
 472              	.LVL44:
 260:../SEMS_Sources/RSA.c **** 
 261:../SEMS_Sources/RSA.c **** 
 262:../SEMS_Sources/RSA.c ****     }
 263:../SEMS_Sources/RSA.c ****     return succes;
 264:../SEMS_Sources/RSA.c **** }
 473              	 .loc 1 264 0
 474 0072 2046     	 mov r0,r4
 475 0074 12B0     	 add sp,sp,#72
 476              	.LCFI11:
 477              	 .cfi_remember_state
 478              	 .cfi_def_cfa_offset 24
 479              	 
 480 0076 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 481              	.LVL45:
 482              	.L35:
 483              	.LCFI12:
 484              	 .cfi_restore_state
 234:../SEMS_Sources/RSA.c **** 
 485              	 .loc 1 234 0 discriminator 1
 486 007a 2B88     	 ldrh r3,[r5]
 487 007c 184A     	 ldr r2,.L47+20
 488 007e 9BB2     	 uxth r3,r3
 489 0080 012B     	 cmp r3,#1
 490 0082 FAD0     	 beq .L35
 234:../SEMS_Sources/RSA.c **** 
 491              	 .loc 1 234 0 is_stmt 0 discriminator 2
 492 0084 1188     	 ldrh r1,[r2]
 493 0086 89B2     	 uxth r1,r1
 494 0088 99B1     	 cbz r1,.L36
 234:../SEMS_Sources/RSA.c **** 
 495              	 .loc 1 234 0 discriminator 3
 496 008a 1488     	 ldrh r4,[r2]
 497 008c A4B2     	 uxth r4,r4
 498              	.LVL46:
 252:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 499              	 .loc 1 252 0 is_stmt 1 discriminator 3
 500 008e FFF7FEFF 	 bl example_optiga_deinit
 501              	.LVL47:
 254:../SEMS_Sources/RSA.c **** 
 502              	 .loc 1 254 0 discriminator 3
 503 0092 64B9     	 cbnz r4,.L46
 504              	.LVL48:
 254:../SEMS_Sources/RSA.c **** 
 505              	 .loc 1 254 0 is_stmt 0 discriminator 1
 506 0094 1349     	 ldr r1,.L47+24
 507 0096 079A     	 ldr r2,[sp,#28]
 508 0098 1348     	 ldr r0,.L47+28
 509 009a FFF7FEFF 	 bl sprintf
 510              	.LVL49:
 511 009e E5E7     	 b .L39
 512              	.LVL50:
 513              	.L33:
 252:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 514              	 .loc 1 252 0 is_stmt 1
 515 00a0 FFF7FEFF 	 bl example_optiga_deinit
 516              	.LVL51:
 517 00a4 3446     	 mov r4,r6
 518              	 .loc 1 264 0
 519 00a6 2046     	 mov r0,r4
 520 00a8 12B0     	 add sp,sp,#72
 521              	.LCFI13:
 522              	 .cfi_remember_state
 523              	 .cfi_def_cfa_offset 24
 524              	 
 525 00aa BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 526              	.LVL52:
 527              	.L46:
 528              	.LCFI14:
 529              	 .cfi_restore_state
 173:../SEMS_Sources/RSA.c **** 	uint8_t hashed_digest[32];
 530              	 .loc 1 173 0
 531 00ae 0024     	 movs r4,#0
 532              	.LVL53:
 533 00b0 DCE7     	 b .L39
 534              	.LVL54:
 535              	.L36:
 241:../SEMS_Sources/RSA.c **** 
 536              	 .loc 1 241 0
 537 00b2 07A8     	 add r0,sp,#28
 538              	.LVL55:
 539 00b4 FFF7FEFF 	 bl example_performance_measurement
 540              	.LVL56:
 252:../SEMS_Sources/RSA.c **** #endif //OPTIGA_INIT_DEINIT_DONE_EXCLUSIVELY
 541              	 .loc 1 252 0
 542 00b8 FFF7FEFF 	 bl example_optiga_deinit
 543              	.LVL57:
 254:../SEMS_Sources/RSA.c **** 
 544              	 .loc 1 254 0
 545 00bc 0949     	 ldr r1,.L47+24
 546 00be 079A     	 ldr r2,[sp,#28]
 547 00c0 0948     	 ldr r0,.L47+28
 238:../SEMS_Sources/RSA.c **** 
 548              	 .loc 1 238 0
 549 00c2 0124     	 movs r4,#1
 550              	.LVL58:
 254:../SEMS_Sources/RSA.c **** 
 551              	 .loc 1 254 0
 552 00c4 FFF7FEFF 	 bl sprintf
 553              	.LVL59:
 554 00c8 D0E7     	 b .L39
 555              	.L48:
 556 00ca 00BF     	 .align 2
 557              	.L47:
 558 00cc 00000000 	 .word .LANCHOR4
 559 00d0 00000000 	 .word .LANCHOR3
 560 00d4 00000000 	 .word .LANCHOR1
 561 00d8 00000000 	 .word .LANCHOR2
 562 00dc 00000000 	 .word optiga_crypt_callback
 563 00e0 00000000 	 .word .LANCHOR0
 564 00e4 00000000 	 .word .LC0
 565 00e8 00000000 	 .word performance_buffer_string
 566              	 .cfi_endproc
 567              	.LFE457:
 569              	 .section .bss.rsa_public_key,"aw",%nobits
 570              	 .align 2
 571              	 .set .LANCHOR3,.+0
 574              	rsa_public_key:
 575 0000 00000000 	 .space 150
 575      00000000 
 575      00000000 
 575      00000000 
 575      00000000 
 576 0096 0000     	 .section .rodata.str1.4,"aMS",%progbits,1
 577              	 .align 2
 578              	.LC0:
 579 0000 4578616D 	 .ascii "Example takes %d msec\000"
 579      706C6520 
 579      74616B65 
 579      73202564 
 579      206D7365 
 580 0016 0000     	 .section .rodata.rsa_public_key_exponent,"a",%progbits
 581              	 .align 2
 582              	 .set .LANCHOR2,.+0
 585              	rsa_public_key_exponent:
 586 0000 00       	 .byte 0
 587 0001 01       	 .byte 1
 588 0002 00       	 .byte 0
 589 0003 01       	 .byte 1
 590              	 .section .bss.rsa_public_key_length,"aw",%nobits
 591              	 .align 1
 592              	 .set .LANCHOR4,.+0
 595              	rsa_public_key_length:
 596 0000 0000     	 .space 2
 597              	 .section .bss.optiga_lib_status,"aw",%nobits
 598              	 .align 1
 599              	 .set .LANCHOR0,.+0
 602              	optiga_lib_status:
 603 0000 0000     	 .space 2
 604              	 .section .rodata.rsa_public_key_modulus,"a",%progbits
 605              	 .align 2
 606              	 .set .LANCHOR1,.+0
 609              	rsa_public_key_modulus:
 610 0000 D6       	 .byte -42
 611 0001 79       	 .byte 121
 612 0002 78       	 .byte 120
 613 0003 52       	 .byte 82
 614 0004 FD       	 .byte -3
 615 0005 1C       	 .byte 28
 616 0006 66       	 .byte 102
 617 0007 01       	 .byte 1
 618 0008 20       	 .byte 32
 619 0009 6A       	 .byte 106
 620 000a 4A       	 .byte 74
 621 000b 7F       	 .byte 127
 622 000c 24       	 .byte 36
 623 000d 54       	 .byte 84
 624 000e F1       	 .byte -15
 625 000f C2       	 .byte -62
 626 0010 86       	 .byte -122
 627 0011 EB       	 .byte -21
 628 0012 1A       	 .byte 26
 629 0013 C5       	 .byte -59
 630 0014 FF       	 .byte -1
 631 0015 C2       	 .byte -62
 632 0016 EB       	 .byte -21
 633 0017 29       	 .byte 41
 634 0018 E6       	 .byte -26
 635 0019 2A       	 .byte 42
 636 001a 8F       	 .byte -113
 637 001b 3E       	 .byte 62
 638 001c FF       	 .byte -1
 639 001d F1       	 .byte -15
 640 001e 92       	 .byte -110
 641 001f 62       	 .byte 98
 642 0020 FD       	 .byte -3
 643 0021 20       	 .byte 32
 644 0022 EB       	 .byte -21
 645 0023 8C       	 .byte -116
 646 0024 CC       	 .byte -52
 647 0025 A3       	 .byte -93
 648 0026 13       	 .byte 19
 649 0027 4E       	 .byte 78
 650 0028 15       	 .byte 21
 651 0029 28       	 .byte 40
 652 002a 1D       	 .byte 29
 653 002b E3       	 .byte -29
 654 002c 0A       	 .byte 10
 655 002d 1A       	 .byte 26
 656 002e 7B       	 .byte 123
 657 002f 85       	 .byte -123
 658 0030 16       	 .byte 22
 659 0031 C4       	 .byte -60
 660 0032 EA       	 .byte -22
 661 0033 69       	 .byte 105
 662 0034 6F       	 .byte 111
 663 0035 75       	 .byte 117
 664 0036 60       	 .byte 96
 665 0037 43       	 .byte 67
 666 0038 62       	 .byte 98
 667 0039 85       	 .byte -123
 668 003a 2B       	 .byte 43
 669 003b 3C       	 .byte 60
 670 003c B1       	 .byte -79
 671 003d 4A       	 .byte 74
 672 003e BF       	 .byte -65
 673 003f DF       	 .byte -33
 674 0040 B5       	 .byte -75
 675 0041 33       	 .byte 51
 676 0042 00       	 .byte 0
 677 0043 6F       	 .byte 111
 678 0044 4D       	 .byte 77
 679 0045 F7       	 .byte -9
 680 0046 87       	 .byte -121
 681 0047 34       	 .byte 52
 682 0048 B9       	 .byte -71
 683 0049 4A       	 .byte 74
 684 004a F3       	 .byte -13
 685 004b 07       	 .byte 7
 686 004c D6       	 .byte -42
 687 004d 84       	 .byte -124
 688 004e 3E       	 .byte 62
 689 004f 4A       	 .byte 74
 690 0050 9B       	 .byte -101
 691 0051 16       	 .byte 22
 692 0052 DD       	 .byte -35
 693 0053 39       	 .byte 57
 694 0054 FA       	 .byte -6
 695 0055 32       	 .byte 50
 696 0056 7F       	 .byte 127
 697 0057 AA       	 .byte -86
 698 0058 13       	 .byte 19
 699 0059 6A       	 .byte 106
 700 005a DB       	 .byte -37
 701 005b 0D       	 .byte 13
 702 005c 69       	 .byte 105
 703 005d 42       	 .byte 66
 704 005e 16       	 .byte 22
 705 005f F4       	 .byte -12
 706 0060 63       	 .byte 99
 707 0061 EF       	 .byte -17
 708 0062 D4       	 .byte -44
 709 0063 A4       	 .byte -92
 710 0064 B2       	 .byte -78
 711 0065 0E       	 .byte 14
 712 0066 1E       	 .byte 30
 713 0067 D6       	 .byte -42
 714 0068 29       	 .byte 41
 715 0069 11       	 .byte 17
 716 006a FF       	 .byte -1
 717 006b AF       	 .byte -81
 718 006c AC       	 .byte -84
 719 006d 72       	 .byte 114
 720 006e F6       	 .byte -10
 721 006f 3E       	 .byte 62
 722 0070 4C       	 .byte 76
 723 0071 DB       	 .byte -37
 724 0072 0D       	 .byte 13
 725 0073 BC       	 .byte -68
 726 0074 62       	 .byte 98
 727 0075 09       	 .byte 9
 728 0076 E7       	 .byte -25
 729 0077 F6       	 .byte -10
 730 0078 D7       	 .byte -41
 731 0079 44       	 .byte 68
 732 007a 10       	 .byte 16
 733 007b 1B       	 .byte 27
 734 007c 56       	 .byte 86
 735 007d B9       	 .byte -71
 736 007e 42       	 .byte 66
 737 007f 21       	 .byte 33
 738              	 .text
 739              	.Letext0:
 740              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 741              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 742              	 .file 4 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/common/optiga_lib_types.h"
 743              	 .file 5 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/common/optiga_lib_common.h"
 744              	 .file 6 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/cmd/optiga_cmd.h"
 745              	 .file 7 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/optiga_crypt.h"
 746              	 .file 8 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 747              	 .file 9 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usic.h"
 748              	 .file 10 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 749              	 .file 11 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usbd.h"
 750              	 .file 12 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/USBD/usbd.h"
 751              	 .file 13 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/examples/optiga/include/optiga_example.h"
 752              	 .file 14 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Include/core_cm4.h"
 753              	 .file 15 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
 754              	 .file 16 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/USBD/usbd_extern.h"
 755              	 .file 17 "../SEMS_Sources/../SEMS_Headers/Hash.h"
 756              	 .file 18 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RSA.c
    {standard input}:20     .text.optiga_crypt_callback:00000000 $t
    {standard input}:24     .text.optiga_crypt_callback:00000000 optiga_crypt_callback
    {standard input}:40     .text.optiga_crypt_callback:00000008 $d
    {standard input}:45     .text.optiga_crypt_rsa_encrypt_message_wrapper:00000000 $t
    {standard input}:50     .text.optiga_crypt_rsa_encrypt_message_wrapper:00000000 optiga_crypt_rsa_encrypt_message_wrapper
    {standard input}:190    .text.optiga_crypt_rsa_encrypt_message_wrapper:000000ac $d
    {standard input}:200    .text.optiga_crypt_rsa_verify_message_wrapper:00000000 $t
    {standard input}:205    .text.optiga_crypt_rsa_verify_message_wrapper:00000000 optiga_crypt_rsa_verify_message_wrapper
    {standard input}:360    .text.optiga_crypt_rsa_verify_message_wrapper:000000bc $d
    {standard input}:372    .text.optiga_crypt_rsa_verify_wrapper:00000000 $t
    {standard input}:377    .text.optiga_crypt_rsa_verify_wrapper:00000000 optiga_crypt_rsa_verify_wrapper
    {standard input}:558    .text.optiga_crypt_rsa_verify_wrapper:000000cc $d
    {standard input}:570    .bss.rsa_public_key:00000000 $d
    {standard input}:574    .bss.rsa_public_key:00000000 rsa_public_key
    {standard input}:577    .rodata.str1.4:00000000 $d
    {standard input}:581    .rodata.rsa_public_key_exponent:00000000 $d
    {standard input}:585    .rodata.rsa_public_key_exponent:00000000 rsa_public_key_exponent
    {standard input}:591    .bss.rsa_public_key_length:00000000 $d
    {standard input}:595    .bss.rsa_public_key_length:00000000 rsa_public_key_length
    {standard input}:598    .bss.optiga_lib_status:00000000 $d
    {standard input}:602    .bss.optiga_lib_status:00000000 optiga_lib_status
    {standard input}:605    .rodata.rsa_public_key_modulus:00000000 $d
    {standard input}:609    .rodata.rsa_public_key_modulus:00000000 rsa_public_key_modulus
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
example_optiga_init
optiga_crypt_create
example_util_encode_rsa_public_key_in_bit_string_format
optiga_crypt_rsa_encrypt_message
example_optiga_deinit
optiga_crypt_destroy
optiga_crypt_hash_data_wrapper
optiga_crypt_rsa_verify
sprintf
example_performance_measurement
performance_buffer_string
