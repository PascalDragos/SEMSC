   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "Patcher.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.read_request,"ax",%progbits
  20              	 .align 2
  21              	 .global read_request
  22              	 .thumb
  23              	 .thumb_func
  25              	read_request:
  26              	.LFB454:
  27              	 .file 1 "../SEMS_Sources/Patcher.c"
   1:../SEMS_Sources/Patcher.c **** #include <SEMS_Headers/Skey.h>
   2:../SEMS_Sources/Patcher.c **** #include "../SEMS_Headers/Patcher.h"
   3:../SEMS_Sources/Patcher.c **** #include "../SEMS_Headers/Util.h"
   4:../SEMS_Sources/Patcher.c **** 
   5:../SEMS_Sources/Patcher.c **** #include "../SEMS_Headers/SymEncrypt.h"
   6:../SEMS_Sources/Patcher.c **** #include "../SEMS_Headers/Hash.h"
   7:../SEMS_Sources/Patcher.c **** #include "../SEMS_Headers/Nonce.h"
   8:../SEMS_Sources/Patcher.c **** 
   9:../SEMS_Sources/Patcher.c **** 
  10:../SEMS_Sources/Patcher.c **** 
  11:../SEMS_Sources/Patcher.c **** extern pal_logger_t logger_console;
  12:../SEMS_Sources/Patcher.c **** extern uint32_t user_token;
  13:../SEMS_Sources/Patcher.c **** 
  14:../SEMS_Sources/Patcher.c **** 
  15:../SEMS_Sources/Patcher.c **** uint8_t read_request(uint8_t command[], uint8_t is_secure_unlock, uint8_t is_secure_com)
  16:../SEMS_Sources/Patcher.c **** {
  28              	 .loc 1 16 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 20
  36              	 .cfi_offset 4,-20
  37              	 .cfi_offset 5,-16
  38              	 .cfi_offset 6,-12
  39              	 .cfi_offset 7,-8
  40              	 .cfi_offset 14,-4
  17:../SEMS_Sources/Patcher.c **** 	uint8_t is_invalid_req = false;
  18:../SEMS_Sources/Patcher.c **** 
  19:../SEMS_Sources/Patcher.c **** 
  20:../SEMS_Sources/Patcher.c **** 	if (0 == pal_logger_read(&logger_console, command, 32))
  41              	 .loc 1 20 0
  42 0002 0146     	 mov r1,r0
  43              	.LVL1:
  16:../SEMS_Sources/Patcher.c **** 	uint8_t is_invalid_req = false;
  44              	 .loc 1 16 0
  45 0004 93B0     	 sub sp,sp,#76
  46              	.LCFI1:
  47              	 .cfi_def_cfa_offset 96
  16:../SEMS_Sources/Patcher.c **** 	uint8_t is_invalid_req = false;
  48              	 .loc 1 16 0
  49 0006 0546     	 mov r5,r0
  50 0008 1446     	 mov r4,r2
  51              	 .loc 1 20 0
  52 000a 3D48     	 ldr r0,.L17
  53              	.LVL2:
  54 000c 2022     	 movs r2,#32
  55              	.LVL3:
  56 000e FFF7FEFF 	 bl pal_logger_read
  57              	.LVL4:
  58 0012 0346     	 mov r3,r0
  59 0014 0028     	 cmp r0,#0
  60 0016 58D1     	 bne .L8
  21:../SEMS_Sources/Patcher.c **** 	{
  22:../SEMS_Sources/Patcher.c **** 		if('U' == command[0])
  61              	 .loc 1 22 0
  62 0018 2A78     	 ldrb r2,[r5]
  63 001a 552A     	 cmp r2,#85
  64 001c 58D0     	 beq .L9
  23:../SEMS_Sources/Patcher.c **** 		{
  24:../SEMS_Sources/Patcher.c **** 			// nothing to do, sec unlock will be called
  25:../SEMS_Sources/Patcher.c **** 
  26:../SEMS_Sources/Patcher.c **** 		}
  27:../SEMS_Sources/Patcher.c **** 		else
  28:../SEMS_Sources/Patcher.c **** 		{
  29:../SEMS_Sources/Patcher.c **** 			if (0 == is_secure_com)
  65              	 .loc 1 29 0
  66 001e 84B9     	 cbnz r4,.L3
  67              	.LVL5:
  68              	.LBB2:
  30:../SEMS_Sources/Patcher.c **** 			{
  31:../SEMS_Sources/Patcher.c **** 				uint8_t *received_user_token_start;
  32:../SEMS_Sources/Patcher.c **** 				uint32_t received_user_token;
  33:../SEMS_Sources/Patcher.c **** 				received_user_token_start = command + 16;
  34:../SEMS_Sources/Patcher.c **** 				received_user_token = (received_user_token_start[0] << 24)+
  35:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[1] << 16)+
  69              	 .loc 1 35 0
  70 0020 697C     	 ldrb r1,[r5,#17]
  34:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[1] << 16)+
  71              	 .loc 1 34 0
  72 0022 2C7C     	 ldrb r4,[r5,#16]
  73              	.LVL6:
  36:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[2] <<  8)+
  74              	 .loc 1 36 0
  75 0024 AB7C     	 ldrb r3,[r5,#18]
  76              	.LVL7:
  37:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[3] <<  0);
  38:../SEMS_Sources/Patcher.c **** 
  39:../SEMS_Sources/Patcher.c **** 				if(received_user_token != user_token)
  77              	 .loc 1 39 0
  78 0026 3748     	 ldr r0,.L17+4
  37:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[3] <<  0);
  79              	 .loc 1 37 0
  80 0028 EA7C     	 ldrb r2,[r5,#19]
  81              	 .loc 1 39 0
  82 002a 0068     	 ldr r0,[r0]
  35:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[2] <<  8)+
  83              	 .loc 1 35 0
  84 002c 0904     	 lsls r1,r1,#16
  34:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[1] << 16)+
  85              	 .loc 1 34 0
  86 002e 01EB0461 	 add r1,r1,r4,lsl#24
  35:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[2] <<  8)+
  87              	 .loc 1 35 0
  88 0032 01EB0323 	 add r3,r1,r3,lsl#8
  89              	.LVL8:
  36:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[3] <<  0);
  90              	 .loc 1 36 0
  91 0036 1344     	 add r3,r3,r2
  40:../SEMS_Sources/Patcher.c **** 				{
  41:../SEMS_Sources/Patcher.c **** 					is_invalid_req = true;
  92              	 .loc 1 41 0
  93 0038 181A     	 subs r0,r3,r0
  94 003a 18BF     	 it ne
  95 003c 0120     	 movne r0,#1
  96              	.LVL9:
  97              	.L11:
  98              	.LBE2:
  42:../SEMS_Sources/Patcher.c **** 				}
  43:../SEMS_Sources/Patcher.c **** 
  44:../SEMS_Sources/Patcher.c **** 			}
  45:../SEMS_Sources/Patcher.c **** 			else
  46:../SEMS_Sources/Patcher.c **** 			{
  47:../SEMS_Sources/Patcher.c **** 				uint8_t key[32] = {0x01, 0x01, 0x01, 0x01};
  48:../SEMS_Sources/Patcher.c **** 				uint8_t *received_digest_start;
  49:../SEMS_Sources/Patcher.c **** 				uint8_t calculated_digest[32]; //  SHA 256
  50:../SEMS_Sources/Patcher.c **** 				uint8_t *received_user_token_start;
  51:../SEMS_Sources/Patcher.c **** 				uint32_t received_user_token;
  52:../SEMS_Sources/Patcher.c **** 				uint8_t *received_user_nonce_start;
  53:../SEMS_Sources/Patcher.c **** 				uint8_t nonce[4];
  54:../SEMS_Sources/Patcher.c **** 				uint16_t optiga_key_oid = 0xF1E0;
  55:../SEMS_Sources/Patcher.c **** 				uint16_t optiga_counter_oid = 0xE120;
  56:../SEMS_Sources/Patcher.c **** 
  57:../SEMS_Sources/Patcher.c **** 				// Extract Hash
  58:../SEMS_Sources/Patcher.c **** 				received_digest_start = command + 24;  // last 8 bytes of the SHA256(Ciphertext)
  59:../SEMS_Sources/Patcher.c **** 
  60:../SEMS_Sources/Patcher.c **** 				// Calculate Hash
  61:../SEMS_Sources/Patcher.c **** 				optiga_crypt_hash_data_wrapper(command, 24, calculated_digest); // SHA256(Ciphertext)
  62:../SEMS_Sources/Patcher.c **** 
  63:../SEMS_Sources/Patcher.c **** 				// Compare digests
  64:../SEMS_Sources/Patcher.c **** 				if(0 != memcmp(received_digest_start, calculated_digest + 24, 8))  // compare 8 bytes
  65:../SEMS_Sources/Patcher.c **** 				{
  66:../SEMS_Sources/Patcher.c **** 					is_invalid_req = true;
  67:../SEMS_Sources/Patcher.c **** 				}
  68:../SEMS_Sources/Patcher.c **** 
  69:../SEMS_Sources/Patcher.c **** 				// Retrive Session Key
  70:../SEMS_Sources/Patcher.c **** 				optiga_util_read_shared_key(optiga_key_oid, key, sizeof(key));  // sesion key from Secure Comm 
  71:../SEMS_Sources/Patcher.c **** 
  72:../SEMS_Sources/Patcher.c **** 				// Decrypt ciphertext
  73:../SEMS_Sources/Patcher.c **** 				stream_enc(command, key, 24);
  74:../SEMS_Sources/Patcher.c **** 
  75:../SEMS_Sources/Patcher.c **** 				// Extract Token
  76:../SEMS_Sources/Patcher.c **** 
  77:../SEMS_Sources/Patcher.c **** 				received_user_token_start = command + 16;
  78:../SEMS_Sources/Patcher.c **** 				received_user_token = (received_user_token_start[0] << 24)+
  79:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[1] << 16)+
  80:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[2] <<  8)+
  81:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[3] <<  0);
  82:../SEMS_Sources/Patcher.c **** 
  83:../SEMS_Sources/Patcher.c **** 				if(received_user_token != user_token)
  84:../SEMS_Sources/Patcher.c **** 				{
  85:../SEMS_Sources/Patcher.c **** 					is_invalid_req = true;
  86:../SEMS_Sources/Patcher.c **** 				}
  87:../SEMS_Sources/Patcher.c **** 
  88:../SEMS_Sources/Patcher.c **** 				// Extract Nonce
  89:../SEMS_Sources/Patcher.c **** 				received_user_nonce_start = command + 20;
  90:../SEMS_Sources/Patcher.c **** 
  91:../SEMS_Sources/Patcher.c **** 
  92:../SEMS_Sources/Patcher.c **** 				// Read Nonce from Optiga
  93:../SEMS_Sources/Patcher.c **** 				optiga_util_read_nonce(optiga_counter_oid, nonce, sizeof(nonce));
  94:../SEMS_Sources/Patcher.c **** 
  95:../SEMS_Sources/Patcher.c **** 				// Compare Nonces
  96:../SEMS_Sources/Patcher.c **** 				// recv_nonced trebuie sa fie mai mare decat nonce
  97:../SEMS_Sources/Patcher.c **** 				// daca e mai mare sau egal, invalid
  98:../SEMS_Sources/Patcher.c **** 				if(0 >= memcmp(received_user_nonce_start, nonce, sizeof(nonce)))
  99:../SEMS_Sources/Patcher.c **** 				{
 100:../SEMS_Sources/Patcher.c **** 					is_invalid_req = true;
 101:../SEMS_Sources/Patcher.c **** 				}
 102:../SEMS_Sources/Patcher.c **** 
 103:../SEMS_Sources/Patcher.c **** 				if(false == is_invalid_req)
 104:../SEMS_Sources/Patcher.c **** 				{
 105:../SEMS_Sources/Patcher.c **** 					optiga_util_update_count_wrapper(optiga_counter_oid, 1);
 106:../SEMS_Sources/Patcher.c **** 				}
 107:../SEMS_Sources/Patcher.c **** 				// Command will be OUT variable also
 108:../SEMS_Sources/Patcher.c **** 			}
 109:../SEMS_Sources/Patcher.c **** 		}
 110:../SEMS_Sources/Patcher.c **** 
 111:../SEMS_Sources/Patcher.c **** 	}
 112:../SEMS_Sources/Patcher.c **** 	else
 113:../SEMS_Sources/Patcher.c **** 	{
 114:../SEMS_Sources/Patcher.c **** 		is_invalid_req = true;
 115:../SEMS_Sources/Patcher.c **** 	}
 116:../SEMS_Sources/Patcher.c **** 	return is_invalid_req;
 117:../SEMS_Sources/Patcher.c **** }
  99              	 .loc 1 117 0
 100 003e 13B0     	 add sp,sp,#76
 101              	.LCFI2:
 102              	 .cfi_remember_state
 103              	 .cfi_def_cfa_offset 20
 104              	 
 105 0040 F0BD     	 pop {r4,r5,r6,r7,pc}
 106              	.LVL10:
 107              	.L3:
 108              	.LCFI3:
 109              	 .cfi_restore_state
 110              	.LBB3:
  47:../SEMS_Sources/Patcher.c **** 				uint8_t *received_digest_start;
 111              	 .loc 1 47 0
 112 0042 0126     	 movs r6,#1
  61:../SEMS_Sources/Patcher.c **** 
 113              	 .loc 1 61 0
 114 0044 2846     	 mov r0,r5
 115 0046 1821     	 movs r1,#24
 116 0048 0AAA     	 add r2,sp,#40
  47:../SEMS_Sources/Patcher.c **** 				uint8_t *received_digest_start;
 117              	 .loc 1 47 0
 118 004a 0393     	 str r3,[sp,#12]
 119 004c 0493     	 str r3,[sp,#16]
 120 004e 0593     	 str r3,[sp,#20]
 121 0050 0693     	 str r3,[sp,#24]
 122 0052 0793     	 str r3,[sp,#28]
 123 0054 0893     	 str r3,[sp,#32]
 124 0056 0993     	 str r3,[sp,#36]
 125 0058 8DF80860 	 strb r6,[sp,#8]
 126 005c 8DF80960 	 strb r6,[sp,#9]
 127 0060 8DF80A60 	 strb r6,[sp,#10]
 128 0064 8DF80B60 	 strb r6,[sp,#11]
 129              	.LVL11:
  61:../SEMS_Sources/Patcher.c **** 
 130              	 .loc 1 61 0
 131 0068 FFF7FEFF 	 bl optiga_crypt_hash_data_wrapper
 132              	.LVL12:
  64:../SEMS_Sources/Patcher.c **** 				{
 133              	 .loc 1 64 0
 134 006c 10A9     	 add r1,sp,#64
 135 006e 0822     	 movs r2,#8
 136 0070 05F11800 	 add r0,r5,#24
 137              	.LVL13:
 138 0074 FFF7FEFF 	 bl memcmp
 139              	.LVL14:
  70:../SEMS_Sources/Patcher.c **** 
 140              	 .loc 1 70 0
 141 0078 02A9     	 add r1,sp,#8
 142 007a 2022     	 movs r2,#32
  64:../SEMS_Sources/Patcher.c **** 				{
 143              	 .loc 1 64 0
 144 007c 0446     	 mov r4,r0
 145              	.LVL15:
  70:../SEMS_Sources/Patcher.c **** 
 146              	 .loc 1 70 0
 147 007e 4FF2E010 	 movw r0,#61920
 148              	.LVL16:
 149 0082 FFF7FEFF 	 bl optiga_util_read_shared_key
 150              	.LVL17:
  73:../SEMS_Sources/Patcher.c **** 
 151              	 .loc 1 73 0
 152 0086 2846     	 mov r0,r5
 153 0088 02A9     	 add r1,sp,#8
 154 008a 1822     	 movs r2,#24
 155 008c FFF7FEFF 	 bl stream_enc
 156              	.LVL18:
  79:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[2] <<  8)+
 157              	 .loc 1 79 0
 158 0090 697C     	 ldrb r1,[r5,#17]
  78:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[1] << 16)+
 159              	 .loc 1 78 0
 160 0092 2A7C     	 ldrb r2,[r5,#16]
 161              	.LVL19:
  80:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[3] <<  0);
 162              	 .loc 1 80 0
 163 0094 AF7C     	 ldrb r7,[r5,#18]
 164              	.LVL20:
  83:../SEMS_Sources/Patcher.c **** 				{
 165              	 .loc 1 83 0
 166 0096 1B48     	 ldr r0,.L17+4
  81:../SEMS_Sources/Patcher.c **** 
 167              	 .loc 1 81 0
 168 0098 EB7C     	 ldrb r3,[r5,#19]
  83:../SEMS_Sources/Patcher.c **** 				{
 169              	 .loc 1 83 0
 170 009a 0068     	 ldr r0,[r0]
  79:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[2] <<  8)+
 171              	 .loc 1 79 0
 172 009c 0904     	 lsls r1,r1,#16
  78:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[1] << 16)+
 173              	 .loc 1 78 0
 174 009e 01EB0261 	 add r1,r1,r2,lsl#24
  79:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[2] <<  8)+
 175              	 .loc 1 79 0
 176 00a2 01EB0722 	 add r2,r1,r7,lsl#8
 177              	.LVL21:
  80:../SEMS_Sources/Patcher.c **** 							 (received_user_token_start[3] <<  0);
 178              	 .loc 1 80 0
 179 00a6 1A44     	 add r2,r2,r3
  83:../SEMS_Sources/Patcher.c **** 				{
 180              	 .loc 1 83 0
 181 00a8 8242     	 cmp r2,r0
  93:../SEMS_Sources/Patcher.c **** 
 182              	 .loc 1 93 0
 183 00aa 01A9     	 add r1,sp,#4
 184 00ac 4EF22010 	 movw r0,#57632
 185 00b0 4FF00402 	 mov r2,#4
  83:../SEMS_Sources/Patcher.c **** 				{
 186              	 .loc 1 83 0
 187 00b4 0ED0     	 beq .L15
 188              	.LVL22:
  93:../SEMS_Sources/Patcher.c **** 
 189              	 .loc 1 93 0
 190 00b6 FFF7FEFF 	 bl optiga_util_read_nonce
 191              	.LVL23:
  98:../SEMS_Sources/Patcher.c **** 				{
 192              	 .loc 1 98 0
 193 00ba 01A9     	 add r1,sp,#4
 194 00bc 05F11400 	 add r0,r5,#20
 195              	.LVL24:
 196 00c0 0422     	 movs r2,#4
 197 00c2 FFF7FEFF 	 bl memcmp
 198              	.LVL25:
 199 00c6 0028     	 cmp r0,#0
 200 00c8 0FDC     	 bgt .L13
 201              	.LVL26:
 202              	.L8:
 203              	.LBE3:
 114:../SEMS_Sources/Patcher.c **** 	}
 204              	 .loc 1 114 0
 205 00ca 0120     	 movs r0,#1
 206              	 .loc 1 117 0
 207 00cc 13B0     	 add sp,sp,#76
 208              	.LCFI4:
 209              	 .cfi_remember_state
 210              	 .cfi_def_cfa_offset 20
 211              	 
 212 00ce F0BD     	 pop {r4,r5,r6,r7,pc}
 213              	.LVL27:
 214              	.L9:
 215              	.LCFI5:
 216              	 .cfi_restore_state
 217 00d0 13B0     	 add sp,sp,#76
 218              	.LCFI6:
 219              	 .cfi_remember_state
 220              	 .cfi_def_cfa_offset 20
 221              	 
 222 00d2 F0BD     	 pop {r4,r5,r6,r7,pc}
 223              	.LVL28:
 224              	.L15:
 225              	.LCFI7:
 226              	 .cfi_restore_state
 227              	.LBB4:
  93:../SEMS_Sources/Patcher.c **** 
 228              	 .loc 1 93 0
 229 00d4 FFF7FEFF 	 bl optiga_util_read_nonce
 230              	.LVL29:
  98:../SEMS_Sources/Patcher.c **** 				{
 231              	 .loc 1 98 0
 232 00d8 01A9     	 add r1,sp,#4
 233 00da 05F11400 	 add r0,r5,#20
 234              	.LVL30:
 235 00de 0422     	 movs r2,#4
 236 00e0 FFF7FEFF 	 bl memcmp
 237              	.LVL31:
 238 00e4 0028     	 cmp r0,#0
 239 00e6 F0DD     	 ble .L8
 103:../SEMS_Sources/Patcher.c **** 				{
 240              	 .loc 1 103 0
 241 00e8 14B1     	 cbz r4,.L16
 242              	.LVL32:
 243              	.L13:
  85:../SEMS_Sources/Patcher.c **** 				}
 244              	 .loc 1 85 0
 245 00ea 3046     	 mov r0,r6
 246              	.LVL33:
 247              	.LBE4:
 248              	 .loc 1 117 0
 249 00ec 13B0     	 add sp,sp,#76
 250              	.LCFI8:
 251              	 .cfi_remember_state
 252              	 .cfi_def_cfa_offset 20
 253              	 
 254 00ee F0BD     	 pop {r4,r5,r6,r7,pc}
 255              	.LVL34:
 256              	.L16:
 257              	.LCFI9:
 258              	 .cfi_restore_state
 259              	.LBB5:
 105:../SEMS_Sources/Patcher.c **** 				}
 260              	 .loc 1 105 0
 261 00f0 4EF22010 	 movw r0,#57632
 262 00f4 3146     	 mov r1,r6
 263 00f6 FFF7FEFF 	 bl optiga_util_update_count_wrapper
 264              	.LVL35:
 265 00fa 2046     	 mov r0,r4
 266 00fc 9FE7     	 b .L11
 267              	.L18:
 268 00fe 00BF     	 .align 2
 269              	.L17:
 270 0100 00000000 	 .word logger_console
 271 0104 00000000 	 .word user_token
 272              	.LBE5:
 273              	 .cfi_endproc
 274              	.LFE454:
 276              	 .section .text.write_request,"ax",%progbits
 277              	 .align 2
 278              	 .global write_request
 279              	 .thumb
 280              	 .thumb_func
 282              	write_request:
 283              	.LFB455:
 118:../SEMS_Sources/Patcher.c **** 
 119:../SEMS_Sources/Patcher.c **** 
 120:../SEMS_Sources/Patcher.c **** 
 121:../SEMS_Sources/Patcher.c **** 
 122:../SEMS_Sources/Patcher.c **** uint8_t write_request(uint8_t msg[], uint8_t is_secure_com)
 123:../SEMS_Sources/Patcher.c **** {
 284              	 .loc 1 123 0
 285              	 .cfi_startproc
 286              	 
 287              	 
 288              	.LVL36:
 289 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 290              	.LCFI10:
 291              	 .cfi_def_cfa_offset 20
 292              	 .cfi_offset 4,-20
 293              	 .cfi_offset 5,-16
 294              	 .cfi_offset 6,-12
 295              	 .cfi_offset 7,-8
 296              	 .cfi_offset 14,-4
 297 0002 0446     	 mov r4,r0
 298 0004 9BB0     	 sub sp,sp,#108
 299              	.LCFI11:
 300              	 .cfi_def_cfa_offset 128
 124:../SEMS_Sources/Patcher.c **** 	if(0 == is_secure_com)
 301              	 .loc 1 124 0
 302 0006 0D46     	 mov r5,r1
 303 0008 0029     	 cmp r1,#0
 304 000a 48D0     	 beq .L23
 305              	.LBB6:
 125:../SEMS_Sources/Patcher.c **** 	{
 126:../SEMS_Sources/Patcher.c **** 		uint8_t response[32] ={0};
 127:../SEMS_Sources/Patcher.c **** 		uint8_t send_user_token[4];
 128:../SEMS_Sources/Patcher.c **** 
 129:../SEMS_Sources/Patcher.c **** 
 130:../SEMS_Sources/Patcher.c **** 		send_user_token[0] = (user_token >> 24) & 0xFF;
 131:../SEMS_Sources/Patcher.c **** 				send_user_token[1] = (user_token >> 16) & 0xFF;
 132:../SEMS_Sources/Patcher.c **** 				send_user_token[2] = (user_token >>  8) & 0xFF;
 133:../SEMS_Sources/Patcher.c **** 				send_user_token[3] = (user_token >>  0) & 0xFF;
 134:../SEMS_Sources/Patcher.c **** 
 135:../SEMS_Sources/Patcher.c **** 		memcpy(response, msg, 16);
 136:../SEMS_Sources/Patcher.c **** 		memcpy(response + 16, send_user_token, 4);
 137:../SEMS_Sources/Patcher.c **** 
 138:../SEMS_Sources/Patcher.c **** 		optiga_lib_print_bytes(response, 32);
 139:../SEMS_Sources/Patcher.c **** 	}
 140:../SEMS_Sources/Patcher.c **** 	else
 141:../SEMS_Sources/Patcher.c **** 	{
 142:../SEMS_Sources/Patcher.c **** 		uint8_t response[32];
 143:../SEMS_Sources/Patcher.c **** 		uint8_t nonce[4];
 144:../SEMS_Sources/Patcher.c **** 		uint8_t send_user_token[4];
 145:../SEMS_Sources/Patcher.c **** 		uint8_t calculated_digest[32];
 146:../SEMS_Sources/Patcher.c **** 		uint8_t key[32] = {0x01, 0x01, 0x01, 0x01};
 306              	 .loc 1 146 0
 307 000c 0023     	 movs r3,#0
 308 000e 0125     	 movs r5,#1
 147:../SEMS_Sources/Patcher.c **** 		uint16_t optiga_key_oid = 0xF1E0;
 148:../SEMS_Sources/Patcher.c **** 		uint16_t optiga_counter_oid = 0xE120;
 149:../SEMS_Sources/Patcher.c **** 
 150:../SEMS_Sources/Patcher.c **** 
 151:../SEMS_Sources/Patcher.c **** 
 152:../SEMS_Sources/Patcher.c **** 		// Read nonce
 153:../SEMS_Sources/Patcher.c **** 		optiga_util_read_nonce(optiga_counter_oid, nonce, sizeof(nonce));
 309              	 .loc 1 153 0
 310 0010 01A9     	 add r1,sp,#4
 311              	.LVL37:
 312 0012 4EF22010 	 movw r0,#57632
 313              	.LVL38:
 314 0016 0422     	 movs r2,#4
 146:../SEMS_Sources/Patcher.c **** 		uint16_t optiga_key_oid = 0xF1E0;
 315              	 .loc 1 146 0
 316 0018 1393     	 str r3,[sp,#76]
 317 001a 1493     	 str r3,[sp,#80]
 318 001c 1593     	 str r3,[sp,#84]
 319 001e 1693     	 str r3,[sp,#88]
 320 0020 1793     	 str r3,[sp,#92]
 321 0022 1893     	 str r3,[sp,#96]
 322 0024 1993     	 str r3,[sp,#100]
 323 0026 8DF84850 	 strb r5,[sp,#72]
 324 002a 8DF84950 	 strb r5,[sp,#73]
 325 002e 8DF84A50 	 strb r5,[sp,#74]
 326 0032 8DF84B50 	 strb r5,[sp,#75]
 327              	.LVL39:
 328              	 .loc 1 153 0
 329 0036 FFF7FEFF 	 bl optiga_util_read_nonce
 330              	.LVL40:
 154:../SEMS_Sources/Patcher.c **** 
 155:../SEMS_Sources/Patcher.c **** 		send_user_token[0] = (user_token >> 24) & 0xFF;
 331              	 .loc 1 155 0
 332 003a 274B     	 ldr r3,.L24
 156:../SEMS_Sources/Patcher.c **** 		send_user_token[1] = (user_token >> 16) & 0xFF;
 157:../SEMS_Sources/Patcher.c **** 		send_user_token[2] = (user_token >>  8) & 0xFF;
 158:../SEMS_Sources/Patcher.c **** 		send_user_token[3] = (user_token >>  0) & 0xFF;
 159:../SEMS_Sources/Patcher.c **** 
 160:../SEMS_Sources/Patcher.c **** 
 161:../SEMS_Sources/Patcher.c **** 		// First Pack
 162:../SEMS_Sources/Patcher.c **** 		memcpy(response, msg, 16);
 333              	 .loc 1 162 0
 334 003c 2068     	 ldr r0,[r4]
 155:../SEMS_Sources/Patcher.c **** 		send_user_token[1] = (user_token >> 16) & 0xFF;
 335              	 .loc 1 155 0
 336 003e 1D68     	 ldr r5,[r3]
 337              	.LVL41:
 338              	 .loc 1 162 0
 339 0040 6168     	 ldr r1,[r4,#4]
 340 0042 A268     	 ldr r2,[r4,#8]
 341 0044 E368     	 ldr r3,[r4,#12]
 163:../SEMS_Sources/Patcher.c **** 		memcpy(response + 16, send_user_token, 4);  // global
 164:../SEMS_Sources/Patcher.c **** 		memcpy(response + 20, nonce, 4);
 342              	 .loc 1 164 0
 343 0046 019E     	 ldr r6,[sp,#4]
 162:../SEMS_Sources/Patcher.c **** 		memcpy(response + 16, send_user_token, 4);  // global
 344              	 .loc 1 162 0
 345 0048 02AC     	 add r4,sp,#8
 346              	.LVL42:
 347 004a 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 155:../SEMS_Sources/Patcher.c **** 		send_user_token[1] = (user_token >> 16) & 0xFF;
 348              	 .loc 1 155 0
 349 004c 2F0E     	 lsrs r7,r5,#24
 157:../SEMS_Sources/Patcher.c **** 		send_user_token[3] = (user_token >>  0) & 0xFF;
 350              	 .loc 1 157 0
 351 004e 2B0A     	 lsrs r3,r5,#8
 165:../SEMS_Sources/Patcher.c **** 
 166:../SEMS_Sources/Patcher.c **** 		// Retrive Session Key
 167:../SEMS_Sources/Patcher.c **** 		optiga_util_read_shared_key(optiga_key_oid, key, sizeof(key));  // sesion key from Secure Comm ac
 352              	 .loc 1 167 0
 353 0050 12A9     	 add r1,sp,#72
 156:../SEMS_Sources/Patcher.c **** 		send_user_token[2] = (user_token >>  8) & 0xFF;
 354              	 .loc 1 156 0
 355 0052 2C0C     	 lsrs r4,r5,#16
 356              	 .loc 1 167 0
 357 0054 4FF2E010 	 movw r0,#61920
 358 0058 2022     	 movs r2,#32
 157:../SEMS_Sources/Patcher.c **** 		send_user_token[3] = (user_token >>  0) & 0xFF;
 359              	 .loc 1 157 0
 360 005a 8DF81A30 	 strb r3,[sp,#26]
 155:../SEMS_Sources/Patcher.c **** 		send_user_token[1] = (user_token >> 16) & 0xFF;
 361              	 .loc 1 155 0
 362 005e 8DF81870 	 strb r7,[sp,#24]
 158:../SEMS_Sources/Patcher.c **** 
 363              	 .loc 1 158 0
 364 0062 8DF81B50 	 strb r5,[sp,#27]
 156:../SEMS_Sources/Patcher.c **** 		send_user_token[2] = (user_token >>  8) & 0xFF;
 365              	 .loc 1 156 0
 366 0066 8DF81940 	 strb r4,[sp,#25]
 164:../SEMS_Sources/Patcher.c **** 
 367              	 .loc 1 164 0
 368 006a 0796     	 str r6,[sp,#28]
 369              	 .loc 1 167 0
 370 006c FFF7FEFF 	 bl optiga_util_read_shared_key
 371              	.LVL43:
 168:../SEMS_Sources/Patcher.c **** 
 169:../SEMS_Sources/Patcher.c **** 		// Encrypt ciphertext
 170:../SEMS_Sources/Patcher.c **** 		stream_enc(response, key, 24);
 372              	 .loc 1 170 0
 373 0070 02A8     	 add r0,sp,#8
 374 0072 12A9     	 add r1,sp,#72
 375 0074 1822     	 movs r2,#24
 376 0076 FFF7FEFF 	 bl stream_enc
 377              	.LVL44:
 171:../SEMS_Sources/Patcher.c **** 
 172:../SEMS_Sources/Patcher.c **** 		// Calculate Hash
 173:../SEMS_Sources/Patcher.c **** 		optiga_crypt_hash_data_wrapper(response, 24, calculated_digest); // SHA256(Ciphertext)
 378              	 .loc 1 173 0
 379 007a 02A8     	 add r0,sp,#8
 380 007c 0AAA     	 add r2,sp,#40
 381 007e 1821     	 movs r1,#24
 382 0080 FFF7FEFF 	 bl optiga_crypt_hash_data_wrapper
 383              	.LVL45:
 174:../SEMS_Sources/Patcher.c **** 
 175:../SEMS_Sources/Patcher.c **** 		// Pack the message
 176:../SEMS_Sources/Patcher.c **** 		memcpy(response + 24, calculated_digest + 24, 8);
 384              	 .loc 1 176 0
 385 0084 10AB     	 add r3,sp,#64
 386 0086 93E80300 	 ldmia r3,{r0,r1}
 387 008a 08AB     	 add r3,sp,#32
 388 008c 83E80300 	 stmia r3,{r0,r1}
 177:../SEMS_Sources/Patcher.c **** 
 178:../SEMS_Sources/Patcher.c **** 		optiga_lib_print_bytes(response, 32);
 389              	 .loc 1 178 0
 390 0090 02A8     	 add r0,sp,#8
 391 0092 2021     	 movs r1,#32
 392 0094 FFF7FEFF 	 bl optiga_lib_print_bytes
 393              	.LVL46:
 394              	.LBE6:
 179:../SEMS_Sources/Patcher.c **** 	}
 180:../SEMS_Sources/Patcher.c **** 
 181:../SEMS_Sources/Patcher.c **** 	return true;
 182:../SEMS_Sources/Patcher.c **** }
 395              	 .loc 1 182 0
 396 0098 0120     	 movs r0,#1
 397 009a 1BB0     	 add sp,sp,#108
 398              	.LCFI12:
 399              	 .cfi_remember_state
 400              	 .cfi_def_cfa_offset 20
 401              	 
 402 009c F0BD     	 pop {r4,r5,r6,r7,pc}
 403              	.LVL47:
 404              	.L23:
 405              	.LCFI13:
 406              	 .cfi_restore_state
 407              	.LBB7:
 130:../SEMS_Sources/Patcher.c **** 				send_user_token[1] = (user_token >> 16) & 0xFF;
 408              	 .loc 1 130 0
 409 009e 0E4B     	 ldr r3,.L24
 135:../SEMS_Sources/Patcher.c **** 		memcpy(response + 16, send_user_token, 4);
 410              	 .loc 1 135 0
 411 00a0 6168     	 ldr r1,[r4,#4]
 412              	.LVL48:
 130:../SEMS_Sources/Patcher.c **** 				send_user_token[1] = (user_token >> 16) & 0xFF;
 413              	 .loc 1 130 0
 414 00a2 1E68     	 ldr r6,[r3]
 415              	.LVL49:
 135:../SEMS_Sources/Patcher.c **** 		memcpy(response + 16, send_user_token, 4);
 416              	 .loc 1 135 0
 417 00a4 A268     	 ldr r2,[r4,#8]
 418 00a6 E368     	 ldr r3,[r4,#12]
 419 00a8 0068     	 ldr r0,[r0]
 420              	.LVL50:
 126:../SEMS_Sources/Patcher.c **** 		uint8_t send_user_token[4];
 421              	 .loc 1 126 0
 422 00aa 1795     	 str r5,[sp,#92]
 135:../SEMS_Sources/Patcher.c **** 		memcpy(response + 16, send_user_token, 4);
 423              	 .loc 1 135 0
 424 00ac 12AC     	 add r4,sp,#72
 425              	.LVL51:
 126:../SEMS_Sources/Patcher.c **** 		uint8_t send_user_token[4];
 426              	 .loc 1 126 0
 427 00ae 1895     	 str r5,[sp,#96]
 428 00b0 1995     	 str r5,[sp,#100]
 135:../SEMS_Sources/Patcher.c **** 		memcpy(response + 16, send_user_token, 4);
 429              	 .loc 1 135 0
 430 00b2 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 130:../SEMS_Sources/Patcher.c **** 				send_user_token[1] = (user_token >> 16) & 0xFF;
 431              	 .loc 1 130 0
 432 00b4 350E     	 lsrs r5,r6,#24
 131:../SEMS_Sources/Patcher.c **** 				send_user_token[2] = (user_token >>  8) & 0xFF;
 433              	 .loc 1 131 0
 434 00b6 320C     	 lsrs r2,r6,#16
 138:../SEMS_Sources/Patcher.c **** 	}
 435              	 .loc 1 138 0
 436 00b8 12A8     	 add r0,sp,#72
 132:../SEMS_Sources/Patcher.c **** 				send_user_token[3] = (user_token >>  0) & 0xFF;
 437              	 .loc 1 132 0
 438 00ba 330A     	 lsrs r3,r6,#8
 138:../SEMS_Sources/Patcher.c **** 	}
 439              	 .loc 1 138 0
 440 00bc 2021     	 movs r1,#32
 130:../SEMS_Sources/Patcher.c **** 				send_user_token[1] = (user_token >> 16) & 0xFF;
 441              	 .loc 1 130 0
 442 00be 8DF85850 	 strb r5,[sp,#88]
 133:../SEMS_Sources/Patcher.c **** 
 443              	 .loc 1 133 0
 444 00c2 8DF85B60 	 strb r6,[sp,#91]
 131:../SEMS_Sources/Patcher.c **** 				send_user_token[2] = (user_token >>  8) & 0xFF;
 445              	 .loc 1 131 0
 446 00c6 8DF85920 	 strb r2,[sp,#89]
 132:../SEMS_Sources/Patcher.c **** 				send_user_token[3] = (user_token >>  0) & 0xFF;
 447              	 .loc 1 132 0
 448 00ca 8DF85A30 	 strb r3,[sp,#90]
 138:../SEMS_Sources/Patcher.c **** 	}
 449              	 .loc 1 138 0
 450 00ce FFF7FEFF 	 bl optiga_lib_print_bytes
 451              	.LVL52:
 452              	.LBE7:
 453              	 .loc 1 182 0
 454 00d2 0120     	 movs r0,#1
 455 00d4 1BB0     	 add sp,sp,#108
 456              	.LCFI14:
 457              	 .cfi_def_cfa_offset 20
 458              	 
 459 00d6 F0BD     	 pop {r4,r5,r6,r7,pc}
 460              	.LVL53:
 461              	.L25:
 462              	 .align 2
 463              	.L24:
 464 00d8 00000000 	 .word user_token
 465              	 .cfi_endproc
 466              	.LFE455:
 468              	 .text
 469              	.Letext0:
 470              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 471              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 472              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 473              	 .file 5 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 474              	 .file 6 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 475              	 .file 7 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/XMCLib/inc/xmc_usbd.h"
 476              	 .file 8 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/USBD/usbd.h"
 477              	 .file 9 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/pal/pal.h"
 478              	 .file 10 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/pal/pal_logger.h"
 479              	 .file 11 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Include/core_cm4.h"
 480              	 .file 12 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
 481              	 .file 13 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/common/Dave/Generated/USBD/usbd_extern.h"
 482              	 .file 14 "../SEMS_Sources/../SEMS_Headers/Hash.h"
 483              	 .file 15 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/xmc4800_iot_kit/dave4/SEMS_Headers/Skey.h"
 484              	 .file 16 "../SEMS_Sources/../SEMS_Headers/SymEncrypt.h"
 485              	 .file 17 "../SEMS_Sources/../SEMS_Headers/Nonce.h"
 486              	 .file 18 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\string.h"
 487              	 .file 19 "D:/School/diseratie/SEMS/xmc4800_evaluation_kit/optiga-trust-m/optiga/include/optiga/common/optiga_lib_logger.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Patcher.c
    {standard input}:20     .text.read_request:00000000 $t
    {standard input}:25     .text.read_request:00000000 read_request
    {standard input}:270    .text.read_request:00000100 $d
    {standard input}:277    .text.write_request:00000000 $t
    {standard input}:282    .text.write_request:00000000 write_request
    {standard input}:464    .text.write_request:000000d8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
pal_logger_read
optiga_crypt_hash_data_wrapper
memcmp
optiga_util_read_shared_key
stream_enc
optiga_util_read_nonce
optiga_util_update_count_wrapper
logger_console
user_token
optiga_lib_print_bytes
